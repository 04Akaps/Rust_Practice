{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29","program":"/Users/yuhojin/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tracing_core","--edition=2018","/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=574ba20d3756e857","-C","extra-filename=-574ba20d3756e857","--out-dir","/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/mint/target/rls/debug/deps","-L","dependency=/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/mint/target/rls/debug/deps","--extern","once_cell=/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/mint/target/rls/debug/deps/libonce_cell-9ee1d24d1b7fcda9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/yuhojin/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/mint/target/rls/debug/deps/libtracing_core-574ba20d3756e857.rmeta"},"prelude":{"crate_id":{"name":"tracing_core","disambiguator":[898163407649872628,0]},"crate_root":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src","external_crates":[{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lazy.rs","num":20,"id":{"name":"once_cell","disambiguator":[13350374583655514035,0]}}],"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":0,"byte_end":8979,"line_start":1,"line_end":295,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":8659},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8528,"byte_end":8532,"line_start":269,"line_end":269,"column_start":23,"column_end":27},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8736,"byte_end":8744,"line_start":283,"line_end":283,"column_start":15,"column_end":23},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":962},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8762,"byte_end":8770,"line_start":284,"line_end":284,"column_start":17,"column_end":25},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8783,"byte_end":8788,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8801,"byte_end":8806,"line_start":286,"line_end":286,"column_start":12,"column_end":17},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1249},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8823,"byte_end":8828,"line_start":287,"line_end":287,"column_start":16,"column_end":21},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1267},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8830,"byte_end":8841,"line_start":287,"line_end":287,"column_start":23,"column_end":34},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":597},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8843,"byte_end":8851,"line_start":287,"line_end":287,"column_start":36,"column_end":44},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8870,"byte_end":8880,"line_start":288,"line_end":288,"column_start":17,"column_end":27},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1237},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8911,"byte_end":8915,"line_start":291,"line_end":291,"column_start":26,"column_end":30},"alias_span":null,"name":"Kind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1379},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8929,"byte_end":8937,"line_start":291,"line_end":291,"column_start":44,"column_end":52},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":0,"byte_end":8979,"line_start":1,"line_end":295,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":166},{"krate":0,"index":320},{"krate":0,"index":350},{"krate":0,"index":572},{"krate":0,"index":729},{"krate":0,"index":733},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948}],"decl_id":null,"docs":" Core primitives for `tracing`.","sig":null,"attributes":[{"value":"/ Core primitives for `tracing`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":39,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ structured, event-based diagnostic information. This crate defines the core","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":113,"byte_end":192,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ primitives of `tracing`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":193,"byte_end":221,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":222,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":226,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":251,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`span::Id`] identifies a span within the execution of a program.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":255,"byte_end":326,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":327,"byte_end":330,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * [`Event`] represents a single event within a trace.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":331,"byte_end":388,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":389,"byte_end":392,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Subscriber`], the trait implemented to collect trace data.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":393,"byte_end":459,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":460,"byte_end":463,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * [`Metadata`] and [`Callsite`] provide information describing spans and","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":464,"byte_end":540,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   `Event`s.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":541,"byte_end":556,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":557,"byte_end":560,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [`Field`], [`FieldSet`], [`Value`], and [`ValueSet`] represent the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":561,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/   structured data attached to a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":634,"byte_end":675,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":676,"byte_end":679,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * [`Dispatch`] allows spans and events to be dispatched to `Subscriber`s.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":680,"byte_end":757,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":758,"byte_end":761,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In addition, it defines the global callsite registry and per-thread current","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":762,"byte_end":841,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ dispatcher which other components of the tracing system rely on.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":842,"byte_end":910,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":911,"byte_end":914,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":915,"byte_end":969,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":970,"byte_end":973,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":974,"byte_end":1010,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1015,"byte_end":1027,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Application authors will typically not use this crate directly. Instead,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1032,"byte_end":1108,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ they will use the [`tracing`] crate, which provides a much more","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1109,"byte_end":1176,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ fully-featured API. However, this crate's API will change very infrequently,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1177,"byte_end":1257,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ so it may be used when dependencies must be very stable.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1258,"byte_end":1318,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `Subscriber` implementations may depend on `tracing-core` rather than","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1323,"byte_end":1396,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ `tracing`, as the additional APIs provided by `tracing` are primarily useful","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1397,"byte_end":1477,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ for instrumenting libraries and applications, and are generally not","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1478,"byte_end":1549,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ necessary for `Subscriber` implementations.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1550,"byte_end":1597,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1598,"byte_end":1601,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`tokio-rs/tracing`] repository contains less stable crates designed to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1602,"byte_end":1681,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ be used with the `tracing` ecosystem. It includes a collection of","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1682,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ `Subscriber` implementations, as well as utility and adapter crates.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1752,"byte_end":1824,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1825,"byte_end":1828,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1829,"byte_end":1855,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1856,"byte_end":1859,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The following crate [feature flags] are available:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1860,"byte_end":1914,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1915,"byte_end":1918,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1919,"byte_end":1989,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1990,"byte_end":1993,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":1994,"byte_end":2072,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2073,"byte_end":2076,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2077,"byte_end":2090,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2091,"byte_end":2111,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/   tracing-core = { version = \"0.1.22\", default-features = false }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2112,"byte_end":2181,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/   ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2182,"byte_end":2191,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2192,"byte_end":2195,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/   **Note**:`tracing-core`'s `no_std` support requires `liballoc`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2196,"byte_end":2265,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2266,"byte_end":2269,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2270,"byte_end":2295,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2296,"byte_end":2299,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2300,"byte_end":2387,"line_start":63,"line_end":63,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2388,"byte_end":2474,"line_start":64,"line_end":64,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2475,"byte_end":2502,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2503,"byte_end":2506,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2507,"byte_end":2572,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2573,"byte_end":2576,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for recording [field values] using the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2577,"byte_end":2649,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/   [`valuable`] crate.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2650,"byte_end":2675,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2676,"byte_end":2679,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2680,"byte_end":2715,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2716,"byte_end":2719,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2720,"byte_end":2799,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2800,"byte_end":2847,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2848,"byte_end":2851,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2852,"byte_end":2864,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2865,"byte_end":2915,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2916,"byte_end":2923,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":2924,"byte_end":3002,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3003,"byte_end":3069,"line_start":81,"line_end":81,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3070,"byte_end":3073,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3074,"byte_end":3085,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3086,"byte_end":3097,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3098,"byte_end":3143,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3144,"byte_end":3151,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3152,"byte_end":3155,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3156,"byte_end":3253,"line_start":88,"line_end":88,"column_start":1,"column_end":98}},{"value":"/ [field values]: crate::field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3254,"byte_end":3286,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3287,"byte_end":3338,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3339,"byte_end":3342,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3343,"byte_end":3373,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3374,"byte_end":3377,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3378,"byte_end":3455,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ version is 1.49. The current Tracing version is not guaranteed to build on","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3456,"byte_end":3534,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3535,"byte_end":3596,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3597,"byte_end":3600,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3601,"byte_end":3680,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3681,"byte_end":3758,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3759,"byte_end":3835,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3836,"byte_end":3914,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3915,"byte_end":3990,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":3991,"byte_end":4067,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4068,"byte_end":4115,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4116,"byte_end":4119,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4120,"byte_end":4123,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [`span::Id`]: span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4124,"byte_end":4150,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/ [`Event`]: event::Event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4151,"byte_end":4178,"line_start":108,"line_end":108,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber`]: subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4179,"byte_end":4221,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/ [`Metadata`]: metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4222,"byte_end":4258,"line_start":110,"line_end":110,"column_start":1,"column_end":37}},{"value":"/ [`Callsite`]: callsite::Callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4259,"byte_end":4295,"line_start":111,"line_end":111,"column_start":1,"column_end":37}},{"value":"/ [`Field`]: field::Field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4296,"byte_end":4323,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`FieldSet`]: field::FieldSet","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4324,"byte_end":4357,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/ [`Value`]: field::Value","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4358,"byte_end":4385,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`ValueSet`]: field::ValueSet","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4386,"byte_end":4419,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/ [`Dispatch`]: dispatcher::Dispatch","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4420,"byte_end":4458,"line_start":116,"line_end":116,"column_start":1,"column_end":39}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4459,"byte_end":4520,"line_start":117,"line_end":117,"column_start":1,"column_end":62}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4521,"byte_end":4570,"line_start":118,"line_end":118,"column_start":1,"column_end":50}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\nnon_shorthand_field_patterns, no_mangle_generic_items, overflowing_literals,\npath_statements, patterns_in_fns_without_body, private_in_public,\nunconditional_recursion, unused, unused_allocation, unused_comparisons,\nunused_parens, while_true)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":4943,"byte_end":5405,"line_start":126,"line_end":147,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callsite","qualname":"::callsite","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":960},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":119}],"decl_id":null,"docs":" Callsites represent the source locations from which spans or events\n originate.","sig":null,"attributes":[{"value":"/ Callsites represent the source locations from which spans or events","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11503,"byte_end":11574,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ originate.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11575,"byte_end":11589,"line_start":2,"line_end":2,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11590,"byte_end":11593,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # What Are Callsites?","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11594,"byte_end":11619,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11620,"byte_end":11623,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Every span or event in `tracing` is associated with a [`Callsite`]. A","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11624,"byte_end":11697,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ callsite is a small `static` value that is responsible for the following:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11698,"byte_end":11775,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11776,"byte_end":11779,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * Storing the span or event's [`Metadata`],","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11780,"byte_end":11827,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ * Uniquely [identifying](Identifier) the span or event definition,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11828,"byte_end":11898,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ * Caching the subscriber's [`Interest`][^1] in that span or event, to avoid","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11899,"byte_end":11978,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/   re-evaluating filters,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":11979,"byte_end":12007,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/ * Storing a [`Registration`] that allows the callsite to be part of a global","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12008,"byte_end":12088,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/   list of all callsites in the program.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12089,"byte_end":12132,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12133,"byte_end":12136,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Registering Callsites","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12137,"byte_end":12164,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12165,"byte_end":12168,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When a span or event is recorded for the first time, its callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12169,"byte_end":12238,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ [`register`]s itself with the global callsite registry. Registering a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12239,"byte_end":12312,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ callsite calls the [`Subscriber::register_callsite`][`register_callsite`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12313,"byte_end":12390,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ method with that callsite's [`Metadata`] on every currently active","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12391,"byte_end":12461,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ subscriber. This serves two primary purposes: informing subscribers of the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12462,"byte_end":12540,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ callsite's existence, and performing static filtering.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12541,"byte_end":12599,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12600,"byte_end":12603,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Callsite Existence","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12604,"byte_end":12629,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12630,"byte_end":12633,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If a [`Subscriber`] implementation wishes to allocate storage for each","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12634,"byte_end":12708,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ unique span/event location in the program, or pre-compute some value","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12709,"byte_end":12781,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ that will be used to record that span or event in the future, it can","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12782,"byte_end":12854,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ do so in its [`register_callsite`] method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12855,"byte_end":12901,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12902,"byte_end":12905,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Performing Static Filtering","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12906,"byte_end":12940,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12941,"byte_end":12944,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The [`register_callsite`] method returns an [`Interest`] value,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":12945,"byte_end":13012,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ which indicates that the subscriber either [always] wishes to record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13013,"byte_end":13085,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ that span or event, [sometimes] wishes to record it based on a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13086,"byte_end":13152,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/ dynamic filter evaluation, or [never] wishes to record it.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13153,"byte_end":13215,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13216,"byte_end":13219,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When registering a new callsite, the [`Interest`]s returned by every","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13220,"byte_end":13292,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/ currently active subscriber are combined, and the result is stored at","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13293,"byte_end":13366,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ each callsite. This way, when the span or event occurs in the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13367,"byte_end":13432,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/ future, the cached [`Interest`] value can be checked efficiently","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13433,"byte_end":13501,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ to determine if the span or event should be recorded, without","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13502,"byte_end":13567,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/ needing to perform expensive filtering (i.e. calling the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13568,"byte_end":13628,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/ [`Subscriber::enabled`] method every time a span or event occurs).","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13629,"byte_end":13699,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13700,"byte_end":13703,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ### Rebuilding Cached Interest","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13704,"byte_end":13738,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13739,"byte_end":13742,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When a new [`Dispatch`] is created (i.e. a new subscriber becomes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13743,"byte_end":13812,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/ active), any previously cached [`Interest`] values are re-evaluated","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13813,"byte_end":13884,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ for all callsites in the program. This way, if the new subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13885,"byte_end":13954,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ will enable a callsite that was not previously enabled, the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":13955,"byte_end":14018,"line_start":52,"line_end":52,"column_start":1,"column_end":64}},{"value":"/ [`Interest`] in that callsite is updated. Similarly, when a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14019,"byte_end":14082,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ subscriber is dropped, the interest cache is also re-evaluated, so","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14083,"byte_end":14153,"line_start":54,"line_end":54,"column_start":1,"column_end":71}},{"value":"/ that any callsites enabled only by that subscriber are disabled.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14154,"byte_end":14222,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14223,"byte_end":14226,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`rebuild_interest_cache`] function in this module can be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14227,"byte_end":14305,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ used to manually invalidate all cached interest and re-register those","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14306,"byte_end":14379,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ callsites. This function is useful in situations where a subscriber's","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14380,"byte_end":14453,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ interest can change, but it does so relatively infrequently. The subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14454,"byte_end":14533,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ may wish for its interest to be cached most of the time, and return","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14534,"byte_end":14605,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/ [`Interest::always`][always] or [`Interest::never`][never] in its","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14606,"byte_end":14675,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/ [`register_callsite`] method, so that its [`Subscriber::enabled`] method","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14676,"byte_end":14752,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ doesn't need to be evaluated every time a span or event is recorded.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14753,"byte_end":14825,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ However, when the configuration changes, the subscriber can call","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14826,"byte_end":14894,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/ [`rebuild_interest_cache`] to re-evaluate the entire interest cache with its","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14895,"byte_end":14975,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ new configuration. This is a relatively costly operation, but if the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":14976,"byte_end":15048,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ configuration changes infrequently, it may be more efficient than calling","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15049,"byte_end":15126,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ [`Subscriber::enabled`] frequently.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15127,"byte_end":15166,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15167,"byte_end":15170,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Implementing Callsites","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15171,"byte_end":15199,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15200,"byte_end":15203,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ In most cases, instrumenting code using `tracing` should *not* require","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15204,"byte_end":15278,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ implementing the [`Callsite`] trait directly. When using the [`tracing`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15279,"byte_end":15354,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ crate's macros][macros] or the [`#[instrument]` attribute][instrument], a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15355,"byte_end":15432,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ `Callsite` is automatically generated.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15433,"byte_end":15475,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15476,"byte_end":15479,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ However, code which provides alternative forms of `tracing` instrumentation","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15480,"byte_end":15559,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/ may need to interact with the callsite system directly. If","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15560,"byte_end":15622,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/ instrumentation-side code needs to produce a `Callsite` to emit spans or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15623,"byte_end":15699,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ events, the [`DefaultCallsite`] struct provided in this module is a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15700,"byte_end":15771,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/ ready-made `Callsite` implementation that is suitable for most uses. When","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15772,"byte_end":15849,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/ possible, the use of `DefaultCallsite` should be preferred over implementing","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15850,"byte_end":15930,"line_start":83,"line_end":83,"column_start":1,"column_end":81}},{"value":"/ [`Callsite`] for user types, as `DefaultCallsite` may benefit from","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":15931,"byte_end":16001,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ additional performance optimizations.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16002,"byte_end":16043,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16044,"byte_end":16047,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [^1]: Returned by the [`Subscriber::register_callsite`][`register_callsite`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16048,"byte_end":16128,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/     method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16129,"byte_end":16144,"line_start":88,"line_end":88,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16145,"byte_end":16148,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`Metadata`]: crate::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16149,"byte_end":16192,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ [`Interest`]: crate::subscriber::Interest","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16193,"byte_end":16238,"line_start":91,"line_end":91,"column_start":1,"column_end":46}},{"value":"/ [`Subscriber`]: crate::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16239,"byte_end":16288,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/ [`register_callsite`]: crate::subscriber::Subscriber::register_callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16289,"byte_end":16364,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ [`Subscriber::enabled`]: crate::subscriber::Subscriber::enabled","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16365,"byte_end":16432,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/ [always]: crate::subscriber::Interest::always","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16433,"byte_end":16482,"line_start":95,"line_end":95,"column_start":1,"column_end":50}},{"value":"/ [sometimes]: crate::subscriber::Interest::sometimes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16483,"byte_end":16538,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ [never]: crate::subscriber::Interest::never","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16539,"byte_end":16586,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/ [`Dispatch`]: crate::dispatch::Dispatch","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16587,"byte_end":16630,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/ [macros]: https://docs.rs/tracing/latest/tracing/#macros","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16631,"byte_end":16691,"line_start":99,"line_end":99,"column_start":1,"column_end":61}},{"value":"/ [instrument]: https://docs.rs/tracing/latest/tracing/attr.instrument.html","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":16692,"byte_end":16769,"line_start":100,"line_end":100,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":70},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17429,"byte_end":17437,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Callsite","qualname":"::callsite::Callsite","value":"Callsite: Sync","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"decl_id":null,"docs":" Trait implemented by callsites.","sig":null,"attributes":[{"value":"/ Trait implemented by callsites.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17125,"byte_end":17160,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17161,"byte_end":17164,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ These functions are only intended to be called by the callsite registry, which","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17165,"byte_end":17247,"line_start":123,"line_end":123,"column_start":1,"column_end":83}},{"value":"/ correctly handles determining the common interest between all subscribers.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17248,"byte_end":17326,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17327,"byte_end":17330,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](crate::callsite) for details on","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17331,"byte_end":17403,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ callsites.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17404,"byte_end":17418,"line_start":127,"line_end":127,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17728,"byte_end":17740,"line_start":136,"line_end":136,"column_start":8,"column_end":20},"name":"set_interest","qualname":"::callsite::Callsite::set_interest","value":"fn set_interest<'_>(&'_ Self, Interest)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Sets the [`Interest`] for this callsite.","sig":null,"attributes":[{"value":"/ Sets the [`Interest`] for this callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17450,"byte_end":17494,"line_start":129,"line_end":129,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17499,"byte_end":17502,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on callsite interest caching][cache-docs] for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17507,"byte_end":17579,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ details.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17584,"byte_end":17596,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17601,"byte_end":17604,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: super::subscriber::Interest","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17609,"byte_end":17654,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/ [cache-docs]: crate::callsite#performing-static-filtering","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17659,"byte_end":17720,"line_start":135,"line_end":135,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18276,"byte_end":18284,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"metadata","qualname":"::callsite::Callsite::metadata","value":"fn metadata<'_>(&'_ Self) -> &'_ Metadata","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Returns the [metadata] associated with the callsite.","sig":null,"attributes":[{"value":"/ Returns the [metadata] associated with the callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17774,"byte_end":17830,"line_start":138,"line_end":138,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17835,"byte_end":17838,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17843,"byte_end":17902,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17907,"byte_end":17972,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17977,"byte_end":17980,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ **Note:** Implementations of this method should not produce [`Metadata`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17985,"byte_end":18061,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ that share the same callsite [`Identifier`] but otherwise differ in any","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18066,"byte_end":18141,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ way (e.g., have different `name`s).","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18146,"byte_end":18185,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18190,"byte_end":18193,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ </pre></div>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18198,"byte_end":18214,"line_start":147,"line_end":147,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18219,"byte_end":18222,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [metadata]: super::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18227,"byte_end":18268,"line_start":149,"line_end":149,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19150,"byte_end":19165,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"private_type_id","qualname":"::callsite::Callsite::private_type_id","value":"fn private_type_id<'_>(&'_ Self, private::Private<()>)\n-> private::Private<TypeId> where Self: 'static","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" This method is an *internal implementation detail* of `tracing-core`. It\n is *not* intended to be called or overridden from downstream code.","sig":null,"attributes":[{"value":"/ This method is an *internal implementation detail* of `tracing-core`. It","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18315,"byte_end":18391,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ is *not* intended to be called or overridden from downstream code.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18396,"byte_end":18466,"line_start":153,"line_end":153,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18471,"byte_end":18474,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The `Private` type can only be constructed from within `tracing-core`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18479,"byte_end":18553,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ Because this method takes a `Private` as an argument, it cannot be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18558,"byte_end":18628,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"/ called from (safe) code external to `tracing-core`. Because it must","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18633,"byte_end":18704,"line_start":157,"line_end":157,"column_start":5,"column_end":76}},{"value":"/ *return* a `Private`, the only valid implementation possible outside of","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18709,"byte_end":18784,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ `tracing-core` would have to always unconditionally panic.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18789,"byte_end":18851,"line_start":159,"line_end":159,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18856,"byte_end":18859,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ THIS IS BY DESIGN. There is currently no valid reason for code outside","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18864,"byte_end":18938,"line_start":161,"line_end":161,"column_start":5,"column_end":79}},{"value":"/ of `tracing-core` to override this method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":18943,"byte_end":18989,"line_start":162,"line_end":162,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19133,"byte_end":19142,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":950},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19513,"byte_end":19523,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"Identifier","qualname":"::callsite::Identifier","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uniquely identifies a [`Callsite`]","sig":null,"attributes":[{"value":"/ Uniquely identifies a [`Callsite`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19321,"byte_end":19359,"line_start":175,"line_end":175,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19360,"byte_end":19363,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Two `Identifier`s are equal if they both refer to the same callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19364,"byte_end":19436,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19437,"byte_end":19440,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`Callsite`]: super::callsite::Callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19441,"byte_end":19484,"line_start":179,"line_end":179,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":952},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20027,"byte_end":20052,"line_start":190,"line_end":190,"column_start":5,"column_end":30},"name":"0","qualname":"::callsite::Identifier::0","value":"&'static (dyn callsite::Callsite + 'static)","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" **Warning**: The fields on this type are currently `pub` because it must\n be able to be constructed statically by macros. However, when `const\n fn`s are available on stable Rust, this will no longer be necessary.\n Thus, these fields are *not* considered stable public API, and they may\n change warning. Do not rely on any fields on `Identifier`. When\n constructing new `Identifier`s, use the `identify_callsite!` macro\n instead.\n","sig":null,"attributes":[{"value":"/ **Warning**: The fields on this type are currently `pub` because it must","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19529,"byte_end":19605,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ be able to be constructed statically by macros. However, when `const","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19610,"byte_end":19682,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ fn`s are available on stable Rust, this will no longer be necessary.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19687,"byte_end":19759,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ Thus, these fields are *not* considered stable public API, and they may","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19764,"byte_end":19839,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ change warning. Do not rely on any fields on `Identifier`. When","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19844,"byte_end":19911,"line_start":186,"line_end":186,"column_start":5,"column_end":72}},{"value":"/ constructing new `Identifier`s, use the `identify_callsite!` macro","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19916,"byte_end":19986,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":19991,"byte_end":20003,"line_start":188,"line_end":188,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20129,"byte_end":20144,"line_start":195,"line_end":195,"column_start":12,"column_end":27},"name":"DefaultCallsite","qualname":"::callsite::DefaultCallsite","value":"DefaultCallsite {  }","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":" A default [`Callsite`] implementation.\n","sig":null,"attributes":[{"value":"/ A default [`Callsite`] implementation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20058,"byte_end":20100,"line_start":193,"line_end":193,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21530,"byte_end":21552,"line_start":225,"line_end":225,"column_start":8,"column_end":30},"name":"rebuild_interest_cache","qualname":"::callsite::rebuild_interest_cache","value":"fn rebuild_interest_cache()","parent":null,"children":[],"decl_id":null,"docs":" Clear and reregister interest on every [`Callsite`]","sig":null,"attributes":[{"value":"/ Clear and reregister interest on every [`Callsite`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20267,"byte_end":20322,"line_start":202,"line_end":202,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20323,"byte_end":20326,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This function is intended for runtime reconfiguration of filters on traces","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20327,"byte_end":20405,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ when the filter recalculation is much less frequent than trace events are.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20406,"byte_end":20484,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ The alternative is to have the [`Subscriber`] that supports runtime","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20485,"byte_end":20556,"line_start":206,"line_end":206,"column_start":1,"column_end":72}},{"value":"/ reconfiguration of filters always return [`Interest::sometimes()`] so that","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20557,"byte_end":20635,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ [`enabled`] is evaluated for every event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20636,"byte_end":20681,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20682,"byte_end":20685,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ This function will also re-compute the global maximum level as determined by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20686,"byte_end":20766,"line_start":210,"line_end":210,"column_start":1,"column_end":81}},{"value":"/ the [`max_level_hint`] method. If a [`Subscriber`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20767,"byte_end":20821,"line_start":211,"line_end":211,"column_start":1,"column_end":55}},{"value":"/ implementation changes the value returned by its `max_level_hint`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20822,"byte_end":20891,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ implementation at runtime, then it **must** call this function after that","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20892,"byte_end":20969,"line_start":213,"line_end":213,"column_start":1,"column_end":78}},{"value":"/ value changes, in order for the change to be reflected.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":20970,"byte_end":21029,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21030,"byte_end":21033,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on callsite interest caching][cache-docs] for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21034,"byte_end":21106,"line_start":216,"line_end":216,"column_start":1,"column_end":73}},{"value":"/ additional information on this function's usage.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21107,"byte_end":21159,"line_start":217,"line_end":217,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21160,"byte_end":21163,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [`max_level_hint`]: super::subscriber::Subscriber::max_level_hint","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21164,"byte_end":21233,"line_start":219,"line_end":219,"column_start":1,"column_end":70}},{"value":"/ [`Callsite`]: super::callsite::Callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21234,"byte_end":21277,"line_start":220,"line_end":220,"column_start":1,"column_end":44}},{"value":"/ [`enabled`]: super::subscriber::Subscriber#tymethod.enabled","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21278,"byte_end":21341,"line_start":221,"line_end":221,"column_start":1,"column_end":64}},{"value":"/ [`Interest::sometimes()`]: super::subscriber::Interest::sometimes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21342,"byte_end":21411,"line_start":222,"line_end":222,"column_start":1,"column_end":70}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21412,"byte_end":21461,"line_start":223,"line_end":223,"column_start":1,"column_end":50}},{"value":"/ [cache-docs]: crate::callsite#rebuilding-cached-interest","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21462,"byte_end":21522,"line_start":224,"line_end":224,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21993,"byte_end":22001,"line_start":239,"line_end":239,"column_start":8,"column_end":16},"name":"register","qualname":"::callsite::register","value":"fn register(&'static dyn Callsite)","parent":null,"children":[],"decl_id":null,"docs":" Register a new [`Callsite`] with the global registry.","sig":null,"attributes":[{"value":"/ Register a new [`Callsite`] with the global registry.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21617,"byte_end":21674,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21675,"byte_end":21678,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ This should be called once per callsite after the callsite has been","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21679,"byte_end":21750,"line_start":231,"line_end":231,"column_start":1,"column_end":72}},{"value":"/ constructed.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21751,"byte_end":21767,"line_start":232,"line_end":232,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21768,"byte_end":21771,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on callsite registration][reg-docs] for details","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21772,"byte_end":21846,"line_start":234,"line_end":234,"column_start":1,"column_end":75}},{"value":"/ on the global callsite registry.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21847,"byte_end":21883,"line_start":235,"line_end":235,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21884,"byte_end":21887,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`Callsite`]: crate::callsite::Callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21888,"byte_end":21931,"line_start":237,"line_end":237,"column_start":1,"column_end":44}},{"value":"/ [reg-docs]: crate::callsite#registering-callsites","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":21932,"byte_end":21985,"line_start":238,"line_end":238,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":23592,"byte_end":23595,"line_start":285,"line_end":285,"column_start":18,"column_end":21},"name":"new","qualname":"<DefaultCallsite>::new","value":"const fn new(&'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `DefaultCallsite` with the specified `Metadata`.\n","sig":null,"attributes":[{"value":"/ Returns a new `DefaultCallsite` with the specified `Metadata`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":23508,"byte_end":23574,"line_start":284,"line_end":284,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24689,"byte_end":24697,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"register","qualname":"<DefaultCallsite>::register","value":"fn register(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers this callsite with the global callsite registry.","sig":null,"attributes":[{"value":"/ Registers this callsite with the global callsite registry.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":23849,"byte_end":23911,"line_start":294,"line_end":294,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":23916,"byte_end":23919,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ If the callsite is already registered, this does nothing. When using","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":23924,"byte_end":23996,"line_start":296,"line_end":296,"column_start":5,"column_end":77}},{"value":"/ [`DefaultCallsite`], this method should be preferred over","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24001,"byte_end":24062,"line_start":297,"line_end":297,"column_start":5,"column_end":66}},{"value":"/ [`tracing_core::callsite::register`], as it ensures that the callsite is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24067,"byte_end":24143,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ only registered a single time.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24148,"byte_end":24182,"line_start":299,"line_end":299,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24187,"byte_end":24190,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Other callsite implementations will generally ensure that","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24195,"byte_end":24256,"line_start":301,"line_end":301,"column_start":5,"column_end":66}},{"value":"/ callsites are not re-registered through another mechanism.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24261,"byte_end":24323,"line_start":302,"line_end":302,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24328,"byte_end":24331,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on callsite registration][reg-docs] for details","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24336,"byte_end":24410,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ on the global callsite registry.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24415,"byte_end":24451,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24456,"byte_end":24459,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`Callsite`]: crate::callsite::Callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24464,"byte_end":24507,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/ [reg-docs]: crate::callsite#registering-callsites","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24512,"byte_end":24565,"line_start":308,"line_end":308,"column_start":5,"column_end":58}},{"value":"inline(never)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24570,"byte_end":24586,"line_start":309,"line_end":309,"column_start":5,"column_end":21}},{"value":"cold","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":24670,"byte_end":24677,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26200,"byte_end":26208,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"interest","qualname":"<DefaultCallsite>::interest","value":"fn interest(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Returns the callsite's cached `Interest`, or registers it for the\n first time if it has not yet been registered.\n","sig":null,"attributes":[{"value":"/ Returns the callsite's cached `Interest`, or registers it for the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26051,"byte_end":26120,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/ first time if it has not yet been registered.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26125,"byte_end":26174,"line_start":349,"line_end":349,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26179,"byte_end":26188,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26563,"byte_end":26575,"line_start":362,"line_end":362,"column_start":8,"column_end":20},"name":"set_interest","qualname":"<DefaultCallsite as callsite::Callsite>::set_interest","value":"fn set_interest<'_>(&'_ Self, Interest)","parent":{"krate":0,"index":70},"children":[],"decl_id":{"krate":0,"index":71},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26912,"byte_end":26920,"line_start":372,"line_end":372,"column_start":8,"column_end":16},"name":"metadata","qualname":"<DefaultCallsite as callsite::Callsite>::metadata","value":"fn metadata<'_>(&'_ Self) -> &'_ Metadata","parent":{"krate":0,"index":70},"children":[],"decl_id":{"krate":0,"index":72},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26887,"byte_end":26904,"line_start":371,"line_end":371,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27050,"byte_end":27052,"line_start":380,"line_end":380,"column_start":8,"column_end":10},"name":"eq","qualname":"<Identifier as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Identifier) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27290,"byte_end":27293,"line_start":391,"line_end":391,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Identifier as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27435,"byte_end":27439,"line_start":397,"line_end":397,"column_start":8,"column_end":12},"name":"hash","qualname":"<Identifier as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10526},"children":[],"decl_id":{"krate":2,"index":10527},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":31302,"byte_end":31309,"line_start":515,"line_end":515,"column_start":16,"column_end":23},"name":"Private","qualname":"::callsite::private::Private","value":"","parent":null,"children":[],"decl_id":null,"docs":" Don't call this function, it's private.\n","sig":null,"attributes":[{"value":"/ Don't call this function, it's private.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":31199,"byte_end":31242,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":31247,"byte_end":31286,"line_start":514,"line_end":514,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":166},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":314},{"krate":0,"index":317}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34704,"byte_end":34751,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34752,"byte_end":34755,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34756,"byte_end":34836,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34837,"byte_end":34915,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34916,"byte_end":34955,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34956,"byte_end":34959,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34960,"byte_end":34992,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34993,"byte_end":34996,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":34997,"byte_end":35075,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35076,"byte_end":35151,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35152,"byte_end":35175,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35176,"byte_end":35179,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35180,"byte_end":35217,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35218,"byte_end":35221,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35222,"byte_end":35297,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35298,"byte_end":35377,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35378,"byte_end":35438,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35439,"byte_end":35517,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35518,"byte_end":35595,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35596,"byte_end":35623,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35624,"byte_end":35627,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35628,"byte_end":35704,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35705,"byte_end":35778,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35779,"byte_end":35791,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35792,"byte_end":35803,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35804,"byte_end":35835,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35836,"byte_end":35861,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35862,"byte_end":35898,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35899,"byte_end":35937,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35938,"byte_end":35946,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":35947,"byte_end":36002,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36003,"byte_end":36071,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36072,"byte_end":36119,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36120,"byte_end":36157,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36158,"byte_end":36214,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36215,"byte_end":36272,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36273,"byte_end":36307,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36308,"byte_end":36341,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36342,"byte_end":36349,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36350,"byte_end":36413,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36414,"byte_end":36443,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36444,"byte_end":36447,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36448,"byte_end":36493,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36494,"byte_end":36545,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36546,"byte_end":36553,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36554,"byte_end":36632,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36633,"byte_end":36661,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36662,"byte_end":36673,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36674,"byte_end":36705,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36706,"byte_end":36731,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36732,"byte_end":36768,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36769,"byte_end":36807,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36808,"byte_end":36816,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36817,"byte_end":36872,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36873,"byte_end":36941,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36942,"byte_end":36989,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":36990,"byte_end":37027,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37028,"byte_end":37084,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37085,"byte_end":37142,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37143,"byte_end":37177,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37178,"byte_end":37211,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37212,"byte_end":37219,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37220,"byte_end":37283,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37284,"byte_end":37331,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37332,"byte_end":37397,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37398,"byte_end":37426,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37427,"byte_end":37430,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37431,"byte_end":37460,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37461,"byte_end":37508,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37509,"byte_end":37548,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37549,"byte_end":37556,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37557,"byte_end":37560,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37561,"byte_end":37595,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37596,"byte_end":37603,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37604,"byte_end":37681,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37682,"byte_end":37762,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37763,"byte_end":37836,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37837,"byte_end":37905,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37906,"byte_end":37909,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37910,"byte_end":37987,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":37988,"byte_end":38064,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38065,"byte_end":38090,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38091,"byte_end":38102,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38103,"byte_end":38134,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38135,"byte_end":38160,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38161,"byte_end":38197,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38198,"byte_end":38236,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38237,"byte_end":38245,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38246,"byte_end":38301,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38302,"byte_end":38370,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38371,"byte_end":38418,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38419,"byte_end":38456,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38457,"byte_end":38513,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38514,"byte_end":38571,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38572,"byte_end":38606,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38607,"byte_end":38640,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38641,"byte_end":38648,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38649,"byte_end":38712,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38713,"byte_end":38760,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38761,"byte_end":38826,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38827,"byte_end":38855,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38856,"byte_end":38859,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38860,"byte_end":38907,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38908,"byte_end":38982,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":38983,"byte_end":39026,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39027,"byte_end":39078,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39079,"byte_end":39082,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39083,"byte_end":39124,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39125,"byte_end":39132,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39133,"byte_end":39136,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39137,"byte_end":39202,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>:the thread-local scoped dispatcher","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39203,"byte_end":39267,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/     (<a href=\"#fn.with_default\"><code>with_default</code></a>) requires the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39268,"byte_end":39347,"line_start":113,"line_end":113,"column_start":1,"column_end":80}},{"value":"/     Rust standard library. <code>no_std</code> users should use","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39348,"byte_end":39415,"line_start":114,"line_end":114,"column_start":1,"column_end":68}},{"value":"/     <a href=\"#fn.set_global_default\"><code>set_global_default</code></a>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39416,"byte_end":39492,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/     instead.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39493,"byte_end":39509,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39510,"byte_end":39520,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39521,"byte_end":39524,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39525,"byte_end":39564,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39565,"byte_end":39568,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39569,"byte_end":39636,"line_start":121,"line_end":121,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39637,"byte_end":39715,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39716,"byte_end":39785,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39786,"byte_end":39806,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":39807,"byte_end":39810,"line_start":125,"line_end":125,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":962},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":40255,"byte_end":40263,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"Dispatch","qualname":"::dispatcher::Dispatch","value":"Dispatch {  }","parent":null,"children":[{"krate":0,"index":963}],"decl_id":null,"docs":" `Dispatch` trace data to a [`Subscriber`].","sig":null,"attributes":[{"value":"/ `Dispatch` trace data to a [`Subscriber`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":40176,"byte_end":40222,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":40223,"byte_end":40226,"line_start":149,"line_end":149,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":41855,"byte_end":41867,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"DefaultGuard","qualname":"::dispatcher::DefaultGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that resets the current default dispatcher to the prior\n default dispatcher when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that resets the current default dispatcher to the prior","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":41651,"byte_end":41718,"line_start":193,"line_end":193,"column_start":1,"column_end":68}},{"value":"/ default dispatcher when dropped.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":41719,"byte_end":41755,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":41756,"byte_end":41779,"line_start":195,"line_end":195,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42587,"byte_end":42599,"line_start":217,"line_end":217,"column_start":8,"column_end":20},"name":"with_default","qualname":"::dispatcher::with_default","value":"fn with_default<T, '_, impl FnOnce() -> T>(&'_ Dispatch, impl FnOnce() -> T)\n-> T where impl FnOnce() -> T: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this dispatch as the default for the duration of a closure.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":41888,"byte_end":41956,"line_start":200,"line_end":200,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":41957,"byte_end":41960,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ The default dispatcher is used when creating a new [span] or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":41961,"byte_end":42025,"line_start":202,"line_end":202,"column_start":1,"column_end":65}},{"value":"/ [`Event`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42026,"byte_end":42040,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42041,"byte_end":42044,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42045,"byte_end":42110,"line_start":205,"line_end":205,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42111,"byte_end":42191,"line_start":206,"line_end":206,"column_start":1,"column_end":81}},{"value":"/     <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42192,"byte_end":42277,"line_start":207,"line_end":207,"column_start":1,"column_end":86}},{"value":"/     <code>set_global_default</code></a> instead.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42278,"byte_end":42330,"line_start":208,"line_end":208,"column_start":1,"column_end":53}},{"value":"/ </pre>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42331,"byte_end":42341,"line_start":209,"line_end":209,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42342,"byte_end":42345,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [span]: super::span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42346,"byte_end":42369,"line_start":211,"line_end":211,"column_start":1,"column_end":24}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42370,"byte_end":42419,"line_start":212,"line_end":212,"column_start":1,"column_end":50}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42420,"byte_end":42454,"line_start":213,"line_end":213,"column_start":1,"column_end":35}},{"value":"/ [`set_global_default`]: super::set_global_default","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42455,"byte_end":42508,"line_start":214,"line_end":214,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42509,"byte_end":42532,"line_start":215,"line_end":215,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":247},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43569,"byte_end":43580,"line_start":239,"line_end":239,"column_start":8,"column_end":19},"name":"set_default","qualname":"::dispatcher::set_default","value":"fn set_default<'_>(&'_ Dispatch) -> DefaultGuard","parent":null,"children":[],"decl_id":null,"docs":" Sets the dispatch as the default dispatch for the duration of the lifetime\n of the returned DefaultGuard","sig":null,"attributes":[{"value":"/ Sets the dispatch as the default dispatch for the duration of the lifetime","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":42957,"byte_end":43035,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"/ of the returned DefaultGuard","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43036,"byte_end":43068,"line_start":227,"line_end":227,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43069,"byte_end":43072,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43073,"byte_end":43138,"line_start":229,"line_end":229,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43139,"byte_end":43219,"line_start":230,"line_end":230,"column_start":1,"column_end":81}},{"value":"/     <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43220,"byte_end":43305,"line_start":231,"line_end":231,"column_start":1,"column_end":86}},{"value":"/     <code>set_global_default</code></a> instead.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43306,"byte_end":43358,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/ </pre>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43359,"byte_end":43369,"line_start":233,"line_end":233,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43370,"byte_end":43373,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`set_global_default`]: super::set_global_default","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43374,"byte_end":43427,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43428,"byte_end":43451,"line_start":236,"line_end":236,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the dispatcher.\"","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43499,"byte_end":43561,"line_start":238,"line_end":238,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44739,"byte_end":44757,"line_start":262,"line_end":262,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::dispatcher::set_global_default","value":"fn set_global_default(Dispatch) -> Result<(), SetGlobalDefaultError>","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local dispatch has been set in a thread\n (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this dispatch as the global default for the duration of the entire program.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43889,"byte_end":43973,"line_start":246,"line_end":246,"column_start":1,"column_end":85}},{"value":"/ Will be used as a fallback if no thread-local dispatch has been set in a thread","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":43974,"byte_end":44057,"line_start":247,"line_end":247,"column_start":1,"column_end":84}},{"value":"/ (using `with_default`.)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44058,"byte_end":44085,"line_start":248,"line_end":248,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44086,"byte_end":44089,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44090,"byte_end":44172,"line_start":250,"line_end":250,"column_start":1,"column_end":83}},{"value":"/ Returns `Err` if the global default has already been set.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44173,"byte_end":44234,"line_start":251,"line_end":251,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44235,"byte_end":44238,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44239,"byte_end":44365,"line_start":253,"line_end":253,"column_start":1,"column_end":127}},{"value":"/     <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44366,"byte_end":44446,"line_start":254,"line_end":254,"column_start":1,"column_end":81}},{"value":"/     <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44447,"byte_end":44524,"line_start":255,"line_end":255,"column_start":1,"column_end":78}},{"value":"/     executables that depend on the library try to set the default later.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44525,"byte_end":44601,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ </pre></div>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44602,"byte_end":44618,"line_start":257,"line_end":257,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44619,"byte_end":44622,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ [span]: super::span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44623,"byte_end":44646,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44647,"byte_end":44696,"line_start":260,"line_end":260,"column_start":1,"column_end":50}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":44697,"byte_end":44731,"line_start":261,"line_end":261,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":249},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45672,"byte_end":45684,"line_start":291,"line_end":291,"column_start":8,"column_end":20},"name":"has_been_set","qualname":"::dispatcher::has_been_set","value":"fn has_been_set() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a `tracing` dispatcher has ever been set.","sig":null,"attributes":[{"value":"/ Returns true if a `tracing` dispatcher has ever been set.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45446,"byte_end":45507,"line_start":285,"line_end":285,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45508,"byte_end":45511,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ This may be used to completely elide trace points if tracing is not in use","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45512,"byte_end":45590,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ at all or has yet to be initialized.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45591,"byte_end":45631,"line_start":288,"line_end":288,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45647,"byte_end":45664,"line_start":290,"line_end":290,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45799,"byte_end":45820,"line_start":296,"line_end":296,"column_start":12,"column_end":33},"name":"SetGlobalDefaultError","qualname":"::dispatcher::SetGlobalDefaultError","value":"SetGlobalDefaultError {  }","parent":null,"children":[{"krate":0,"index":251}],"decl_id":null,"docs":" Returned if setting the global dispatcher fails.\n","sig":null,"attributes":[{"value":"/ Returned if setting the global dispatcher fails.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45735,"byte_end":45787,"line_start":295,"line_end":295,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45900,"byte_end":45903,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SetGlobalDefaultError as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46122,"byte_end":46125,"line_start":309,"line_end":309,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SetGlobalDefaultError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":259},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46851,"byte_end":46862,"line_start":330,"line_end":330,"column_start":8,"column_end":19},"name":"get_default","qualname":"::dispatcher::get_default","value":"fn get_default<T, F>(F) -> T where F: for<'_> FnMut(&'_ Dispatch) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46459,"byte_end":46537,"line_start":322,"line_end":322,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46538,"byte_end":46541,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46542,"byte_end":46620,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46621,"byte_end":46700,"line_start":325,"line_end":325,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46701,"byte_end":46769,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46770,"byte_end":46773,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: super::dispatcher::Dispatch","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46774,"byte_end":46819,"line_start":328,"line_end":328,"column_start":1,"column_end":46}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46820,"byte_end":46843,"line_start":329,"line_end":329,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":264},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47602,"byte_end":47613,"line_start":355,"line_end":355,"column_start":8,"column_end":19},"name":"get_current","qualname":"::dispatcher::get_current","value":"fn get_current<T, impl FnOnce(&Dispatch) -> T>(impl FnOnce(&Dispatch) -> T)\n-> Option<T> where impl FnOnce(&Dispatch) -> T: for<'_> FnOnce(&'_ Dispatch)\n-> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47178,"byte_end":47256,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47257,"byte_end":47260,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47261,"byte_end":47339,"line_start":347,"line_end":347,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47340,"byte_end":47419,"line_start":348,"line_end":348,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47420,"byte_end":47488,"line_start":349,"line_end":349,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47489,"byte_end":47492,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: super::dispatcher::Dispatch","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47493,"byte_end":47538,"line_start":351,"line_end":351,"column_start":1,"column_end":46}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47539,"byte_end":47562,"line_start":352,"line_end":352,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":47578,"byte_end":47594,"line_start":354,"line_end":354,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49077,"byte_end":49081,"line_start":408,"line_end":408,"column_start":12,"column_end":16},"name":"none","qualname":"<Dispatch>::none","value":"fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Dispatch` that discards events and spans.\n","sig":null,"attributes":[{"value":"/ Returns a new `Dispatch` that discards events and spans.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":48991,"byte_end":49051,"line_start":406,"line_end":406,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49056,"byte_end":49065,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49334,"byte_end":49337,"line_start":417,"line_end":417,"column_start":12,"column_end":15},"name":"new","qualname":"<Dispatch>::new","value":"fn new<S>(S) -> Self where S: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Dispatch` that forwards to the given [`Subscriber`].","sig":null,"attributes":[{"value":"/ Returns a `Dispatch` that forwards to the given [`Subscriber`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49193,"byte_end":49260,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49265,"byte_end":49268,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49273,"byte_end":49322,"line_start":416,"line_end":416,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":50157,"byte_end":50174,"line_start":442,"line_end":442,"column_start":12,"column_end":29},"name":"register_callsite","qualname":"<Dispatch>::register_callsite","value":"fn register_callsite<'_>(&'_ Self, &'static Metadata) -> subscriber::Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49713,"byte_end":49788,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49793,"byte_end":49863,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49868,"byte_end":49871,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This calls the [`register_callsite`] function on the [`Subscriber`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49876,"byte_end":49947,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49952,"byte_end":49989,"line_start":437,"line_end":437,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":49994,"byte_end":49997,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":50002,"byte_end":50051,"line_start":439,"line_end":439,"column_start":5,"column_end":54}},{"value":"/ [`register_callsite`]: super::subscriber::Subscriber::register_callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":50056,"byte_end":50131,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":50136,"byte_end":50145,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51401,"byte_end":51409,"line_start":472,"line_end":472,"column_start":12,"column_end":20},"name":"new_span","qualname":"<Dispatch>::new_span","value":"fn new_span<'_, '_, '_>(&'_ Self, &'_ span::Attributes) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Record the construction of a new span, returning a new [ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Record the construction of a new span, returning a new [ID] for the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51001,"byte_end":51072,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ span being constructed.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51077,"byte_end":51104,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51109,"byte_end":51112,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ This calls the [`new_span`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51117,"byte_end":51189,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51194,"byte_end":51221,"line_start":466,"line_end":466,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51226,"byte_end":51229,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51234,"byte_end":51259,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51264,"byte_end":51313,"line_start":469,"line_end":469,"column_start":5,"column_end":54}},{"value":"/ [`new_span`]: super::subscriber::Subscriber::new_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51318,"byte_end":51375,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51380,"byte_end":51389,"line_start":471,"line_end":471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51808,"byte_end":51814,"line_start":484,"line_end":484,"column_start":12,"column_end":18},"name":"record","qualname":"<Dispatch>::record","value":"fn record<'_, '_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Record)","parent":null,"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51510,"byte_end":51547,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51552,"byte_end":51555,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51560,"byte_end":51630,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51635,"byte_end":51662,"line_start":479,"line_end":479,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51667,"byte_end":51670,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51675,"byte_end":51724,"line_start":481,"line_end":481,"column_start":5,"column_end":54}},{"value":"/ [`record`]: super::subscriber::Subscriber::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51729,"byte_end":51782,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51787,"byte_end":51796,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52311,"byte_end":52330,"line_start":497,"line_end":497,"column_start":12,"column_end":31},"name":"record_follows_from","qualname":"<Dispatch>::record_follows_from","value":"fn record_follows_from<'_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51924,"byte_end":51992,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":51997,"byte_end":52011,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52016,"byte_end":52019,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record_follows_from`] function on the [`Subscriber`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52024,"byte_end":52097,"line_start":491,"line_end":491,"column_start":5,"column_end":78}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52102,"byte_end":52139,"line_start":492,"line_end":492,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52144,"byte_end":52147,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52152,"byte_end":52201,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/ [`record_follows_from`]: super::subscriber::Subscriber::record_follows_from","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52206,"byte_end":52285,"line_start":495,"line_end":495,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52290,"byte_end":52299,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52840,"byte_end":52847,"line_start":511,"line_end":511,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Dispatch>::enabled","value":"fn enabled<'_, '_, '_>(&'_ Self, &'_ Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a span with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span with the specified [metadata] would be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52447,"byte_end":52512,"line_start":501,"line_end":501,"column_start":5,"column_end":70}},{"value":"/ recorded.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52517,"byte_end":52530,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52535,"byte_end":52538,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enabled`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52543,"byte_end":52614,"line_start":504,"line_end":504,"column_start":5,"column_end":76}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52619,"byte_end":52646,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52651,"byte_end":52654,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [metadata]: super::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52659,"byte_end":52700,"line_start":507,"line_end":507,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52705,"byte_end":52754,"line_start":508,"line_end":508,"column_start":5,"column_end":54}},{"value":"/ [`enabled`]: super::subscriber::Subscriber::enabled","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52759,"byte_end":52814,"line_start":509,"line_end":509,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52819,"byte_end":52828,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53283,"byte_end":53288,"line_start":524,"line_end":524,"column_start":12,"column_end":17},"name":"event","qualname":"<Dispatch>::event","value":"fn event<'_, '_, '_>(&'_ Self, &'_ Event)","parent":null,"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52943,"byte_end":52986,"line_start":515,"line_end":515,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52991,"byte_end":52994,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This calls the [`event`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":52999,"byte_end":53068,"line_start":517,"line_end":517,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53073,"byte_end":53100,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53105,"byte_end":53108,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53113,"byte_end":53147,"line_start":520,"line_end":520,"column_start":5,"column_end":39}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53152,"byte_end":53201,"line_start":521,"line_end":521,"column_start":5,"column_end":54}},{"value":"/ [`event`]: super::subscriber::Subscriber::event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53206,"byte_end":53257,"line_start":522,"line_end":522,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53262,"byte_end":53271,"line_start":523,"line_end":523,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53717,"byte_end":53722,"line_start":537,"line_end":537,"column_start":12,"column_end":17},"name":"enter","qualname":"<Dispatch>::enter","value":"fn enter<'_, '_>(&'_ Self, &'_ span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been can_enter.","sig":null,"attributes":[{"value":"/ Records that a span has been can_enter.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53430,"byte_end":53473,"line_start":530,"line_end":530,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53478,"byte_end":53481,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enter`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53486,"byte_end":53555,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53560,"byte_end":53587,"line_start":533,"line_end":533,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53592,"byte_end":53595,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53600,"byte_end":53649,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"/ [`enter`]: super::subscriber::Subscriber::enter","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53654,"byte_end":53705,"line_start":536,"line_end":536,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54078,"byte_end":54082,"line_start":548,"line_end":548,"column_start":12,"column_end":16},"name":"exit","qualname":"<Dispatch>::exit","value":"fn exit<'_, '_>(&'_ Self, &'_ span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53797,"byte_end":53837,"line_start":541,"line_end":541,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53842,"byte_end":53845,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This calls the [`exit`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53850,"byte_end":53918,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53923,"byte_end":53950,"line_start":544,"line_end":544,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53955,"byte_end":53958,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":53963,"byte_end":54012,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"/ [`exit`]: super::subscriber::Subscriber::exit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54017,"byte_end":54066,"line_start":547,"line_end":547,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54851,"byte_end":54861,"line_start":567,"line_end":567,"column_start":12,"column_end":22},"name":"clone_span","qualname":"<Dispatch>::clone_span","value":"fn clone_span<'_, '_>(&'_ Self, &'_ span::Id) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54156,"byte_end":54217,"line_start":552,"line_end":552,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54222,"byte_end":54225,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54230,"byte_end":54303,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54308,"byte_end":54380,"line_start":555,"line_end":555,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54385,"byte_end":54461,"line_start":556,"line_end":556,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54466,"byte_end":54483,"line_start":557,"line_end":557,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54488,"byte_end":54491,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ This calls the [`clone_span`] function on the `Subscriber` that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54496,"byte_end":54568,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54573,"byte_end":54600,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54605,"byte_end":54608,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54613,"byte_end":54643,"line_start":562,"line_end":562,"column_start":5,"column_end":35}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54648,"byte_end":54697,"line_start":563,"line_end":563,"column_start":5,"column_end":54}},{"value":"/ [`clone_span`]: super::subscriber::Subscriber::clone_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54702,"byte_end":54763,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ [`new_span`]: super::subscriber::Subscriber::new_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54768,"byte_end":54825,"line_start":565,"line_end":565,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54830,"byte_end":54839,"line_start":566,"line_end":566,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56135,"byte_end":56144,"line_start":595,"line_end":595,"column_start":12,"column_end":21},"name":"drop_span","qualname":"<Dispatch>::drop_span","value":"fn drop_span<'_>(&'_ Self, span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":54948,"byte_end":55010,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55015,"byte_end":55018,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55023,"byte_end":55096,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55101,"byte_end":55173,"line_start":574,"line_end":574,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55178,"byte_end":55254,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55259,"byte_end":55276,"line_start":576,"line_end":576,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55281,"byte_end":55284,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ This calls the [`drop_span`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55289,"byte_end":55362,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55367,"byte_end":55394,"line_start":579,"line_end":579,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55399,"byte_end":55402,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55407,"byte_end":55478,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/     <strong>Deprecated</strong>: The <a href=\"#method.try_close\"><code>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55483,"byte_end":55558,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/     try_close</code></a> method is functionally identical, but returns","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55563,"byte_end":55637,"line_start":583,"line_end":583,"column_start":5,"column_end":79}},{"value":"/     <code>true</code> if the span is now closed. It should be used","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55642,"byte_end":55712,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/     instead of this method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55717,"byte_end":55748,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/ </pre>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55753,"byte_end":55763,"line_start":586,"line_end":586,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55768,"byte_end":55771,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55776,"byte_end":55806,"line_start":588,"line_end":588,"column_start":5,"column_end":35}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55811,"byte_end":55860,"line_start":589,"line_end":589,"column_start":5,"column_end":54}},{"value":"/ [`drop_span`]: super::subscriber::Subscriber::drop_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55865,"byte_end":55924,"line_start":590,"line_end":590,"column_start":5,"column_end":64}},{"value":"/ [`new_span`]: super::subscriber::Subscriber::new_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55929,"byte_end":55986,"line_start":591,"line_end":591,"column_start":5,"column_end":62}},{"value":"/ [`try_close`]: Entered::try_close()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":55991,"byte_end":56030,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56035,"byte_end":56044,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Dispatch::try_close` instead\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56049,"byte_end":56123,"line_start":594,"line_end":594,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57003,"byte_end":57012,"line_start":615,"line_end":615,"column_start":12,"column_end":21},"name":"try_close","qualname":"<Dispatch>::try_close","value":"fn try_close<'_>(&'_ Self, span::Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs referring to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56247,"byte_end":56321,"line_start":600,"line_end":600,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs referring to that span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56326,"byte_end":56383,"line_start":601,"line_end":601,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56388,"byte_end":56391,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56396,"byte_end":56469,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56474,"byte_end":56546,"line_start":604,"line_end":604,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56551,"byte_end":56627,"line_start":605,"line_end":605,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56632,"byte_end":56649,"line_start":606,"line_end":606,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56654,"byte_end":56657,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This calls the [`try_close`] function on the [`Subscriber`] that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56662,"byte_end":56735,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/  `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56740,"byte_end":56768,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56773,"byte_end":56776,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56781,"byte_end":56811,"line_start":611,"line_end":611,"column_start":5,"column_end":35}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56816,"byte_end":56865,"line_start":612,"line_end":612,"column_start":5,"column_end":54}},{"value":"/ [`try_close`]: super::subscriber::Subscriber::try_close","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56870,"byte_end":56929,"line_start":613,"line_end":613,"column_start":5,"column_end":64}},{"value":"/ [`new_span`]: super::subscriber::Subscriber::new_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":56934,"byte_end":56991,"line_start":614,"line_end":614,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57381,"byte_end":57393,"line_start":626,"line_end":626,"column_start":12,"column_end":24},"name":"current_span","qualname":"<Dispatch>::current_span","value":"fn current_span<'_>(&'_ Self) -> span::Current","parent":null,"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57093,"byte_end":57168,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57173,"byte_end":57176,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This calls the [`current`] function on the `Subscriber` that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57181,"byte_end":57250,"line_start":621,"line_end":621,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57255,"byte_end":57282,"line_start":622,"line_end":622,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57287,"byte_end":57290,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ [`current`]: super::subscriber::Subscriber::current_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57295,"byte_end":57355,"line_start":624,"line_end":624,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57360,"byte_end":57369,"line_start":625,"line_end":625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57581,"byte_end":57583,"line_start":633,"line_end":633,"column_start":12,"column_end":14},"name":"is","qualname":"<Dispatch>::is","value":"fn is<T, '_>(&'_ Self) -> bool where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Dispatch` forwards to a `Subscriber` of type\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Dispatch` forwards to a `Subscriber` of type","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57470,"byte_end":57542,"line_start":630,"line_end":630,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57547,"byte_end":57555,"line_start":631,"line_end":631,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57560,"byte_end":57569,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57826,"byte_end":57838,"line_start":640,"line_end":640,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Dispatch>::downcast_ref","value":"fn downcast_ref<T, '_>(&'_ Self) -> Option<&'_ T> where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to the `Subscriber` this `Dispatch` forwards to\n if it is of type `T`, or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to the `Subscriber` this `Dispatch` forwards to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57673,"byte_end":57747,"line_start":637,"line_end":637,"column_start":5,"column_end":79}},{"value":"/ if it is of type `T`, or `None` if it isn't.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57752,"byte_end":57800,"line_start":638,"line_end":638,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57805,"byte_end":57814,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58019,"byte_end":58026,"line_start":647,"line_end":647,"column_start":8,"column_end":15},"name":"default","qualname":"<Dispatch as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":" Returns the current default dispatcher\n","sig":null,"attributes":[{"value":"/ Returns the current default dispatcher","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57969,"byte_end":58011,"line_start":646,"line_end":646,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58133,"byte_end":58136,"line_start":653,"line_end":653,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Dispatch as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58414,"byte_end":58418,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"from","qualname":"<Dispatch as std::convert::From>::from","value":"fn from(S) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58397,"byte_end":58406,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":60105,"byte_end":60109,"line_start":735,"line_end":735,"column_start":8,"column_end":12},"name":"drop","qualname":"<DefaultGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":60088,"byte_end":60097,"line_start":734,"line_end":734,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":320},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":976},{"krate":0,"index":981},{"krate":0,"index":334}],"decl_id":null,"docs":" Events represent single points in time during the execution of a program.\n","sig":null,"attributes":[{"value":"/ Events represent single points in time during the execution of a program.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65434,"byte_end":65511,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66436,"byte_end":66441,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"decl_id":null,"docs":" `Event`s represent single points in time where something occurred during the\n execution of a program.","sig":null,"attributes":[{"value":"/ `Event`s represent single points in time where something occurred during the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65591,"byte_end":65671,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ execution of a program.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65672,"byte_end":65699,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65700,"byte_end":65703,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An `Event` can be compared to a log record in unstructured logging, but with","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65704,"byte_end":65784,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ two key differences:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65785,"byte_end":65809,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/ - `Event`s exist _within the context of a [span]_. Unlike log lines, they","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65810,"byte_end":65887,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/   may be located within the trace tree, allowing visibility into the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65888,"byte_end":65960,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/   _temporal_ context in which the event occurred, as well as the source","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":65961,"byte_end":66036,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   code location.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66037,"byte_end":66057,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ - Like spans, `Event`s have structured key-value data known as _[fields]_,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66058,"byte_end":66136,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   which may include textual message. In general, a majority of the data","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66137,"byte_end":66212,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/   associated with an event should be in the event's fields rather than in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66213,"byte_end":66290,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   the textual message, as the fields are more structured.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66291,"byte_end":66352,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66353,"byte_end":66356,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [span]: super::span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66357,"byte_end":66380,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/ [fields]: super::field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66381,"byte_end":66407,"line_start":21,"line_end":21,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66715,"byte_end":66723,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<Event>::dispatch","value":"fn dispatch<'_>(&'static Metadata, &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66575,"byte_end":66650,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66655,"byte_end":66703,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67083,"byte_end":67086,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` in the current span, with the specified metadata\n and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` in the current span, with the specified metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66956,"byte_end":67030,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ and set of values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67035,"byte_end":67057,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67062,"byte_end":67071,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67423,"byte_end":67435,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"new_child_of","qualname":"<Event>::new_child_of","value":"fn new_child_of<impl Into<Option<Id>>>(impl Into<Option<Id>>,\n&'static Metadata, &'a field::ValueSet) -> Self where\nimpl Into<Option<Id>>: Into<Option<Id>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` as a child of the specified span, with the\n provided metadata and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` as a child of the specified span, with the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67284,"byte_end":67352,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ provided metadata and set of values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67357,"byte_end":67397,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67402,"byte_end":67411,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67973,"byte_end":67981,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Event>::child_of","value":"fn child_of<'_,\nimpl Into<Option<Id>>>(impl Into<Option<Id>>, &'static Metadata,\n&'a field::ValueSet) where impl Into<Option<Id>>: Into<Option<Id>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber and an explicit parent.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67810,"byte_end":67885,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber and an explicit parent.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":67890,"byte_end":67961,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68436,"byte_end":68442,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"record","qualname":"<Event>::record","value":"fn record<'_, '_>(&'_ Self, &'_ mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields on this `Event` with the specified [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields on this `Event` with the specified [visitor].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68292,"byte_end":68363,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68368,"byte_end":68371,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [visitor]: super::field::Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68376,"byte_end":68410,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68415,"byte_end":68424,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68607,"byte_end":68613,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"fields","qualname":"<Event>::fields","value":"fn fields<'_>(&'_ Self) -> field::Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the set of values on this `Event`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the set of values on this `Event`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68532,"byte_end":68595,"line_start":90,"line_end":90,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68791,"byte_end":68799,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Event>::metadata","value":"fn metadata<'_>(&'_ Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns [metadata] describing this `Event`.","sig":null,"attributes":[{"value":"/ Returns [metadata] describing this `Event`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68688,"byte_end":68735,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68740,"byte_end":68743,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [metadata]: super::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68748,"byte_end":68779,"line_start":97,"line_end":97,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68935,"byte_end":68942,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Event>::is_root","value":"fn is_root<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new event should be a root.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":68872,"byte_end":68923,"line_start":102,"line_end":102,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69400,"byte_end":69413,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Event>::is_contextual","value":"fn is_contextual<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new event's parent should be determined based on the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69015,"byte_end":69091,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ current context.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69096,"byte_end":69116,"line_start":108,"line_end":108,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69121,"byte_end":69124,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69129,"byte_end":69204,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ that span should be the new event's parent. Otherwise, if the current","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69209,"byte_end":69282,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ thread is _not_ inside a span, then the new event will be the root of its","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69287,"byte_end":69364,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ own trace tree.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69369,"byte_end":69388,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69688,"byte_end":69694,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"parent","qualname":"<Event>::parent","value":"fn parent<'_>(&'_ Self) -> Option<&'_ Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new event's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new event's explicitly-specified parent, if there is one.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69489,"byte_end":69562,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69567,"byte_end":69570,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new event is a root or is a child of the current span),","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69575,"byte_end":69652,"line_start":120,"line_end":120,"column_start":5,"column_end":82}},{"value":"/ returns `None`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":69657,"byte_end":69676,"line_start":121,"line_end":121,"column_start":5,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":350},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":387},{"krate":0,"index":397},{"krate":0,"index":1004},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":571},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234}],"decl_id":null,"docs":" `Span` and `Event` key-value data.","sig":null,"attributes":[{"value":"/ `Span` and `Event` key-value data.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":69837,"byte_end":69875,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":69876,"byte_end":69879,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":69880,"byte_end":69959,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":69960,"byte_end":70039,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70040,"byte_end":70114,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70115,"byte_end":70118,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Value`s and `Subscriber`s","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70119,"byte_end":70151,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70152,"byte_end":70155,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70156,"byte_end":70235,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70236,"byte_end":70312,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70313,"byte_end":70389,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70390,"byte_end":70468,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70469,"byte_end":70544,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70545,"byte_end":70620,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70621,"byte_end":70698,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ will contain any fields attached to each event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70699,"byte_end":70750,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70751,"byte_end":70754,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70755,"byte_end":70828,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (`i64`, `u64`, `f64`, `i128`, `u128`, `bool`, and `&str`) or using a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70829,"byte_end":70901,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ `fmt::Display` or `fmt::Debug` implementation. `Subscriber`s are provided","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70902,"byte_end":70979,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ these primitive value types as `dyn Value` trait objects.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":70980,"byte_end":71041,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71042,"byte_end":71045,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71046,"byte_end":71122,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71123,"byte_end":71198,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71199,"byte_end":71278,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ represents the behavior used to record values of various types. For example,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71279,"byte_end":71359,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ an implementation of `Visit` might record integers by incrementing counters","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71360,"byte_end":71439,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ for their field names rather than printing them.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71440,"byte_end":71492,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71493,"byte_end":71496,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71497,"byte_end":71500,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Using `valuable`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71501,"byte_end":71523,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71524,"byte_end":71527,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `tracing`'s [`Value`] trait is intentionally minimalist: it supports only a small","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71528,"byte_end":71613,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ number of Rust primitives as typed values, and only permits recording","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71614,"byte_end":71687,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ user-defined types with their [`fmt::Debug`] or [`fmt::Display`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71688,"byte_end":71756,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ implementations. However, there are some cases where it may be useful to record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71757,"byte_end":71840,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ nested values (such as arrays, `Vec`s, or `HashMap`s containing values), or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71841,"byte_end":71920,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ user-defined `struct` and `enum` types without having to format them as","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71921,"byte_end":71996,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ unstructured text.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":71997,"byte_end":72019,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72020,"byte_end":72023,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To address `Value`'s limitations, `tracing` offers experimental support for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72024,"byte_end":72103,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ the [`valuable`] crate, which provides object-safe inspection of structured","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72104,"byte_end":72183,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ values. User-defined types can implement the [`valuable::Valuable`] trait,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72184,"byte_end":72262,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ and be recorded as a `tracing` field by calling their [`as_value`] method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72263,"byte_end":72341,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ If the [`Subscriber`] also supports the `valuable` crate, it can","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72342,"byte_end":72410,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ then visit those types fields as structured values using `valuable`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72411,"byte_end":72483,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72484,"byte_end":72487,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72488,"byte_end":72553,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>valuable</code> support is an","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72554,"byte_end":72620,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/     <a href = \"../index.html#unstable-features\">unstable feature</a>. See","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72621,"byte_end":72698,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/     the documentation on unstable features for details on how to enable it.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72699,"byte_end":72778,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ </pre>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72779,"byte_end":72789,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72790,"byte_end":72793,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72794,"byte_end":72810,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72811,"byte_end":72824,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ // Derive `Valuable` for our types:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72825,"byte_end":72864,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/ use valuable::Valuable;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72865,"byte_end":72892,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72893,"byte_end":72896,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72897,"byte_end":72934,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ struct User {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72935,"byte_end":72952,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72953,"byte_end":72974,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     age: u32,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72975,"byte_end":72992,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     address: Address,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":72993,"byte_end":73018,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73019,"byte_end":73024,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73025,"byte_end":73028,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73029,"byte_end":73066,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ struct Address {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73067,"byte_end":73087,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/     country: String,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73088,"byte_end":73112,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     city: String,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73113,"byte_end":73134,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     street: String,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73135,"byte_end":73158,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73159,"byte_end":73164,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73165,"byte_end":73168,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let user = User {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73169,"byte_end":73190,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     name: \"Arwen Undomiel\".to_string(),","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73191,"byte_end":73234,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/     age: 3000,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73235,"byte_end":73253,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/     address: Address {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73254,"byte_end":73280,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/         country: \"Middle Earth\".to_string(),","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73281,"byte_end":73329,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/         city: \"Rivendell\".to_string(),","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73330,"byte_end":73372,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/         street: \"leafy lane\".to_string(),","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73373,"byte_end":73418,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     },","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73419,"byte_end":73429,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73430,"byte_end":73436,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73437,"byte_end":73440,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Recording `user` as a `valuable::Value` will allow the `tracing` subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73441,"byte_end":73523,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ // to traverse its fields as a nested, typed structure:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73524,"byte_end":73583,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ tracing::info!(current_user = user.as_value());","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73584,"byte_end":73635,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73636,"byte_end":73643,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73644,"byte_end":73647,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, the [`valuable()`] function may be used to convert a type","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73648,"byte_end":73724,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ implementing [`Valuable`] into a `tracing` field value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73725,"byte_end":73784,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73785,"byte_end":73788,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ When the `valuable` feature is enabled, the [`Visit`] trait will include an","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73789,"byte_end":73868,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ optional [`record_value`] method. `Visit` implementations that wish to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73869,"byte_end":73943,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ record `valuable` values can implement this method with custom behavior.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":73944,"byte_end":74020,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ If a visitor does not implement `record_value`, the [`valuable::Value`] will","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74021,"byte_end":74101,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ be forwarded to the visitor's [`record_debug`] method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74102,"byte_end":74160,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74161,"byte_end":74164,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74165,"byte_end":74216,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/ [`as_value`]: valuable::Valuable::as_value","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74217,"byte_end":74263,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74264,"byte_end":74301,"line_start":99,"line_end":99,"column_start":1,"column_end":38}},{"value":"/ [`record_value`]: Visit::record_value","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74302,"byte_end":74343,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/ [`record_debug`]: Visit::record_debug","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74344,"byte_end":74385,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74386,"byte_end":74389,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [span]: super::span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74390,"byte_end":74413,"line_start":103,"line_end":103,"column_start":1,"column_end":24}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74414,"byte_end":74448,"line_start":104,"line_end":104,"column_start":1,"column_end":35}},{"value":"/ [`Metadata`]: super::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74449,"byte_end":74492,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/ [`Attributes`]:  super::span::Attributes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74493,"byte_end":74537,"line_start":106,"line_end":106,"column_start":1,"column_end":45}},{"value":"/ [`Record`]: super::span::Record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74538,"byte_end":74573,"line_start":107,"line_end":107,"column_start":1,"column_end":36}},{"value":"/ [`new_span`]: super::subscriber::Subscriber::new_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74574,"byte_end":74631,"line_start":108,"line_end":108,"column_start":1,"column_end":58}},{"value":"/ [`record`]: super::subscriber::Subscriber::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74632,"byte_end":74685,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/ [`event`]:  super::subscriber::Subscriber::event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74686,"byte_end":74738,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/ [`Value::record`]: Value::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74739,"byte_end":74775,"line_start":111,"line_end":111,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75435,"byte_end":75440,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"decl_id":null,"docs":" An opaque key allowing _O_(1) access to a field in a `Span`'s key-value\n data.","sig":null,"attributes":[{"value":"/ An opaque key allowing _O_(1) access to a field in a `Span`'s key-value","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":74952,"byte_end":75027,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75028,"byte_end":75037,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75038,"byte_end":75041,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As keys are defined by the _metadata_ of a span, rather than by an","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75042,"byte_end":75112,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/ individual instance of a span, a key may be used to access the same field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75113,"byte_end":75190,"line_start":128,"line_end":128,"column_start":1,"column_end":78}},{"value":"/ across all instances of a given span with the same metadata. Thus, when a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75191,"byte_end":75268,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ subscriber observes a new span, it need only access a field by name _once_,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75269,"byte_end":75348,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ and use the key for that name for all other accesses.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75349,"byte_end":75406,"line_start":131,"line_end":131,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75731,"byte_end":75736,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"Empty","qualname":"::field::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty field.","sig":null,"attributes":[{"value":"/ An empty field.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75482,"byte_end":75501,"line_start":138,"line_end":138,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75502,"byte_end":75505,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This can be used to indicate that the value of a field is not currently","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75506,"byte_end":75581,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/ present but will be recorded later.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75582,"byte_end":75621,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75622,"byte_end":75625,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ When a field's value is `Empty`. it will not be recorded.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75626,"byte_end":75687,"line_start":143,"line_end":143,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76208,"byte_end":76216,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"FieldSet","qualname":"::field::FieldSet","value":"FieldSet {  }","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"decl_id":null,"docs":" Describes the fields present on a span.","sig":null,"attributes":[{"value":"/ Describes the fields present on a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75739,"byte_end":75782,"line_start":147,"line_end":147,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75783,"byte_end":75786,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ## Equality","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75787,"byte_end":75802,"line_start":149,"line_end":149,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75803,"byte_end":75806,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ In well-behaved applications, two `FieldSet`s [initialized] with equal","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75807,"byte_end":75881,"line_start":151,"line_end":151,"column_start":1,"column_end":75}},{"value":"/ [callsite identifiers] will have identical fields. Consequently, in release","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75882,"byte_end":75961,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ builds, [`FieldSet::eq`] *only* checks that its arguments have equal","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":75962,"byte_end":76034,"line_start":153,"line_end":153,"column_start":1,"column_end":73}},{"value":"/ callsites. However, the equality of field names is checked in debug builds.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76035,"byte_end":76114,"line_start":154,"line_end":154,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76115,"byte_end":76118,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [initialized]: Self::new","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76119,"byte_end":76147,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ [callsite identifiers]: callsite::Identifier","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76148,"byte_end":76196,"line_start":157,"line_end":157,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76461,"byte_end":76469,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"ValueSet","qualname":"::field::ValueSet","value":"ValueSet {  }","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"decl_id":null,"docs":" A set of fields and values for a span.\n","sig":null,"attributes":[{"value":"/ A set of fields and values for a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76407,"byte_end":76449,"line_start":165,"line_end":165,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76632,"byte_end":76636,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"Iter","qualname":"::field::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"decl_id":null,"docs":" An iterator over a set of fields.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of fields.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76566,"byte_end":76603,"line_start":171,"line_end":171,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":387},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80380,"byte_end":80385,"line_start":266,"line_end":266,"column_start":11,"column_end":16},"name":"Visit","qualname":"::field::Visit","value":"Visit","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"decl_id":null,"docs":" Visits typed values.","sig":null,"attributes":[{"value":"/ Visits typed values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76688,"byte_end":76712,"line_start":178,"line_end":178,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76713,"byte_end":76716,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ An instance of `Visit` (\"a visitor\") represents the logic necessary to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76717,"byte_end":76791,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ record field values of various types. When an implementor of [`Value`] is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76792,"byte_end":76869,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/ [recorded], it calls the appropriate method on the provided visitor to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76870,"byte_end":76944,"line_start":182,"line_end":182,"column_start":1,"column_end":75}},{"value":"/ indicate the type that value should be recorded as.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":76945,"byte_end":77000,"line_start":183,"line_end":183,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77001,"byte_end":77004,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ When a [`Subscriber`] implementation [records an `Event`] or a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77005,"byte_end":77071,"line_start":185,"line_end":185,"column_start":1,"column_end":67}},{"value":"/ [set of `Value`s added to a `Span`], it can pass an `&mut Visit` to the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77072,"byte_end":77147,"line_start":186,"line_end":186,"column_start":1,"column_end":76}},{"value":"/ `record` method on the provided [`ValueSet`] or [`Event`]. This visitor","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77148,"byte_end":77223,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/ will then be used to record all the field-value pairs present on that","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77224,"byte_end":77297,"line_start":188,"line_end":188,"column_start":1,"column_end":74}},{"value":"/ `Event` or `ValueSet`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77298,"byte_end":77324,"line_start":189,"line_end":189,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77325,"byte_end":77328,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77329,"byte_end":77343,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77344,"byte_end":77347,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ A simple visitor that writes to a string might be implemented like so:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77348,"byte_end":77422,"line_start":193,"line_end":193,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77423,"byte_end":77430,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77431,"byte_end":77474,"line_start":195,"line_end":195,"column_start":1,"column_end":44}},{"value":"/ use std::fmt::{self, Write};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77475,"byte_end":77507,"line_start":196,"line_end":196,"column_start":1,"column_end":33}},{"value":"/ use tracing::field::{Value, Visit, Field};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77508,"byte_end":77554,"line_start":197,"line_end":197,"column_start":1,"column_end":47}},{"value":"/ pub struct StringVisitor<'a> {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77555,"byte_end":77589,"line_start":198,"line_end":198,"column_start":1,"column_end":35}},{"value":"/     string: &'a mut String,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77590,"byte_end":77621,"line_start":199,"line_end":199,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77622,"byte_end":77627,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77628,"byte_end":77631,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Visit for StringVisitor<'a> {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77632,"byte_end":77674,"line_start":202,"line_end":202,"column_start":1,"column_end":43}},{"value":"/     fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77675,"byte_end":77750,"line_start":203,"line_end":203,"column_start":1,"column_end":76}},{"value":"/         write!(self.string, \"{} = {:?}; \", field.name(), value).unwrap();","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77751,"byte_end":77828,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77829,"byte_end":77838,"line_start":205,"line_end":205,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77839,"byte_end":77844,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77845,"byte_end":77852,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/ This visitor will format each recorded value using `fmt::Debug`, and","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77853,"byte_end":77925,"line_start":208,"line_end":208,"column_start":1,"column_end":73}},{"value":"/ append the field name and formatted value to the provided string,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77926,"byte_end":77995,"line_start":209,"line_end":209,"column_start":1,"column_end":70}},{"value":"/ regardless of the type of the recorded value. When all the values have","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":77996,"byte_end":78070,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ been recorded, the `StringVisitor` may be dropped, allowing the string","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78071,"byte_end":78145,"line_start":211,"line_end":211,"column_start":1,"column_end":75}},{"value":"/ to be printed or stored in some other data structure.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78146,"byte_end":78203,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78204,"byte_end":78207,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ The `Visit` trait provides default implementations for `record_i64`,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78208,"byte_end":78280,"line_start":214,"line_end":214,"column_start":1,"column_end":73}},{"value":"/ `record_u64`, `record_bool`, `record_str`, and `record_error`, which simply","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78281,"byte_end":78360,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ forward the recorded value to `record_debug`. Thus, `record_debug` is the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78361,"byte_end":78438,"line_start":216,"line_end":216,"column_start":1,"column_end":78}},{"value":"/ only method which a `Visit` implementation *must* implement. However,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78439,"byte_end":78512,"line_start":217,"line_end":217,"column_start":1,"column_end":74}},{"value":"/ visitors may override the default implementations of these functions in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78513,"byte_end":78588,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ order to implement type-specific behavior.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78589,"byte_end":78635,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78636,"byte_end":78639,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Additionally, when a visitor receives a value of a type it does not care","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78640,"byte_end":78716,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ about, it is free to ignore those values completely. For example, a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78717,"byte_end":78788,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"/ visitor which only records numeric data might look like this:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78789,"byte_end":78854,"line_start":223,"line_end":223,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78855,"byte_end":78858,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78859,"byte_end":78866,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78867,"byte_end":78910,"line_start":226,"line_end":226,"column_start":1,"column_end":44}},{"value":"/ # use std::fmt::{self, Write};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78911,"byte_end":78945,"line_start":227,"line_end":227,"column_start":1,"column_end":35}},{"value":"/ # use tracing::field::{Value, Visit, Field};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78946,"byte_end":78994,"line_start":228,"line_end":228,"column_start":1,"column_end":49}},{"value":"/ pub struct SumVisitor {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":78995,"byte_end":79022,"line_start":229,"line_end":229,"column_start":1,"column_end":28}},{"value":"/     sum: i64,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79023,"byte_end":79040,"line_start":230,"line_end":230,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79041,"byte_end":79046,"line_start":231,"line_end":231,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79047,"byte_end":79050,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ impl Visit for SumVisitor {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79051,"byte_end":79082,"line_start":233,"line_end":233,"column_start":1,"column_end":32}},{"value":"/     fn record_i64(&mut self, _field: &Field, value: i64) {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79083,"byte_end":79145,"line_start":234,"line_end":234,"column_start":1,"column_end":63}},{"value":"/        self.sum += value;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79146,"byte_end":79175,"line_start":235,"line_end":235,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79176,"byte_end":79185,"line_start":236,"line_end":236,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79186,"byte_end":79189,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/     fn record_u64(&mut self, _field: &Field, value: u64) {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79190,"byte_end":79252,"line_start":238,"line_end":238,"column_start":1,"column_end":63}},{"value":"/         self.sum += value as i64;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79253,"byte_end":79290,"line_start":239,"line_end":239,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79291,"byte_end":79300,"line_start":240,"line_end":240,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79301,"byte_end":79304,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/     fn record_debug(&mut self, _field: &Field, _value: &fmt::Debug) {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79305,"byte_end":79378,"line_start":242,"line_end":242,"column_start":1,"column_end":74}},{"value":"/         // Do nothing","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79379,"byte_end":79404,"line_start":243,"line_end":243,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79405,"byte_end":79414,"line_start":244,"line_end":244,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79415,"byte_end":79420,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79421,"byte_end":79428,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79429,"byte_end":79432,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ This visitor (which is probably not particularly useful) keeps a running","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79433,"byte_end":79509,"line_start":248,"line_end":248,"column_start":1,"column_end":77}},{"value":"/ sum of all the numeric values it records, and ignores all other values. A","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79510,"byte_end":79587,"line_start":249,"line_end":249,"column_start":1,"column_end":78}},{"value":"/ more practical example of recording typed values is presented in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79588,"byte_end":79656,"line_start":250,"line_end":250,"column_start":1,"column_end":69}},{"value":"/ `examples/counters.rs`, which demonstrates a very simple metrics system","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79657,"byte_end":79732,"line_start":251,"line_end":251,"column_start":1,"column_end":76}},{"value":"/ implemented using `tracing`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79733,"byte_end":79765,"line_start":252,"line_end":252,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79766,"byte_end":79769,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79770,"byte_end":79829,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79830,"byte_end":79895,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The <code>record_error</code> trait method is only","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79896,"byte_end":79973,"line_start":256,"line_end":256,"column_start":1,"column_end":78}},{"value":"/ available when the Rust standard library is present, as it requires the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":79974,"byte_end":80049,"line_start":257,"line_end":257,"column_start":1,"column_end":76}},{"value":"/ <code>std::error::Error</code> trait.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80050,"byte_end":80091,"line_start":258,"line_end":258,"column_start":1,"column_end":42}},{"value":"/ </pre></div>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80092,"byte_end":80108,"line_start":259,"line_end":259,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80109,"byte_end":80112,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ [recorded]: Value::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80113,"byte_end":80142,"line_start":261,"line_end":261,"column_start":1,"column_end":30}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80143,"byte_end":80192,"line_start":262,"line_end":262,"column_start":1,"column_end":50}},{"value":"/ [records an `Event`]: super::subscriber::Subscriber::event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80193,"byte_end":80255,"line_start":263,"line_end":263,"column_start":1,"column_end":63}},{"value":"/ [set of `Value`s added to a `Span`]: super::subscriber::Subscriber::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80256,"byte_end":80334,"line_start":264,"line_end":264,"column_start":1,"column_end":79}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80335,"byte_end":80369,"line_start":265,"line_end":265,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80853,"byte_end":80863,"line_start":277,"line_end":277,"column_start":8,"column_end":18},"name":"record_f64","qualname":"::field::Visit::record_f64","value":"fn record_f64<'_, '_>(&'_ mut Self, &'_ Field, f64)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a double-precision floating point value.\n","sig":null,"attributes":[{"value":"/ Visit a double-precision floating point value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80795,"byte_end":80845,"line_start":276,"line_end":276,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81004,"byte_end":81014,"line_start":282,"line_end":282,"column_start":8,"column_end":18},"name":"record_i64","qualname":"::field::Visit::record_i64","value":"fn record_i64<'_, '_>(&'_ mut Self, &'_ Field, i64)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit a signed 64-bit integer value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":80956,"byte_end":80996,"line_start":281,"line_end":281,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81158,"byte_end":81168,"line_start":287,"line_end":287,"column_start":8,"column_end":18},"name":"record_u64","qualname":"::field::Visit::record_u64","value":"fn record_u64<'_, '_>(&'_ mut Self, &'_ Field, u64)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit an unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned 64-bit integer value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81107,"byte_end":81150,"line_start":286,"line_end":286,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81310,"byte_end":81321,"line_start":292,"line_end":292,"column_start":8,"column_end":19},"name":"record_i128","qualname":"::field::Visit::record_i128","value":"fn record_i128<'_, '_>(&'_ mut Self, &'_ Field, i128)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a signed 128-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit a signed 128-bit integer value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81261,"byte_end":81302,"line_start":291,"line_end":291,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81467,"byte_end":81478,"line_start":297,"line_end":297,"column_start":8,"column_end":19},"name":"record_u128","qualname":"::field::Visit::record_u128","value":"fn record_u128<'_, '_>(&'_ mut Self, &'_ Field, u128)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit an unsigned 128-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned 128-bit integer value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81415,"byte_end":81459,"line_start":296,"line_end":296,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81606,"byte_end":81617,"line_start":302,"line_end":302,"column_start":8,"column_end":19},"name":"record_bool","qualname":"::field::Visit::record_bool","value":"fn record_bool<'_, '_>(&'_ mut Self, &'_ Field, bool)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a boolean value.\n","sig":null,"attributes":[{"value":"/ Visit a boolean value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81572,"byte_end":81598,"line_start":301,"line_end":301,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81744,"byte_end":81754,"line_start":307,"line_end":307,"column_start":8,"column_end":18},"name":"record_str","qualname":"::field::Visit::record_str","value":"fn record_str<'_, '_, '_>(&'_ mut Self, &'_ Field, &'_ str)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a string value.\n","sig":null,"attributes":[{"value":"/ Visit a string value.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81711,"byte_end":81736,"line_start":306,"line_end":306,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82235,"byte_end":82247,"line_start":320,"line_end":320,"column_start":8,"column_end":20},"name":"record_error","qualname":"::field::Visit::record_error","value":"fn record_error<'_, '_,\n'_>(&'_ mut Self, &'_ Field, &'_ dyn std::error::Error + 'static)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Records a type implementing `Error`.","sig":null,"attributes":[{"value":"/ Records a type implementing `Error`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81848,"byte_end":81888,"line_start":311,"line_end":311,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81893,"byte_end":81896,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81901,"byte_end":81960,"line_start":313,"line_end":313,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":81965,"byte_end":82030,"line_start":314,"line_end":314,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This is only enabled when the Rust standard library is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82035,"byte_end":82116,"line_start":315,"line_end":315,"column_start":5,"column_end":86}},{"value":"/ present.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82121,"byte_end":82133,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82138,"byte_end":82148,"line_start":317,"line_end":317,"column_start":5,"column_end":15}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82153,"byte_end":82176,"line_start":318,"line_end":318,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82437,"byte_end":82449,"line_start":325,"line_end":325,"column_start":8,"column_end":20},"name":"record_debug","qualname":"::field::Visit::record_debug","value":"fn record_debug<'_, '_, '_>(&'_ mut Self, &'_ Field, &'_ dyn fmt::Debug)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Visit a value implementing `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ Visit a value implementing `fmt::Debug`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82385,"byte_end":82429,"line_start":324,"line_end":324,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":397},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82770,"byte_end":82775,"line_start":335,"line_end":335,"column_start":11,"column_end":16},"name":"Value","qualname":"::field::Value","value":"Value: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":398}],"decl_id":null,"docs":" A field value of an erased type.","sig":null,"attributes":[{"value":"/ A field value of an erased type.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82504,"byte_end":82540,"line_start":328,"line_end":328,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82541,"byte_end":82544,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Implementors of `Value` may call the appropriate typed recording methods on","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82545,"byte_end":82624,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ the [visitor] passed to their `record` method in order to indicate how","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82625,"byte_end":82699,"line_start":331,"line_end":331,"column_start":1,"column_end":75}},{"value":"/ their data should be recorded.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82700,"byte_end":82734,"line_start":332,"line_end":332,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82735,"byte_end":82738,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ [visitor]: Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82739,"byte_end":82759,"line_start":334,"line_end":334,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82860,"byte_end":82866,"line_start":337,"line_end":337,"column_start":8,"column_end":14},"name":"record","qualname":"::field::Value::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Visits this value with the given `Visitor`.\n","sig":null,"attributes":[{"value":"/ Visits this value with the given `Visitor`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82805,"byte_end":82852,"line_start":336,"line_end":336,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83095,"byte_end":83107,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"DisplayValue","qualname":"::field::DisplayValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes using `fmt::Display`.","sig":null,"attributes":[{"value":"/ A `Value` which serializes using `fmt::Display`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82916,"byte_end":82968,"line_start":340,"line_end":340,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82969,"byte_end":82972,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ Uses `record_debug` in the `Value` implementation to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82973,"byte_end":83029,"line_start":342,"line_end":342,"column_start":1,"column_end":57}},{"value":"/ avoid an unnecessary evaluation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83030,"byte_end":83066,"line_start":343,"line_end":343,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83221,"byte_end":83231,"line_start":349,"line_end":349,"column_start":12,"column_end":22},"name":"DebugValue","qualname":"::field::DebugValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes as a string using `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ A `Value` which serializes as a string using `fmt::Debug`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83130,"byte_end":83192,"line_start":347,"line_end":347,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83378,"byte_end":83385,"line_start":353,"line_end":353,"column_start":8,"column_end":15},"name":"display","qualname":"::field::display","value":"fn display<T>(T) -> DisplayValue<T> where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Display` as a `Value` that can be\n recorded using its `Display` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Display` as a `Value` that can be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83252,"byte_end":83321,"line_start":351,"line_end":351,"column_start":1,"column_end":70}},{"value":"/ recorded using its `Display` implementation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83322,"byte_end":83370,"line_start":352,"line_end":352,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":401},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83588,"byte_end":83593,"line_start":362,"line_end":362,"column_start":8,"column_end":13},"name":"debug","qualname":"::field::debug","value":"fn debug<T>(T) -> DebugValue<T> where T: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Debug` as a `Value` that can be\n recorded using its `Debug` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Debug` as a `Value` that can be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83466,"byte_end":83533,"line_start":360,"line_end":360,"column_start":1,"column_end":68}},{"value":"/ recorded using its `Debug` implementation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":83534,"byte_end":83580,"line_start":361,"line_end":361,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84184,"byte_end":84196,"line_start":385,"line_end":385,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<fmt::DebugStruct as field::Visit>::record_debug","value":"fn record_debug<'_, '_, '_>(&'_ mut Self, &'_ Field, &'_ dyn fmt::Debug)","parent":{"krate":0,"index":387},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84353,"byte_end":84365,"line_start":391,"line_end":391,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<fmt::DebugMap as field::Visit>::record_debug","value":"fn record_debug<'_, '_, '_>(&'_ mut Self, &'_ Field, &'_ dyn fmt::Debug)","parent":{"krate":0,"index":387},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84556,"byte_end":84568,"line_start":400,"line_end":400,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<F as field::Visit>::record_debug","value":"fn record_debug<'_, '_, '_>(&'_ mut Self, &'_ Field, &'_ dyn fmt::Debug)","parent":{"krate":0,"index":387},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":87798,"byte_end":87804,"line_start":521,"line_end":521,"column_start":8,"column_end":14},"name":"record","qualname":"<Wrapping<T> as field::Value>::record","value":"fn record<'_, '_,\n'_>(&'_ Self, &'_ crate::field::Field, &'_ mut dyn crate::field::Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":87992,"byte_end":87998,"line_start":529,"line_end":529,"column_start":8,"column_end":14},"name":"record","qualname":"<str as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":88311,"byte_end":88317,"line_start":540,"line_end":540,"column_start":8,"column_end":14},"name":"record","qualname":"<dyn std::error::Error + 'static as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":88646,"byte_end":88652,"line_start":551,"line_end":551,"column_start":8,"column_end":14},"name":"record","qualname":"<dyn std::error::Error + Send + 'static as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":89003,"byte_end":89009,"line_start":562,"line_end":562,"column_start":8,"column_end":14},"name":"record","qualname":"<dyn std::error::Error + Sync + 'static as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":89374,"byte_end":89380,"line_start":573,"line_end":573,"column_start":8,"column_end":14},"name":"record","qualname":"<dyn std::error::Error + Send + Sync + 'static as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":89669,"byte_end":89675,"line_start":584,"line_end":584,"column_start":8,"column_end":14},"name":"record","qualname":"<&'a T as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":89947,"byte_end":89953,"line_start":595,"line_end":595,"column_start":8,"column_end":14},"name":"record","qualname":"<&'a mut T as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90288,"byte_end":90294,"line_start":605,"line_end":605,"column_start":8,"column_end":14},"name":"record","qualname":"<fmt::Arguments as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90579,"byte_end":90585,"line_start":617,"line_end":617,"column_start":8,"column_end":14},"name":"record","qualname":"<crate::stdlib::boxed::Box<T> as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90562,"byte_end":90571,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90757,"byte_end":90763,"line_start":624,"line_end":624,"column_start":8,"column_end":14},"name":"record","qualname":"<String as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90906,"byte_end":90909,"line_start":630,"line_end":630,"column_start":8,"column_end":11},"name":"fmt","qualname":"<dyn Value as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":91930,"byte_end":91933,"line_start":659,"line_end":659,"column_start":8,"column_end":11},"name":"fmt","qualname":"<dyn Value as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92200,"byte_end":92206,"line_start":672,"line_end":672,"column_start":8,"column_end":14},"name":"record","qualname":"<DisplayValue<T> as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92365,"byte_end":92368,"line_start":678,"line_end":678,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DisplayValue<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92529,"byte_end":92532,"line_start":684,"line_end":684,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DisplayValue<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92778,"byte_end":92784,"line_start":697,"line_end":697,"column_start":8,"column_end":14},"name":"record","qualname":"<DebugValue<T> as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92942,"byte_end":92945,"line_start":703,"line_end":703,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DebugValue<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":93936,"byte_end":93942,"line_start":735,"line_end":735,"column_start":8,"column_end":14},"name":"record","qualname":"<Empty as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":93919,"byte_end":93928,"line_start":734,"line_end":734,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94085,"byte_end":94091,"line_start":741,"line_end":741,"column_start":8,"column_end":14},"name":"record","qualname":"<Option<T> as field::Value>::record","value":"fn record<'_, '_, '_>(&'_ Self, &'_ Field, &'_ mut dyn Visit)","parent":{"krate":0,"index":397},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94509,"byte_end":94517,"line_start":757,"line_end":757,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Field>::callsite","value":"fn callsite<'_>(&'_ Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n which defines this field.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94270,"byte_end":94341,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/ which defines this field.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94346,"byte_end":94375,"line_start":752,"line_end":752,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94380,"byte_end":94383,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: super::callsite::Identifier","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94388,"byte_end":94435,"line_start":754,"line_end":754,"column_start":5,"column_end":52}},{"value":"/ [`Callsite`]: super::callsite::Callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94440,"byte_end":94483,"line_start":755,"line_end":755,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94488,"byte_end":94497,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94661,"byte_end":94665,"line_start":762,"line_end":762,"column_start":12,"column_end":16},"name":"name","qualname":"<Field>::name","value":"fn name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representing the name of the field.\n","sig":null,"attributes":[{"value":"/ Returns a string representing the name of the field.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94593,"byte_end":94649,"line_start":761,"line_end":761,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94771,"byte_end":94774,"line_start":768,"line_end":768,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Field as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94898,"byte_end":94904,"line_start":774,"line_end":774,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Field as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ str","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94985,"byte_end":94987,"line_start":780,"line_end":780,"column_start":8,"column_end":10},"name":"eq","qualname":"<Field as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95144,"byte_end":95148,"line_start":788,"line_end":788,"column_start":8,"column_end":12},"name":"hash","qualname":"<Field as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10526},"children":[],"decl_id":{"krate":2,"index":10527},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95313,"byte_end":95318,"line_start":798,"line_end":798,"column_start":8,"column_end":13},"name":"clone","qualname":"<Field as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95681,"byte_end":95684,"line_start":813,"line_end":813,"column_start":18,"column_end":21},"name":"new","qualname":"<FieldSet>::new","value":"const fn new(&'static [&'static str], callsite::Identifier) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `FieldSet` with the given array of field names and callsite.\n","sig":null,"attributes":[{"value":"/ Constructs a new `FieldSet` with the given array of field names and callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95582,"byte_end":95663,"line_start":812,"line_end":812,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96269,"byte_end":96274,"line_start":829,"line_end":829,"column_start":12,"column_end":17},"name":"field","qualname":"<FieldSet>::field","value":"fn field<Q, '_, '_>(&'_ Self, &'_ Q) -> Option<Field> where Q: ?Sized,\nQ: Borrow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Field`] named `name`, or `None` if no such field exists.","sig":null,"attributes":[{"value":"/ Returns the [`Field`] named `name`, or `None` if no such field exists.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96143,"byte_end":96217,"line_start":826,"line_end":826,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96222,"byte_end":96225,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ [`Field`]: super::Field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96230,"byte_end":96257,"line_start":828,"line_end":828,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97300,"byte_end":97308,"line_start":854,"line_end":854,"column_start":12,"column_end":20},"name":"contains","qualname":"<FieldSet>::contains","value":"fn contains<'_, '_>(&'_ Self, &'_ Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains the given `field`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains the given `field`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96622,"byte_end":96678,"line_start":843,"line_end":843,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96683,"byte_end":96686,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96691,"byte_end":96750,"line_start":845,"line_end":845,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96755,"byte_end":96820,"line_start":846,"line_end":846,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: If <code>field</code> shares a name with a field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96825,"byte_end":96900,"line_start":847,"line_end":847,"column_start":5,"column_end":80}},{"value":"/ in this <code>FieldSet</code>, but was created by a <code>FieldSet</code>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96905,"byte_end":96982,"line_start":848,"line_end":848,"column_start":5,"column_end":82}},{"value":"/ with a different callsite, this <code>FieldSet</code> does <em>not</em>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":96987,"byte_end":97062,"line_start":849,"line_end":849,"column_start":5,"column_end":80}},{"value":"/ contain it. This is so that if two separate span callsites define a field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97067,"byte_end":97144,"line_start":850,"line_end":850,"column_start":5,"column_end":82}},{"value":"/ named \"foo\", the <code>Field</code> corresponding to \"foo\" for each","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97149,"byte_end":97220,"line_start":851,"line_end":851,"column_start":5,"column_end":76}},{"value":"/ of those callsites are not equivalent.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97225,"byte_end":97267,"line_start":852,"line_end":852,"column_start":5,"column_end":47}},{"value":"/ </pre></div>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97272,"byte_end":97288,"line_start":853,"line_end":853,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97494,"byte_end":97498,"line_start":859,"line_end":859,"column_start":12,"column_end":16},"name":"iter","qualname":"<FieldSet>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Field`s in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Field`s in this `FieldSet`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97421,"byte_end":97482,"line_start":858,"line_end":858,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97933,"byte_end":97942,"line_start":875,"line_end":875,"column_start":12,"column_end":21},"name":"value_set","qualname":"<FieldSet>::value_set","value":"fn value_set<'v, V>(&'v Self, &'v V) -> ValueSet where V: ValidLen","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ValueSet` with entries for this `FieldSet`'s values.","sig":null,"attributes":[{"value":"/ Returns a new `ValueSet` with entries for this `FieldSet`'s values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97728,"byte_end":97799,"line_start":870,"line_end":870,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97804,"byte_end":97807,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Note that a `ValueSet` may not be constructed with arrays of over 32","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97812,"byte_end":97884,"line_start":872,"line_end":872,"column_start":5,"column_end":77}},{"value":"/ elements.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":97889,"byte_end":97902,"line_start":873,"line_end":873,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98213,"byte_end":98216,"line_start":887,"line_end":887,"column_start":12,"column_end":15},"name":"len","qualname":"<FieldSet>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns the number of fields in this `FieldSet`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98135,"byte_end":98187,"line_start":885,"line_end":885,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98192,"byte_end":98201,"line_start":886,"line_end":886,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98351,"byte_end":98359,"line_start":893,"line_end":893,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FieldSet>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not this `FieldSet` has fields.\n","sig":null,"attributes":[{"value":"/ Returns whether or not this `FieldSet` has fields.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98271,"byte_end":98325,"line_start":891,"line_end":891,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98330,"byte_end":98339,"line_start":892,"line_end":892,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98527,"byte_end":98536,"line_start":902,"line_end":902,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a FieldSet as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98510,"byte_end":98519,"line_start":901,"line_end":901,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98630,"byte_end":98633,"line_start":908,"line_end":908,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FieldSet as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98880,"byte_end":98883,"line_start":917,"line_end":917,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FieldSet as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":99104,"byte_end":99106,"line_start":927,"line_end":927,"column_start":8,"column_end":10},"name":"eq","qualname":"<FieldSet as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100309,"byte_end":100313,"line_start":962,"line_end":962,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Field>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100891,"byte_end":100899,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"name":"callsite","qualname":"<ValueSet>::callsite","value":"fn callsite<'_>(&'_ Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n defining the fields this `ValueSet` refers to.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100631,"byte_end":100702,"line_start":977,"line_end":977,"column_start":5,"column_end":76}},{"value":"/ defining the fields this `ValueSet` refers to.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100707,"byte_end":100757,"line_start":978,"line_end":978,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100762,"byte_end":100765,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: super::callsite::Identifier","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100770,"byte_end":100817,"line_start":980,"line_end":980,"column_start":5,"column_end":52}},{"value":"/ [`Callsite`]: super::callsite::Callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100822,"byte_end":100865,"line_start":981,"line_end":981,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100870,"byte_end":100879,"line_start":982,"line_end":982,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101093,"byte_end":101099,"line_start":990,"line_end":990,"column_start":12,"column_end":18},"name":"record","qualname":"<ValueSet>::record","value":"fn record<'_, '_>(&'_ Self, &'_ mut dyn Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields in this `ValueSet` with the provided [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields in this `ValueSet` with the provided [visitor].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100975,"byte_end":101048,"line_start":987,"line_end":987,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101053,"byte_end":101056,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ [visitor]: Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101061,"byte_end":101081,"line_start":989,"line_end":989,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101668,"byte_end":101671,"line_start":1007,"line_end":1007,"column_start":12,"column_end":15},"name":"len","qualname":"<ValueSet>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this `ValueSet` that would be visited\n by a given [visitor] to the [`ValueSet::record()`] method.","sig":null,"attributes":[{"value":"/ Returns the number of fields in this `ValueSet` that would be visited","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101432,"byte_end":101505,"line_start":1002,"line_end":1002,"column_start":5,"column_end":78}},{"value":"/ by a given [visitor] to the [`ValueSet::record()`] method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101510,"byte_end":101572,"line_start":1003,"line_end":1003,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101577,"byte_end":101580,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ [visitor]: Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101585,"byte_end":101605,"line_start":1005,"line_end":1005,"column_start":5,"column_end":25}},{"value":"/ [`ValueSet::record()`]: ValueSet::record()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":101610,"byte_end":101656,"line_start":1006,"line_end":1006,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":102266,"byte_end":102274,"line_start":1025,"line_end":1025,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ValueSet>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `ValueSet` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this `ValueSet` contains _no_ values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":102197,"byte_end":102254,"line_start":1024,"line_end":1024,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":102585,"byte_end":102588,"line_start":1038,"line_end":1038,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ValueSet as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103012,"byte_end":103015,"line_start":1053,"line_end":1053,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ValueSet as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103835,"byte_end":103843,"line_start":1078,"line_end":1078,"column_start":15,"column_end":23},"name":"ValidLen","qualname":"::field::private::ValidLen","value":"ValidLen<'a>: Borrow<[(&'a Field, Option<&'a dyn Value + 'a>)]>","parent":null,"children":[],"decl_id":null,"docs":" Marker trait implemented by arrays which are of valid length to\n construct a `ValueSet`.","sig":null,"attributes":[{"value":"/ Marker trait implemented by arrays which are of valid length to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103396,"byte_end":103463,"line_start":1071,"line_end":1071,"column_start":5,"column_end":72}},{"value":"/ construct a `ValueSet`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103468,"byte_end":103495,"line_start":1072,"line_end":1072,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103500,"byte_end":103503,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ `ValueSet`s may only be constructed from arrays containing 32 or fewer","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103508,"byte_end":103582,"line_start":1074,"line_end":1074,"column_start":5,"column_end":79}},{"value":"/ elements, to ensure the array is small enough to always be allocated on the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103587,"byte_end":103666,"line_start":1075,"line_end":1075,"column_start":5,"column_end":84}},{"value":"/ stack. This trait is only implemented by arrays of an appropriate length,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103671,"byte_end":103748,"line_start":1076,"line_end":1076,"column_start":5,"column_end":82}},{"value":"/ ensuring that the correct size arrays are used at compile-time.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103753,"byte_end":103820,"line_start":1077,"line_end":1077,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":572},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":1290},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":721},{"krate":0,"index":723}],"decl_id":null,"docs":" Metadata describing trace data.\n","sig":null,"attributes":[{"value":"/ Metadata describing trace data.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":109870,"byte_end":109905,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":112256,"byte_end":112264,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::metadata::Metadata","value":"Metadata {  }","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"decl_id":null,"docs":" Metadata describing a [span] or [event].","sig":null,"attributes":[{"value":"/ Metadata describing a [span] or [event].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110036,"byte_end":110080,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110081,"byte_end":110084,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All spans and events have the following metadata:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110085,"byte_end":110138,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ - A [name], represented as a static string.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110139,"byte_end":110186,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ - A [target], a string that categorizes part of the system where the span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110187,"byte_end":110264,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   or event occurred. The `tracing` macros default to using the module","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110265,"byte_end":110338,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/   path where the span or event originated as the target, but it may be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110339,"byte_end":110413,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   overridden.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110414,"byte_end":110431,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ - A [verbosity level]. This determines how verbose a given span or event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110432,"byte_end":110508,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   is, and allows enabling or disabling more verbose diagnostics","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110509,"byte_end":110576,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/   situationally. See the documentation for the [`Level`] type for details.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110577,"byte_end":110655,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ - The names of the [fields] defined by the span or event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110656,"byte_end":110717,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ - Whether the metadata corresponds to a span or event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110718,"byte_end":110776,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110777,"byte_end":110780,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In addition, the following optional metadata describing the source code","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110781,"byte_end":110856,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ location where the span or event originated _may_ be provided:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110857,"byte_end":110923,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/ - The [file name]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110924,"byte_end":110945,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ - The [line number]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110946,"byte_end":110969,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ - The [module path]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110970,"byte_end":110993,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110994,"byte_end":110997,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Metadata is used by [`Subscriber`]s when filtering spans and events, and it","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":110998,"byte_end":111077,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ may also be used as part of their data payload.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111078,"byte_end":111129,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111130,"byte_end":111133,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ When created by the `event!` or `span!` macro, the metadata describing a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111134,"byte_end":111210,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ particular event or span is constructed statically and exists as a single","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111211,"byte_end":111288,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ static instance. Thus, the overhead of creating the metadata is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111289,"byte_end":111356,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ _significantly_ lower than that of creating the actual span. Therefore,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111357,"byte_end":111432,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ filtering is based on metadata, rather than on the constructed span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111433,"byte_end":111505,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111506,"byte_end":111509,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Equality","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111510,"byte_end":111525,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111526,"byte_end":111529,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ In well-behaved applications, two `Metadata` with equal","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111530,"byte_end":111589,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/ [callsite identifiers] will be equal in all other ways (i.e., have the same","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111590,"byte_end":111669,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ `name`, `target`, etc.). Consequently, in release builds, [`Metadata::eq`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111670,"byte_end":111748,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ *only* checks that its arguments have equal callsites. However, the equality","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111749,"byte_end":111829,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ of `Metadata`'s other fields is checked in debug builds.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111830,"byte_end":111890,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111891,"byte_end":111894,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [span]: super::span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111895,"byte_end":111918,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/ [event]: super::event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111919,"byte_end":111944,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/ [name]: Self::name","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111945,"byte_end":111967,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ [target]: Self::target","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111968,"byte_end":111994,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ [fields]: Self::fields","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":111995,"byte_end":112021,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/ [verbosity level]: Self::level","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":112022,"byte_end":112056,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ [file name]: Self::file","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":112057,"byte_end":112084,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/ [line number]: Self::line","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":112085,"byte_end":112114,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ [module path]: Self::module_path","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":112115,"byte_end":112151,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":112152,"byte_end":112201,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/ [callsite identifiers]: Self::callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":112202,"byte_end":112244,"line_start":56,"line_end":56,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113255,"byte_end":113259,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"Kind","qualname":"::metadata::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the callsite is a span or event.\n","sig":null,"attributes":[{"value":"/ Indicates whether the callsite is a span or event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113157,"byte_end":113211,"line_start":88,"line_end":88,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118490,"byte_end":118495,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"Level","qualname":"::metadata::Level","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the level of verbosity of a span or event.","sig":null,"attributes":[{"value":"/ Describes the level of verbosity of a span or event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113266,"byte_end":113322,"line_start":92,"line_end":92,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113323,"byte_end":113326,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Comparing Levels","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113327,"byte_end":113349,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113350,"byte_end":113353,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ `Level` implements the [`PartialOrd`] and [`Ord`] traits, allowing two","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113354,"byte_end":113428,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/ `Level`s to be compared to determine which is considered more or less","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113429,"byte_end":113502,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ verbose. Levels which are more verbose are considered \"greater than\" levels","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113503,"byte_end":113582,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ which are less verbose, with [`Level::ERROR`] considered the lowest, and","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113583,"byte_end":113659,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ [`Level::TRACE`] considered the highest.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113660,"byte_end":113704,"line_start":100,"line_end":100,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113705,"byte_end":113708,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113709,"byte_end":113725,"line_start":102,"line_end":102,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113726,"byte_end":113733,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113734,"byte_end":113762,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113763,"byte_end":113766,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ assert!(Level::TRACE > Level::DEBUG);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113767,"byte_end":113808,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ assert!(Level::ERROR < Level::WARN);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113809,"byte_end":113849,"line_start":107,"line_end":107,"column_start":1,"column_end":41}},{"value":"/ assert!(Level::INFO <= Level::DEBUG);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113850,"byte_end":113891,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Level::TRACE, Level::TRACE);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113892,"byte_end":113935,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113936,"byte_end":113943,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113944,"byte_end":113947,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Filtering","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113948,"byte_end":113963,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113964,"byte_end":113967,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ `Level`s are typically used to implement filtering that determines which","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":113968,"byte_end":114044,"line_start":114,"line_end":114,"column_start":1,"column_end":77}},{"value":"/ spans and events are enabled. Depending on the use case, more or less","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114045,"byte_end":114118,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/ verbose diagnostics may be desired. For example, when running in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114119,"byte_end":114187,"line_start":116,"line_end":116,"column_start":1,"column_end":69}},{"value":"/ development, [`DEBUG`]-level traces may be enabled by default. When running in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114188,"byte_end":114270,"line_start":117,"line_end":117,"column_start":1,"column_end":83}},{"value":"/ production, only [`INFO`]-level and lower traces might be enabled. Libraries","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114271,"byte_end":114351,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ may include very verbose diagnostics at the [`DEBUG`] and/or [`TRACE`] levels.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114352,"byte_end":114434,"line_start":119,"line_end":119,"column_start":1,"column_end":83}},{"value":"/ Applications using those libraries typically chose to ignore those traces. However, when","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114435,"byte_end":114527,"line_start":120,"line_end":120,"column_start":1,"column_end":93}},{"value":"/ debugging an issue involving said libraries, it may be useful to temporarily","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114528,"byte_end":114608,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ enable the more verbose traces.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114609,"byte_end":114644,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114645,"byte_end":114648,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The [`LevelFilter`] type is provided to enable filtering traces by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114649,"byte_end":114719,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/ verbosity. `Level`s can be compared against [`LevelFilter`]s, and","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114720,"byte_end":114789,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/ [`LevelFilter`] has a variant for each `Level`, which compares analogously","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114790,"byte_end":114868,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ to that level. In addition, [`LevelFilter`] adds a [`LevelFilter::OFF`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114869,"byte_end":114944,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ variant, which is considered \"less verbose\" than every other `Level`. This is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":114945,"byte_end":115026,"line_start":128,"line_end":128,"column_start":1,"column_end":82}},{"value":"/ intended to allow filters to completely disable tracing in a particular context.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115027,"byte_end":115111,"line_start":129,"line_end":129,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115112,"byte_end":115115,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115116,"byte_end":115132,"line_start":131,"line_end":131,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115133,"byte_end":115140,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::{Level, LevelFilter};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115141,"byte_end":115184,"line_start":133,"line_end":133,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115185,"byte_end":115188,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ assert!(LevelFilter::OFF < Level::TRACE);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115189,"byte_end":115234,"line_start":135,"line_end":135,"column_start":1,"column_end":46}},{"value":"/ assert!(LevelFilter::TRACE > Level::DEBUG);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115235,"byte_end":115282,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/ assert!(LevelFilter::ERROR < Level::WARN);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115283,"byte_end":115329,"line_start":137,"line_end":137,"column_start":1,"column_end":47}},{"value":"/ assert!(LevelFilter::INFO <= Level::DEBUG);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115330,"byte_end":115377,"line_start":138,"line_end":138,"column_start":1,"column_end":48}},{"value":"/ assert!(LevelFilter::INFO >= Level::INFO);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115378,"byte_end":115424,"line_start":139,"line_end":139,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115425,"byte_end":115432,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115433,"byte_end":115436,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115437,"byte_end":115452,"line_start":142,"line_end":142,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115453,"byte_end":115456,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Below is a simple example of how a [`Subscriber`] could implement filtering through","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115457,"byte_end":115544,"line_start":144,"line_end":144,"column_start":1,"column_end":88}},{"value":"/ a [`LevelFilter`]. When a span or event is recorded, the [`Subscriber::enabled`] method","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115545,"byte_end":115636,"line_start":145,"line_end":145,"column_start":1,"column_end":92}},{"value":"/ compares the span or event's `Level` against the configured [`LevelFilter`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115637,"byte_end":115717,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ The optional [`Subscriber::max_level_hint`] method can also be implemented to allow spans","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115718,"byte_end":115811,"line_start":147,"line_end":147,"column_start":1,"column_end":94}},{"value":"/ and events above a maximum verbosity level to be skipped more efficiently,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115812,"byte_end":115890,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ often improving performance in short-lived programs.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115891,"byte_end":115947,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115948,"byte_end":115951,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115952,"byte_end":115959,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::{span, Event, Level, LevelFilter, Subscriber, Metadata};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":115960,"byte_end":116038,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ # use tracing_core::span::{Id, Record, Current};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116039,"byte_end":116091,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116092,"byte_end":116095,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116096,"byte_end":116116,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116117,"byte_end":116146,"line_start":156,"line_end":156,"column_start":1,"column_end":30}},{"value":"/     /// The most verbose level that this subscriber will enable.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116147,"byte_end":116215,"line_start":157,"line_end":157,"column_start":1,"column_end":69}},{"value":"/     max_level: LevelFilter,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116216,"byte_end":116247,"line_start":158,"line_end":158,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116248,"byte_end":116251,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116252,"byte_end":116266,"line_start":160,"line_end":160,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116267,"byte_end":116272,"line_start":161,"line_end":161,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116273,"byte_end":116276,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ impl MySubscriber {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116277,"byte_end":116300,"line_start":163,"line_end":163,"column_start":1,"column_end":24}},{"value":"/     /// Returns a new `MySubscriber` which will record spans and events up to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116301,"byte_end":116382,"line_start":164,"line_end":164,"column_start":1,"column_end":82}},{"value":"/     /// `max_level`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116383,"byte_end":116407,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"/     pub fn with_max_level(max_level: LevelFilter) -> Self {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116408,"byte_end":116471,"line_start":166,"line_end":166,"column_start":1,"column_end":64}},{"value":"/         Self {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116472,"byte_end":116490,"line_start":167,"line_end":167,"column_start":1,"column_end":19}},{"value":"/             max_level,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116491,"byte_end":116517,"line_start":168,"line_end":168,"column_start":1,"column_end":27}},{"value":"/             // ...","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116518,"byte_end":116540,"line_start":169,"line_end":169,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116541,"byte_end":116554,"line_start":170,"line_end":170,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116555,"byte_end":116564,"line_start":171,"line_end":171,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116565,"byte_end":116570,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ impl Subscriber for MySubscriber {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116571,"byte_end":116609,"line_start":173,"line_end":173,"column_start":1,"column_end":39}},{"value":"/     fn enabled(&self, meta: &Metadata<'_>) -> bool {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116610,"byte_end":116666,"line_start":174,"line_end":174,"column_start":1,"column_end":57}},{"value":"/         // A span or event is enabled if it is at or below the configured","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116667,"byte_end":116744,"line_start":175,"line_end":175,"column_start":1,"column_end":78}},{"value":"/         // maximum level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116745,"byte_end":116774,"line_start":176,"line_end":176,"column_start":1,"column_end":30}},{"value":"/         meta.level() <= &self.max_level","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116775,"byte_end":116818,"line_start":177,"line_end":177,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116819,"byte_end":116828,"line_start":178,"line_end":178,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116829,"byte_end":116832,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     // This optional method returns the most verbose level that this","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116833,"byte_end":116905,"line_start":180,"line_end":180,"column_start":1,"column_end":73}},{"value":"/     // subscriber will enable. Although implementing this method is not","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116906,"byte_end":116981,"line_start":181,"line_end":181,"column_start":1,"column_end":76}},{"value":"/     // *required*, it permits additional optimizations when it is provided,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":116982,"byte_end":117061,"line_start":182,"line_end":182,"column_start":1,"column_end":80}},{"value":"/     // allowing spans and events above the max level to be skipped","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117062,"byte_end":117132,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"/     // more efficiently.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117133,"byte_end":117161,"line_start":184,"line_end":184,"column_start":1,"column_end":29}},{"value":"/     fn max_level_hint(&self) -> Option<LevelFilter> {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117162,"byte_end":117219,"line_start":185,"line_end":185,"column_start":1,"column_end":58}},{"value":"/         Some(self.max_level)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117220,"byte_end":117252,"line_start":186,"line_end":186,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117253,"byte_end":117262,"line_start":187,"line_end":187,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117263,"byte_end":117266,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/     // Implement the rest of the subscriber...","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117267,"byte_end":117317,"line_start":189,"line_end":189,"column_start":1,"column_end":51}},{"value":"/     fn new_span(&self, span: &span::Attributes<'_>) -> span::Id {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117318,"byte_end":117387,"line_start":190,"line_end":190,"column_start":1,"column_end":70}},{"value":"/         // ...","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117388,"byte_end":117406,"line_start":191,"line_end":191,"column_start":1,"column_end":19}},{"value":"/         # drop(span); Id::from_u64(1)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117407,"byte_end":117448,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117449,"byte_end":117458,"line_start":193,"line_end":193,"column_start":1,"column_end":10}},{"value":"/     fn event(&self, event: &Event<'_>) {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117460,"byte_end":117504,"line_start":195,"line_end":195,"column_start":1,"column_end":45}},{"value":"/         // ...","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117505,"byte_end":117523,"line_start":196,"line_end":196,"column_start":1,"column_end":19}},{"value":"/         # drop(event);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117524,"byte_end":117550,"line_start":197,"line_end":197,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117551,"byte_end":117560,"line_start":198,"line_end":198,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117561,"byte_end":117564,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117565,"byte_end":117579,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/     # fn enter(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117580,"byte_end":117616,"line_start":201,"line_end":201,"column_start":1,"column_end":37}},{"value":"/     # fn exit(&self, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117617,"byte_end":117652,"line_start":202,"line_end":202,"column_start":1,"column_end":36}},{"value":"/     # fn record(&self, _: &Id, _: &Record<'_>) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117653,"byte_end":117706,"line_start":203,"line_end":203,"column_start":1,"column_end":54}},{"value":"/     # fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117707,"byte_end":117765,"line_start":204,"line_end":204,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117766,"byte_end":117771,"line_start":205,"line_end":205,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117772,"byte_end":117779,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117780,"byte_end":117783,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ It is worth noting that the `tracing-subscriber` crate provides [additional","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117784,"byte_end":117863,"line_start":208,"line_end":208,"column_start":1,"column_end":80}},{"value":"/ APIs][envfilter] for performing more sophisticated filtering, such as","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117864,"byte_end":117937,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ enabling different levels based on which module or crate a span or event is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":117938,"byte_end":118017,"line_start":210,"line_end":210,"column_start":1,"column_end":80}},{"value":"/ recorded in.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118018,"byte_end":118034,"line_start":211,"line_end":211,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118035,"byte_end":118038,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ [`DEBUG`]: Level::DEBUG","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118039,"byte_end":118066,"line_start":213,"line_end":213,"column_start":1,"column_end":28}},{"value":"/ [`INFO`]: Level::INFO","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118067,"byte_end":118092,"line_start":214,"line_end":214,"column_start":1,"column_end":26}},{"value":"/ [`TRACE`]: Level::TRACE","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118093,"byte_end":118120,"line_start":215,"line_end":215,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber::enabled`]: crate::subscriber::Subscriber::enabled","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118121,"byte_end":118188,"line_start":216,"line_end":216,"column_start":1,"column_end":68}},{"value":"/ [`Subscriber::max_level_hint`]: crate::subscriber::Subscriber::max_level_hint","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118189,"byte_end":118270,"line_start":217,"line_end":217,"column_start":1,"column_end":82}},{"value":"/ [`Subscriber`]: crate::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118271,"byte_end":118320,"line_start":218,"line_end":218,"column_start":1,"column_end":50}},{"value":"/ [envfilter]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/filter/struct.EnvFilter.html","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118321,"byte_end":118427,"line_start":219,"line_end":219,"column_start":1,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119174,"byte_end":119185,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"LevelFilter","qualname":"::metadata::LevelFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter comparable to a verbosity [`Level`].","sig":null,"attributes":[{"value":"/ A filter comparable to a verbosity [`Level`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118510,"byte_end":118559,"line_start":223,"line_end":223,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118560,"byte_end":118563,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ If a [`Level`] is considered less than a `LevelFilter`, it should be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118564,"byte_end":118636,"line_start":225,"line_end":225,"column_start":1,"column_end":73}},{"value":"/ considered enabled; if greater than or equal to the `LevelFilter`,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118637,"byte_end":118707,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"/ that level is disabled. See [`LevelFilter::current`] for more","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118708,"byte_end":118773,"line_start":227,"line_end":227,"column_start":1,"column_end":66}},{"value":"/ details.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118774,"byte_end":118786,"line_start":228,"line_end":228,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118787,"byte_end":118790,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Note that this is essentially identical to the `Level` type, but with the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118791,"byte_end":118868,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/ addition of an [`OFF`] level that completely disables all trace","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118869,"byte_end":118936,"line_start":231,"line_end":231,"column_start":1,"column_end":68}},{"value":"/ instrumentation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118937,"byte_end":118957,"line_start":232,"line_end":232,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118958,"byte_end":118961,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ See the documentation for the [`Level`] type to see how `Level`s","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":118962,"byte_end":119030,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ and `LevelFilter`s interact.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119031,"byte_end":119063,"line_start":235,"line_end":235,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119064,"byte_end":119067,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`OFF`]: LevelFilter::OFF","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119068,"byte_end":119097,"line_start":237,"line_end":237,"column_start":1,"column_end":30}},{"value":"repr(transparent)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119098,"byte_end":119118,"line_start":238,"line_end":238,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119304,"byte_end":119325,"line_start":244,"line_end":244,"column_start":12,"column_end":33},"name":"ParseLevelFilterError","qualname":"::metadata::ParseLevelFilterError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that a string could not be parsed to a valid level.\n","sig":null,"attributes":[{"value":"/ Indicates that a string could not be parsed to a valid level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119203,"byte_end":119268,"line_start":242,"line_end":242,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119614,"byte_end":119617,"line_start":253,"line_end":253,"column_start":18,"column_end":21},"name":"new","qualname":"<Metadata>::new","value":"const fn new(&'static str, &'a str, Level, Option<&'a str>, Option<u32>,\nOption<&'a str>, field::FieldSet, Kind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct new metadata for a span or event, with a name, target, level, field\n names, and optional source code location.\n","sig":null,"attributes":[{"value":"/ Construct new metadata for a span or event, with a name, target, level, field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119465,"byte_end":119546,"line_start":251,"line_end":251,"column_start":5,"column_end":86}},{"value":"/ names, and optional source code location.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119551,"byte_end":119596,"line_start":252,"line_end":252,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120134,"byte_end":120140,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"fields","qualname":"<Metadata>::fields","value":"fn fields<'_>(&'_ Self) -> &'_ field::FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the names of the fields on the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the names of the fields on the described span or event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120055,"byte_end":120122,"line_start":275,"line_end":275,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120280,"byte_end":120285,"line_start":281,"line_end":281,"column_start":12,"column_end":17},"name":"level","qualname":"<Metadata>::level","value":"fn level<'_>(&'_ Self) -> &'_ Level","parent":null,"children":[],"decl_id":null,"docs":" Returns the level of verbosity of the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the level of verbosity of the described span or event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120202,"byte_end":120268,"line_start":280,"line_end":280,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120381,"byte_end":120385,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"name":"name","qualname":"<Metadata>::name","value":"fn name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the span.\n","sig":null,"attributes":[{"value":"/ Returns the name of the span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120336,"byte_end":120369,"line_start":285,"line_end":285,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120708,"byte_end":120714,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"target","qualname":"<Metadata>::target","value":"fn target<'_>(&'_ Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string describing the part of the system where the span or\n event that this metadata describes occurred.","sig":null,"attributes":[{"value":"/ Returns a string describing the part of the system where the span or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120440,"byte_end":120512,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ event that this metadata describes occurred.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120517,"byte_end":120565,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120570,"byte_end":120573,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Typically, this is the module path, but alternate targets may be set","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120578,"byte_end":120650,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ when spans or events are constructed.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120655,"byte_end":120696,"line_start":294,"line_end":294,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120891,"byte_end":120902,"line_start":301,"line_end":301,"column_start":12,"column_end":23},"name":"module_path","qualname":"<Metadata>::module_path","value":"fn module_path<'_>(&'_ Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Rust module where the span occurred, or\n `None` if the module path is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Rust module where the span occurred, or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120766,"byte_end":120833,"line_start":299,"line_end":299,"column_start":5,"column_end":72}},{"value":"/ `None` if the module path is unknown.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120838,"byte_end":120879,"line_start":300,"line_end":300,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121089,"byte_end":121093,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"file","qualname":"<Metadata>::file","value":"fn file<'_>(&'_ Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the source code file where the span\n occurred, or `None` if the file is unknown\n","sig":null,"attributes":[{"value":"/ Returns the name of the source code file where the span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":120967,"byte_end":121026,"line_start":305,"line_end":305,"column_start":5,"column_end":64}},{"value":"/ occurred, or `None` if the file is unknown","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121031,"byte_end":121077,"line_start":306,"line_end":306,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121288,"byte_end":121292,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"line","qualname":"<Metadata>::line","value":"fn line<'_>(&'_ Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line number in the source code file where the span\n occurred, or `None` if the line number is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the line number in the source code file where the span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121151,"byte_end":121217,"line_start":311,"line_end":311,"column_start":5,"column_end":71}},{"value":"/ occurred, or `None` if the line number is unknown.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121222,"byte_end":121276,"line_start":312,"line_end":312,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121485,"byte_end":121493,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Metadata>::callsite","value":"fn callsite<'_>(&'_ Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque `Identifier` that uniquely identifies the callsite\n this `Metadata` originated from.\n","sig":null,"attributes":[{"value":"/ Returns an opaque `Identifier` that uniquely identifies the callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121346,"byte_end":121418,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ this `Metadata` originated from.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121423,"byte_end":121459,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121464,"byte_end":121473,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121630,"byte_end":121638,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Metadata>::is_event","value":"fn is_event<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the callsite kind is `Event`.\n","sig":null,"attributes":[{"value":"/ Returns true if the callsite kind is `Event`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121569,"byte_end":121618,"line_start":324,"line_end":324,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121755,"byte_end":121762,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Metadata>::is_span","value":"fn is_span<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`.\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121696,"byte_end":121743,"line_start":329,"line_end":329,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121863,"byte_end":121866,"line_start":336,"line_end":336,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Metadata as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":628},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123061,"byte_end":123066,"line_start":374,"line_end":374,"column_start":15,"column_end":20},"name":"EVENT","qualname":"::metadata::Kind::EVENT","value":"Kind","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" `Event` callsite\n","sig":null,"attributes":[{"value":"/ `Event` callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123026,"byte_end":123046,"line_start":373,"line_end":373,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":629},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123137,"byte_end":123141,"line_start":377,"line_end":377,"column_start":15,"column_end":19},"name":"SPAN","qualname":"::metadata::Kind::SPAN","value":"Kind","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" `Span` callsite\n","sig":null,"attributes":[{"value":"/ `Span` callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123103,"byte_end":123122,"line_start":376,"line_end":376,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":630},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123371,"byte_end":123375,"line_start":382,"line_end":382,"column_start":15,"column_end":19},"name":"HINT","qualname":"::metadata::Kind::HINT","value":"Kind","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" `enabled!` callsite. [`Subscriber`][`crate::subscriber::Subscriber`]s can assume\n this `Kind` means they will never recieve a\n full event with this [`Metadata`].\n","sig":null,"attributes":[{"value":"/ `enabled!` callsite. [`Subscriber`][`crate::subscriber::Subscriber`]s can assume","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123177,"byte_end":123261,"line_start":379,"line_end":379,"column_start":5,"column_end":89}},{"value":"/ this `Kind` means they will never recieve a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123266,"byte_end":123313,"line_start":380,"line_end":380,"column_start":5,"column_end":52}},{"value":"/ full event with this [`Metadata`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123318,"byte_end":123356,"line_start":381,"line_end":381,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123469,"byte_end":123476,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Kind>::is_span","value":"fn is_span<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123411,"byte_end":123457,"line_start":384,"line_end":384,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123614,"byte_end":123622,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Kind>::is_event","value":"fn is_event<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Event`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Event`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123555,"byte_end":123602,"line_start":389,"line_end":389,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123761,"byte_end":123768,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"is_hint","qualname":"<Kind>::is_hint","value":"fn is_hint<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Hint`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Hint`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123703,"byte_end":123749,"line_start":394,"line_end":394,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":124081,"byte_end":124085,"line_start":403,"line_end":403,"column_start":18,"column_end":22},"name":"hint","qualname":"<Kind>::hint","value":"const fn hint(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets that this `Kind` is a [hint](Self::HINT).","sig":null,"attributes":[{"value":"/ Sets that this `Kind` is a [hint](Self::HINT).","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123847,"byte_end":123897,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123902,"byte_end":123905,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ This can be called on [`SPAN`](Self::SPAN) and [`EVENT`](Self::EVENT)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123910,"byte_end":123983,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ kinds to construct a hint callsite that also counts as a span or event.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":123988,"byte_end":124063,"line_start":402,"line_end":402,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":124183,"byte_end":124186,"line_start":409,"line_end":409,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Kind as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":125063,"byte_end":125065,"line_start":447,"line_end":447,"column_start":8,"column_end":10},"name":"eq","qualname":"<Metadata as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":125046,"byte_end":125055,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":644},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127122,"byte_end":127127,"line_start":505,"line_end":505,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::Level::ERROR","value":"Level","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127037,"byte_end":127059,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127064,"byte_end":127067,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127072,"byte_end":127107,"line_start":504,"line_end":504,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":645},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127252,"byte_end":127256,"line_start":509,"line_end":509,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::Level::WARN","value":"Level","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127167,"byte_end":127188,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127193,"byte_end":127196,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127201,"byte_end":127237,"line_start":508,"line_end":508,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":646},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127378,"byte_end":127382,"line_start":513,"line_end":513,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::Level::INFO","value":"Level","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127295,"byte_end":127316,"line_start":510,"line_end":510,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127321,"byte_end":127324,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127329,"byte_end":127363,"line_start":512,"line_end":512,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":647},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127513,"byte_end":127518,"line_start":517,"line_end":517,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::Level::DEBUG","value":"Level","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127421,"byte_end":127443,"line_start":514,"line_end":514,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127448,"byte_end":127451,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127456,"byte_end":127498,"line_start":516,"line_end":516,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":648},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127679,"byte_end":127684,"line_start":521,"line_end":521,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::Level::TRACE","value":"Level","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127558,"byte_end":127580,"line_start":518,"line_end":518,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127585,"byte_end":127588,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127593,"byte_end":127664,"line_start":520,"line_end":520,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127873,"byte_end":127879,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Level>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the string representation of the `Level`.","sig":null,"attributes":[{"value":"/ Returns the string representation of the `Level`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127725,"byte_end":127778,"line_start":523,"line_end":523,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127783,"byte_end":127786,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This returns the same string as the `fmt::Display` implementation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127791,"byte_end":127861,"line_start":525,"line_end":525,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128164,"byte_end":128167,"line_start":538,"line_end":538,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Level as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128669,"byte_end":128677,"line_start":555,"line_end":555,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Level as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, ParseLevelError>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130244,"byte_end":130248,"line_start":606,"line_end":606,"column_start":8,"column_end":12},"name":"from","qualname":"<LevelFilter as std::convert::From>::from","value":"fn from(Level) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130227,"byte_end":130236,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130378,"byte_end":130382,"line_start":613,"line_end":613,"column_start":8,"column_end":12},"name":"from","qualname":"<LevelFilter as std::convert::From>::from","value":"fn from(Option<Level>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130361,"byte_end":130370,"line_start":612,"line_end":612,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130508,"byte_end":130512,"line_start":620,"line_end":620,"column_start":8,"column_end":12},"name":"from","qualname":"<Option<Level> as std::convert::From>::from","value":"fn from(LevelFilter) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130491,"byte_end":130500,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":666},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130724,"byte_end":130727,"line_start":629,"line_end":629,"column_start":15,"column_end":18},"name":"OFF","qualname":"::metadata::LevelFilter::OFF","value":"LevelFilter","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The \"off\" level.","sig":null,"attributes":[{"value":"/ The \"off\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130604,"byte_end":130624,"line_start":626,"line_end":626,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130629,"byte_end":130632,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Designates that trace instrumentation should be completely disabled.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130637,"byte_end":130709,"line_start":628,"line_end":628,"column_start":5,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":667},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130851,"byte_end":130856,"line_start":633,"line_end":633,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::LevelFilter::ERROR","value":"LevelFilter","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130766,"byte_end":130788,"line_start":630,"line_end":630,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130793,"byte_end":130796,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130801,"byte_end":130836,"line_start":632,"line_end":632,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":668},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131000,"byte_end":131004,"line_start":637,"line_end":637,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::LevelFilter::WARN","value":"LevelFilter","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130915,"byte_end":130936,"line_start":634,"line_end":634,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130941,"byte_end":130944,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130949,"byte_end":130985,"line_start":636,"line_end":636,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":669},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131145,"byte_end":131149,"line_start":641,"line_end":641,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::LevelFilter::INFO","value":"LevelFilter","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131062,"byte_end":131083,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131088,"byte_end":131091,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131096,"byte_end":131130,"line_start":640,"line_end":640,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":670},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131299,"byte_end":131304,"line_start":645,"line_end":645,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::LevelFilter::DEBUG","value":"LevelFilter","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131207,"byte_end":131229,"line_start":642,"line_end":642,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131234,"byte_end":131237,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131242,"byte_end":131284,"line_start":644,"line_end":644,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":671},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131484,"byte_end":131489,"line_start":649,"line_end":649,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::LevelFilter::TRACE","value":"LevelFilter","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131363,"byte_end":131385,"line_start":646,"line_end":646,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131390,"byte_end":131393,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131398,"byte_end":131469,"line_start":648,"line_end":648,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131670,"byte_end":131680,"line_start":653,"line_end":653,"column_start":18,"column_end":28},"name":"from_level","qualname":"<LevelFilter>::from_level","value":"const fn from_level(Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that enables spans and events with verbosity up\n to and including `level`.\n","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that enables spans and events with verbosity up","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131543,"byte_end":131618,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ to and including `level`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131623,"byte_end":131652,"line_start":652,"line_end":652,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131902,"byte_end":131912,"line_start":661,"line_end":661,"column_start":18,"column_end":28},"name":"into_level","qualname":"<LevelFilter>::into_level","value":"const fn into_level(Self) -> Option<Level>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most verbose [`Level`] that this filter accepts, or `None`\n if it is [`OFF`].","sig":null,"attributes":[{"value":"/ Returns the most verbose [`Level`] that this filter accepts, or `None`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131742,"byte_end":131816,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ if it is [`OFF`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131821,"byte_end":131842,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131847,"byte_end":131850,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ [`OFF`]: LevelFilter::OFF","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":131855,"byte_end":131884,"line_start":660,"line_end":660,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133624,"byte_end":133631,"line_start":696,"line_end":696,"column_start":12,"column_end":19},"name":"current","qualname":"<LevelFilter>::current","value":"fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that matches the most verbose [`Level`] that any\n currently active [`Subscriber`] will enable.","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that matches the most verbose [`Level`] that any","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":132763,"byte_end":132839,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ currently active [`Subscriber`] will enable.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":132844,"byte_end":132892,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":132897,"byte_end":132900,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ User code should treat this as a *hint*. If a given span or event has a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":132905,"byte_end":132980,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ level *higher* than the returned `LevelFilter`, it will not be enabled.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":132985,"byte_end":133060,"line_start":683,"line_end":683,"column_start":5,"column_end":80}},{"value":"/ However, if the level is less than or equal to this value, the span or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133065,"byte_end":133139,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ event is *not* guaranteed to be enabled; the subscriber will still","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133144,"byte_end":133214,"line_start":685,"line_end":685,"column_start":5,"column_end":75}},{"value":"/ filter each callsite individually.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133219,"byte_end":133257,"line_start":686,"line_end":686,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133262,"byte_end":133265,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Therefore, comparing a given span or event's level to the returned","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133270,"byte_end":133340,"line_start":688,"line_end":688,"column_start":5,"column_end":75}},{"value":"/ `LevelFilter` **can** be used for determining if something is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133345,"byte_end":133410,"line_start":689,"line_end":689,"column_start":5,"column_end":70}},{"value":"/ *disabled*, but **should not** be used for determining if something is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133415,"byte_end":133489,"line_start":690,"line_end":690,"column_start":5,"column_end":79}},{"value":"/ *enabled*.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133494,"byte_end":133508,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133513,"byte_end":133516,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: super::Level","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133521,"byte_end":133548,"line_start":693,"line_end":693,"column_start":5,"column_end":32}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133553,"byte_end":133590,"line_start":694,"line_end":694,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":133595,"byte_end":133612,"line_start":695,"line_end":695,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":136169,"byte_end":136172,"line_start":750,"line_end":750,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LevelFilter as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":136599,"byte_end":136602,"line_start":763,"line_end":763,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LevelFilter as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":137142,"byte_end":137150,"line_start":777,"line_end":777,"column_start":8,"column_end":16},"name":"from_str","qualname":"<LevelFilter as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138335,"byte_end":138350,"line_start":805,"line_end":805,"column_start":12,"column_end":27},"name":"ParseLevelError","qualname":"::metadata::ParseLevelError","value":"ParseLevelError {  }","parent":null,"children":[{"krate":0,"index":1321}],"decl_id":null,"docs":" Returned if parsing a `Level` fails.\n","sig":null,"attributes":[{"value":"/ Returned if parsing a `Level` fails.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138266,"byte_end":138306,"line_start":803,"line_end":803,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138415,"byte_end":138418,"line_start":810,"line_end":810,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseLevelError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138694,"byte_end":138697,"line_start":819,"line_end":819,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseLevelFilterError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143381,"byte_end":143383,"line_start":905,"line_end":905,"column_start":8,"column_end":10},"name":"eq","qualname":"<Level as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143356,"byte_end":143373,"line_start":904,"line_end":904,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143541,"byte_end":143552,"line_start":912,"line_end":912,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Level as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Level) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143516,"byte_end":143533,"line_start":911,"line_end":911,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143668,"byte_end":143670,"line_start":917,"line_end":917,"column_start":8,"column_end":10},"name":"lt","qualname":"<Level as std::cmp::PartialOrd>::lt","value":"fn lt<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2964},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143643,"byte_end":143660,"line_start":916,"line_end":916,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143786,"byte_end":143788,"line_start":922,"line_end":922,"column_start":8,"column_end":10},"name":"le","qualname":"<Level as std::cmp::PartialOrd>::le","value":"fn le<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2965},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143761,"byte_end":143778,"line_start":921,"line_end":921,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143905,"byte_end":143907,"line_start":927,"line_end":927,"column_start":8,"column_end":10},"name":"gt","qualname":"<Level as std::cmp::PartialOrd>::gt","value":"fn gt<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2966},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143880,"byte_end":143897,"line_start":926,"line_end":926,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144023,"byte_end":144025,"line_start":932,"line_end":932,"column_start":8,"column_end":10},"name":"ge","qualname":"<Level as std::cmp::PartialOrd>::ge","value":"fn ge<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2967},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143998,"byte_end":144015,"line_start":931,"line_end":931,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144165,"byte_end":144168,"line_start":939,"line_end":939,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Level as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> cmp::Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144140,"byte_end":144157,"line_start":938,"line_end":938,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144339,"byte_end":144350,"line_start":946,"line_end":946,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Level as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ LevelFilter) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144314,"byte_end":144331,"line_start":945,"line_end":945,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144506,"byte_end":144508,"line_start":951,"line_end":951,"column_start":8,"column_end":10},"name":"lt","qualname":"<Level as std::cmp::PartialOrd>::lt","value":"fn lt<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2964},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144481,"byte_end":144498,"line_start":950,"line_end":950,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144637,"byte_end":144639,"line_start":956,"line_end":956,"column_start":8,"column_end":10},"name":"le","qualname":"<Level as std::cmp::PartialOrd>::le","value":"fn le<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2965},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144612,"byte_end":144629,"line_start":955,"line_end":955,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144769,"byte_end":144771,"line_start":961,"line_end":961,"column_start":8,"column_end":10},"name":"gt","qualname":"<Level as std::cmp::PartialOrd>::gt","value":"fn gt<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2966},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144744,"byte_end":144761,"line_start":960,"line_end":960,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144900,"byte_end":144902,"line_start":966,"line_end":966,"column_start":8,"column_end":10},"name":"ge","qualname":"<Level as std::cmp::PartialOrd>::ge","value":"fn ge<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2967},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144875,"byte_end":144892,"line_start":965,"line_end":965,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145243,"byte_end":145245,"line_start":981,"line_end":981,"column_start":8,"column_end":10},"name":"eq","qualname":"<LevelFilter as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145218,"byte_end":145235,"line_start":980,"line_end":980,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145403,"byte_end":145414,"line_start":988,"line_end":988,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<LevelFilter as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ LevelFilter) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145378,"byte_end":145395,"line_start":987,"line_end":987,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145536,"byte_end":145538,"line_start":993,"line_end":993,"column_start":8,"column_end":10},"name":"lt","qualname":"<LevelFilter as std::cmp::PartialOrd>::lt","value":"fn lt<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2964},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145511,"byte_end":145528,"line_start":992,"line_end":992,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145674,"byte_end":145676,"line_start":998,"line_end":998,"column_start":8,"column_end":10},"name":"le","qualname":"<LevelFilter as std::cmp::PartialOrd>::le","value":"fn le<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2965},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145649,"byte_end":145666,"line_start":997,"line_end":997,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145813,"byte_end":145815,"line_start":1003,"line_end":1003,"column_start":8,"column_end":10},"name":"gt","qualname":"<LevelFilter as std::cmp::PartialOrd>::gt","value":"fn gt<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2966},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145788,"byte_end":145805,"line_start":1002,"line_end":1002,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145951,"byte_end":145953,"line_start":1008,"line_end":1008,"column_start":8,"column_end":10},"name":"ge","qualname":"<LevelFilter as std::cmp::PartialOrd>::ge","value":"fn ge<'_, '_>(&'_ Self, &'_ LevelFilter) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2967},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145926,"byte_end":145943,"line_start":1007,"line_end":1007,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146119,"byte_end":146122,"line_start":1015,"line_end":1015,"column_start":8,"column_end":11},"name":"cmp","qualname":"<LevelFilter as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> cmp::Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146094,"byte_end":146111,"line_start":1014,"line_end":1014,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146307,"byte_end":146318,"line_start":1022,"line_end":1022,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<LevelFilter as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Level) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146282,"byte_end":146299,"line_start":1021,"line_end":1021,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146468,"byte_end":146470,"line_start":1027,"line_end":1027,"column_start":8,"column_end":10},"name":"lt","qualname":"<LevelFilter as std::cmp::PartialOrd>::lt","value":"fn lt<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2964},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146443,"byte_end":146460,"line_start":1026,"line_end":1026,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146593,"byte_end":146595,"line_start":1032,"line_end":1032,"column_start":8,"column_end":10},"name":"le","qualname":"<LevelFilter as std::cmp::PartialOrd>::le","value":"fn le<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2965},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146568,"byte_end":146585,"line_start":1031,"line_end":1031,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146719,"byte_end":146721,"line_start":1037,"line_end":1037,"column_start":8,"column_end":10},"name":"gt","qualname":"<LevelFilter as std::cmp::PartialOrd>::gt","value":"fn gt<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2966},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146694,"byte_end":146711,"line_start":1036,"line_end":1036,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146844,"byte_end":146846,"line_start":1042,"line_end":1042,"column_start":8,"column_end":10},"name":"ge","qualname":"<LevelFilter as std::cmp::PartialOrd>::ge","value":"fn ge<'_, '_>(&'_ Self, &'_ Level) -> bool","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2967},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146819,"byte_end":146836,"line_start":1041,"line_end":1041,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":733},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1356},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1377},{"krate":0,"index":750},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":772},{"krate":0,"index":779},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":795}],"decl_id":null,"docs":" Spans represent periods of time in the execution of a program.\n","sig":null,"attributes":[{"value":"/ Spans represent periods of time in the execution of a program.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":149641,"byte_end":149707,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150258,"byte_end":150260,"line_start":16,"line_end":16,"column_start":12,"column_end":14},"name":"Id","qualname":"::span::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifies a span within the context of a subscriber.","sig":null,"attributes":[{"value":"/ Identifies a span within the context of a subscriber.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":149830,"byte_end":149887,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":149888,"byte_end":149891,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ They are generated by [`Subscriber`]s for each span as it is created, by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":149892,"byte_end":149968,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ the [`new_span`] trait method. See the documentation for that method for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":149969,"byte_end":150045,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ more information on span ID generation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150046,"byte_end":150089,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150090,"byte_end":150093,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150094,"byte_end":150143,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ [`new_span`]: super::subscriber::Subscriber::new_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150144,"byte_end":150201,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150391,"byte_end":150401,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::span::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355}],"decl_id":null,"docs":" Attributes provided to a `Subscriber` describing a new span when it is\n created.\n","sig":null,"attributes":[{"value":"/ Attributes provided to a `Subscriber` describing a new span when it is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150275,"byte_end":150349,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ created.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150350,"byte_end":150362,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150578,"byte_end":150584,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Record","qualname":"::span::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":" A set of fields recorded by a span.\n","sig":null,"attributes":[{"value":"/ A set of fields recorded by a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150510,"byte_end":150549,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151176,"byte_end":151183,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"Current","qualname":"::span::Current","value":"Current {  }","parent":null,"children":[{"krate":0,"index":1366}],"decl_id":null,"docs":" Indicates what [the `Subscriber` considers] the \"current\" span.","sig":null,"attributes":[{"value":"/ Indicates what [the `Subscriber` considers] the \"current\" span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150631,"byte_end":150698,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150699,"byte_end":150702,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ As subscribers may not track a notion of a current span, this has three","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150703,"byte_end":150778,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ possible states:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150779,"byte_end":150799,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/ - \"unknown\", indicating that the subscriber does not track a current span,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150800,"byte_end":150878,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ - \"none\", indicating that the current context is known to not be in a span,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150879,"byte_end":150958,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ - \"some\", with the current span's [`Id`] and [`Metadata`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":150959,"byte_end":151021,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151022,"byte_end":151025,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [the `Subscriber` considers]: super::subscriber::Subscriber::current_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151026,"byte_end":151103,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [`Metadata`]: super::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151104,"byte_end":151147,"line_start":42,"line_end":42,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151689,"byte_end":151697,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Id>::from_u64","value":"fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `u64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `u64`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151400,"byte_end":151450,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151455,"byte_end":151458,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151463,"byte_end":151528,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: Span IDs must be greater than zero.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151533,"byte_end":151599,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/ </pre>","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151604,"byte_end":151614,"line_start":65,"line_end":65,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151619,"byte_end":151622,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151627,"byte_end":151639,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ - If the provided `u64` is 0.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151644,"byte_end":151677,"line_start":68,"line_end":68,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151958,"byte_end":151975,"line_start":77,"line_end":77,"column_start":18,"column_end":35},"name":"from_non_zero_u64","qualname":"<Id>::from_non_zero_u64","value":"const fn from_non_zero_u64(NonZeroU64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `NonZeroU64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `NonZeroU64`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151789,"byte_end":151846,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151851,"byte_end":151854,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Id::from_u64`](Id::from_u64()), this will never panic.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151859,"byte_end":151926,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151931,"byte_end":151940,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152188,"byte_end":152196,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"into_u64","qualname":"<Id>::into_u64","value":"fn into_u64<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `u64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152095,"byte_end":152134,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `u64`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152139,"byte_end":152176,"line_start":83,"line_end":83,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152432,"byte_end":152449,"line_start":92,"line_end":92,"column_start":18,"column_end":35},"name":"into_non_zero_u64","qualname":"<Id>::into_non_zero_u64","value":"const fn into_non_zero_u64<'_>(&'_ Self) -> NonZeroU64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `NonZeroU64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152312,"byte_end":152351,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `NonZeroU64`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152356,"byte_end":152400,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152405,"byte_end":152414,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152543,"byte_end":152547,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"from","qualname":"<Option<Id> as std::convert::From>::from","value":"fn from(&'a Id) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152798,"byte_end":152801,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the current span,\n with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the current span,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152666,"byte_end":152739,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ with the provided metadata and values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152744,"byte_end":152786,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153144,"byte_end":153152,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Attributes>::new_root","value":"fn new_root(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new span at the root of its own trace\n tree, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new span at the root of its own trace","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153004,"byte_end":153079,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ tree, with the provided metadata and values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153084,"byte_end":153132,"line_start":117,"line_end":117,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153493,"byte_end":153501,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Attributes>::child_of","value":"fn child_of(Id, &'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the specified\n parent span, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the specified","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153352,"byte_end":153421,"line_start":126,"line_end":126,"column_start":5,"column_end":74}},{"value":"/ parent span, with the provided metadata and values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153426,"byte_end":153481,"line_start":127,"line_end":127,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153819,"byte_end":153827,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Attributes>::metadata","value":"fn metadata<'_>(&'_ Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the new span's metadata.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the new span's metadata.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153756,"byte_end":153807,"line_start":140,"line_end":140,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154012,"byte_end":154018,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"values","qualname":"<Attributes>::values","value":"fn values<'_>(&'_ Self) -> &'_ field::ValueSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `ValueSet` containing any values the new span\n was created with.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `ValueSet` containing any values the new span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153900,"byte_end":153974,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ was created with.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":153979,"byte_end":154000,"line_start":146,"line_end":146,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154145,"byte_end":154152,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Attributes>::is_root","value":"fn is_root<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new span should be a root.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154083,"byte_end":154133,"line_start":151,"line_end":151,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154607,"byte_end":154620,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Attributes>::is_contextual","value":"fn is_contextual<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new span's parent should be determined based on the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154225,"byte_end":154300,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ current context.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154305,"byte_end":154325,"line_start":157,"line_end":157,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154330,"byte_end":154333,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154338,"byte_end":154413,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ that span should be the new span's parent. Otherwise, if the current","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154418,"byte_end":154490,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ thread is _not_ inside a span, then the new span will be the root of its","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154495,"byte_end":154571,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ own trace tree.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154576,"byte_end":154595,"line_start":162,"line_end":162,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154893,"byte_end":154899,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"parent","qualname":"<Attributes>::parent","value":"fn parent<'_>(&'_ Self) -> Option<&'_ Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new span's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new span's explicitly-specified parent, if there is one.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154696,"byte_end":154768,"line_start":167,"line_end":167,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154773,"byte_end":154776,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new span is a root or is a child of the current span),","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154781,"byte_end":154857,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/ returns `None`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":154862,"byte_end":154881,"line_start":170,"line_end":170,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155194,"byte_end":155200,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"record","qualname":"<Attributes>::record","value":"fn record<'_, '_>(&'_ Self, &'_ mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this set of `Attributes` with the provided\n [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this set of `Attributes` with the provided","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155044,"byte_end":155116,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ [Visitor].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155121,"byte_end":155135,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155140,"byte_end":155143,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [visitor]: super::field::Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155148,"byte_end":155182,"line_start":181,"line_end":181,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155395,"byte_end":155403,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"contains","qualname":"<Attributes>::contains","value":"fn contains<'_, '_>(&'_ Self, &'_ field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this set of `Attributes` contains a value for the\n given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this set of `Attributes` contains a value for the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155289,"byte_end":155360,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ given `Field`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155365,"byte_end":155383,"line_start":187,"line_end":187,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155568,"byte_end":155576,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Attributes>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set of `Attributes` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this set of `Attributes` contains _no_ values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155490,"byte_end":155556,"line_start":192,"line_end":192,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156209,"byte_end":156215,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"fields","qualname":"<Attributes>::fields","value":"fn fields<'_>(&'_ Self) -> &'_ FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of all [fields] defined by this span's [`Metadata`].","sig":null,"attributes":[{"value":"/ Returns the set of all [fields] defined by this span's [`Metadata`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155636,"byte_end":155708,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155713,"byte_end":155716,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Note that the [`FieldSet`] returned by this method includes *all* the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155721,"byte_end":155794,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ fields declared by this span, not just those with values that are recorded","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155799,"byte_end":155877,"line_start":200,"line_end":200,"column_start":5,"column_end":83}},{"value":"/ as part of this set of `Attributes`. Other fields with values not present in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155882,"byte_end":155962,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/ this `Attributes`' value set may [record] values later.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":155967,"byte_end":156026,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156031,"byte_end":156034,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [fields]: crate::field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156039,"byte_end":156065,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/ [record]: Attributes::record()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156070,"byte_end":156104,"line_start":205,"line_end":205,"column_start":5,"column_end":39}},{"value":"/ [`Metadata`]: crate::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156109,"byte_end":156152,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"/ [`FieldSet`]: crate::field::FieldSet","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156157,"byte_end":156197,"line_start":207,"line_end":207,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156393,"byte_end":156396,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"fn new(&'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Record` from a `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Record` from a `ValueSet`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156333,"byte_end":156381,"line_start":216,"line_end":216,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156606,"byte_end":156612,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"record","qualname":"<Record>::record","value":"fn record<'_, '_>(&'_ Self, &'_ mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this `Record` with the provided [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this `Record` with the provided [Visitor].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156475,"byte_end":156547,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156552,"byte_end":156555,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [visitor]: super::field::Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156560,"byte_end":156594,"line_start":223,"line_end":223,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156885,"byte_end":156888,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"len","qualname":"<Record>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields that would be visited from this `Record`\n when [`Record::record()`] is called","sig":null,"attributes":[{"value":"/ Returns the number of fields that would be visited from this `Record`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156701,"byte_end":156774,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ when [`Record::record()`] is called","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156779,"byte_end":156818,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156823,"byte_end":156826,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`Record::record()`]: Record::record()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156831,"byte_end":156873,"line_start":231,"line_end":231,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157031,"byte_end":157039,"line_start":237,"line_end":237,"column_start":12,"column_end":20},"name":"contains","qualname":"<Record>::contains","value":"fn contains<'_, '_>(&'_ Self, &'_ field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Record` contains a value for the given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Record` contains a value for the given `Field`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156944,"byte_end":157019,"line_start":236,"line_end":236,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157193,"byte_end":157201,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Record>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Record` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Record` contains _no_ values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157126,"byte_end":157181,"line_start":241,"line_end":241,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157444,"byte_end":157447,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<Current>::new","value":"fn new(Id, &'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is a span\n with the given `metadata` and `metadata`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is a span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157307,"byte_end":157382,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ with the given `metadata` and `metadata`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157387,"byte_end":157432,"line_start":251,"line_end":251,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157704,"byte_end":157708,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"none","qualname":"<Current>::none","value":"fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is *not*\n in a span.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is *not*","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157599,"byte_end":157673,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ in a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157678,"byte_end":157692,"line_start":259,"line_end":259,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158617,"byte_end":158625,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"is_known","qualname":"<Current>::is_known","value":"fn is_known<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Subscriber` that constructed this `Current` tracks a\n current span.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Subscriber` that constructed this `Current` tracks a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158014,"byte_end":158093,"line_start":274,"line_end":274,"column_start":5,"column_end":84}},{"value":"/ current span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158098,"byte_end":158115,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158120,"byte_end":158123,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If this returns `true` and [`id`], [`metadata`], or [`into_inner`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158128,"byte_end":158198,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ return `None`, that indicates that we are currently known to *not* be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158203,"byte_end":158276,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ inside a span. If this returns `false`, those methods will also return","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158281,"byte_end":158355,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ `None`, but in this case, that is because the subscriber does not keep","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158360,"byte_end":158434,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ track of the currently-entered span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158439,"byte_end":158479,"line_start":281,"line_end":281,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158484,"byte_end":158487,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ [`id`]: Current::id()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158492,"byte_end":158517,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/ [`metadata`]: Current::metadata()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158522,"byte_end":158559,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/ [`into_inner`]: Current::into_inner()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158564,"byte_end":158605,"line_start":285,"line_end":285,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158836,"byte_end":158846,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Current>::into_inner","value":"fn into_inner(Self) -> Option<(Id, &'static Metadata)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the span `Id` and `Metadata` of the current\n span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the span `Id` and `Metadata` of the current","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158707,"byte_end":158782,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ span, if one exists and is known.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":158787,"byte_end":158824,"line_start":291,"line_end":291,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159127,"byte_end":159129,"line_start":300,"line_end":300,"column_start":12,"column_end":14},"name":"id","qualname":"<Current>::id","value":"fn id<'_>(&'_ Self) -> Option<&'_ Id>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Id` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Id` of the current span, if one exists and is known.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159046,"byte_end":159115,"line_start":299,"line_end":299,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159374,"byte_end":159382,"line_start":308,"line_end":308,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Current>::metadata","value":"fn metadata<'_>(&'_ Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Metadata` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Metadata` of the current span, if one exists and is known.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159287,"byte_end":159362,"line_start":307,"line_end":307,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159624,"byte_end":159628,"line_start":317,"line_end":317,"column_start":8,"column_end":12},"name":"from","qualname":"<Option<&'a Id> as std::convert::From>::from","value":"fn from(&'a Current) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159734,"byte_end":159738,"line_start":323,"line_end":323,"column_start":8,"column_end":12},"name":"from","qualname":"<Option<Id> as std::convert::From>::from","value":"fn from(&'a Current) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159845,"byte_end":159849,"line_start":329,"line_end":329,"column_start":8,"column_end":12},"name":"from","qualname":"<Option<Id> as std::convert::From>::from","value":"fn from(Current) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":160075,"byte_end":160079,"line_start":338,"line_end":338,"column_start":8,"column_end":12},"name":"from","qualname":"<Option<&'static Metadata> as std::convert::From>::from","value":"fn from(&'a Current) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":800},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":844},{"krate":0,"index":849},{"krate":0,"index":854},{"krate":0,"index":859},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":864},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":872},{"krate":0,"index":881},{"krate":0,"index":898}],"decl_id":null,"docs":" Subscribers collect and record trace data.\n","sig":null,"attributes":[{"value":"/ Subscribers collect and record trace data.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":162629,"byte_end":162675,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":828},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166902,"byte_end":166912,"line_start":83,"line_end":83,"column_start":11,"column_end":21},"name":"Subscriber","qualname":"::subscriber::Subscriber","value":"Subscriber: 'static","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843}],"decl_id":null,"docs":" Trait representing the functions required to collect trace data.","sig":null,"attributes":[{"value":"/ Trait representing the functions required to collect trace data.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":162806,"byte_end":162874,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":162875,"byte_end":162878,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Crates that provide implementations of methods for collecting or recording","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":162879,"byte_end":162957,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ trace data should implement the `Subscriber` interface. This trait is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":162958,"byte_end":163031,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ intended to represent fundamental primitives for collecting trace events and","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163032,"byte_end":163112,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ spans — other libraries may offer utility functions and types to make","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163113,"byte_end":163188,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ subscriber implementations more modular or improve the ergonomics of writing","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163189,"byte_end":163269,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ subscribers.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163270,"byte_end":163286,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163287,"byte_end":163290,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A subscriber is responsible for the following:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163291,"byte_end":163341,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ - Registering new spans as they are created, and providing them with span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163342,"byte_end":163419,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   IDs. Implicitly, this means the subscriber may determine the strategy for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163420,"byte_end":163499,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   determining span equality.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163500,"byte_end":163532,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ - Recording the attachment of field values and follows-from annotations to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163533,"byte_end":163611,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   spans.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163612,"byte_end":163624,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ - Filtering spans and events, and determining when those filters must be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163625,"byte_end":163701,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/   invalidated.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163702,"byte_end":163720,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ - Observing spans as they are entered, exited, and closed, and events as","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163721,"byte_end":163797,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/   they occur.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163798,"byte_end":163815,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163816,"byte_end":163819,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When a span is entered or exited, the subscriber is provided only with the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163820,"byte_end":163898,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ [ID] with which it tagged that span when it was created. This means","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163899,"byte_end":163970,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ that it is up to the subscriber to determine whether and how span _data_ —","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":163971,"byte_end":164051,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the fields and metadata describing the span — should be stored. The","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164052,"byte_end":164125,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ [`new_span`] function is called when a new span is created, and at that","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164126,"byte_end":164201,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ point, the subscriber _may_ choose to store the associated data if it will","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164202,"byte_end":164280,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ be referenced again. However, if the data has already been recorded and will","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164281,"byte_end":164361,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ not be needed by the implementations of `enter` and `exit`, the subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164362,"byte_end":164440,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ may freely discard that data without allocating space to store it.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164441,"byte_end":164511,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164512,"byte_end":164515,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Overriding default impls","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164516,"byte_end":164547,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164548,"byte_end":164551,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Some trait methods on `Subscriber` have default implementations, either in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164552,"byte_end":164630,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ order to reduce the surface area of implementing `Subscriber`, or for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164631,"byte_end":164704,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ backward-compatibility reasons. However, many subscribers will likely want","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164705,"byte_end":164783,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ to override these default implementations.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164784,"byte_end":164830,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164831,"byte_end":164834,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The following methods are likely of interest:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164835,"byte_end":164884,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164885,"byte_end":164888,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - [`register_callsite`] is called once for each callsite from which a span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164889,"byte_end":164967,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/   event may originate, and returns an [`Interest`] value describing whether or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":164968,"byte_end":165050,"line_start":50,"line_end":50,"column_start":1,"column_end":83}},{"value":"/   not the subscriber wishes to see events or spans from that callsite. By","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165051,"byte_end":165128,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/   default, it calls [`enabled`], and returns `Interest::always()` if","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165129,"byte_end":165201,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/   `enabled` returns true, or `Interest::never()` if enabled returns false.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165202,"byte_end":165280,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/   However, if the subscriber's interest can change dynamically at runtime,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165281,"byte_end":165359,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/   it may want to override this function to return `Interest::sometimes()`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165360,"byte_end":165438,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/   Additionally, subscribers which wish to perform a behaviour once for each","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165439,"byte_end":165518,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/   callsite, such as allocating storage for data related to that callsite,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165519,"byte_end":165596,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/   can perform it in `register_callsite`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165597,"byte_end":165641,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165642,"byte_end":165645,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/   See also the [documentation on the callsite registry][cs-reg] for details","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165646,"byte_end":165725,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/   on [`register_callsite`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165726,"byte_end":165757,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165758,"byte_end":165761,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ - [`event_enabled`] is called once before every call to the [`event`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165762,"byte_end":165835,"line_start":63,"line_end":63,"column_start":1,"column_end":74}},{"value":"/   method. This can be used to implement filtering on events once their field","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165836,"byte_end":165916,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/   values are known, but before any processing is done in the `event` method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165917,"byte_end":165997,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ - [`clone_span`] is called every time a span ID is cloned, and [`try_close`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":165998,"byte_end":166078,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/   is called when a span ID is dropped. By default, these functions do","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166079,"byte_end":166152,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/   nothing. However, they can be used to implement reference counting for","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166153,"byte_end":166229,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/   spans, allowing subscribers to free storage for span data and to determine","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166230,"byte_end":166310,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/   when a span has _closed_ permanently (rather than being exited).","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166311,"byte_end":166381,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/   Subscribers which store per-span data or which need to track span closures","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166382,"byte_end":166462,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/   should override these functions together.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166463,"byte_end":166510,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166511,"byte_end":166514,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166515,"byte_end":166540,"line_start":74,"line_end":74,"column_start":1,"column_end":26}},{"value":"/ [`new_span`]: Subscriber::new_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166541,"byte_end":166579,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/ [`register_callsite`]: Subscriber::register_callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166580,"byte_end":166636,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`enabled`]: Subscriber::enabled","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166637,"byte_end":166673,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`clone_span`]: Subscriber::clone_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166674,"byte_end":166716,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/ [`try_close`]: Subscriber::try_close","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166717,"byte_end":166757,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/ [cs-reg]: crate::callsite#registering-callsites","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166758,"byte_end":166809,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/ [`event`]: Subscriber::event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166810,"byte_end":166842,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/ [`event_enabled`]: Subscriber::event_enabled","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":166843,"byte_end":166891,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171149,"byte_end":171166,"line_start":157,"line_end":157,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"::subscriber::Subscriber::register_callsite","value":"fn register_callsite<'_>(&'_ Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Registers a new [callsite] with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new [callsite] with this subscriber, returning whether or not","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167009,"byte_end":167086,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167091,"byte_end":167161,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167166,"byte_end":167169,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ By default, this function assumes that the subscriber's [filter]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167174,"byte_end":167242,"line_start":89,"line_end":89,"column_start":5,"column_end":73}},{"value":"/ represents an unchanging view of its interest in the callsite. However,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167247,"byte_end":167322,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ if this is not the case, subscribers may override this function to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167327,"byte_end":167397,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ indicate different interests, or to implement behaviour that should run","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167402,"byte_end":167477,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ once for every callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167482,"byte_end":167510,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167515,"byte_end":167518,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to be called at least once per callsite on","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167523,"byte_end":167597,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ every active subscriber. The subscriber may store the keys to fields it","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167602,"byte_end":167677,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ cares about in order to reduce the cost of accessing fields by name,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167682,"byte_end":167754,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ preallocate storage for that callsite, or perform any other actions it","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167759,"byte_end":167833,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ wishes to perform once for each callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167838,"byte_end":167883,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167888,"byte_end":167891,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The subscriber should then return an [`Interest`], indicating","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167896,"byte_end":167961,"line_start":101,"line_end":101,"column_start":5,"column_end":70}},{"value":"/ whether it is interested in being notified about that callsite in the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":167966,"byte_end":168039,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ future. This may be `Always` indicating that the subscriber always","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168044,"byte_end":168114,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ wishes to be notified about the callsite, and its filter need not be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168119,"byte_end":168191,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ re-evaluated; `Sometimes`, indicating that the subscriber may sometimes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168196,"byte_end":168271,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ care about the callsite but not always (such as when sampling), or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168276,"byte_end":168346,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ `Never`, indicating that the subscriber never wishes to be notified about","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168351,"byte_end":168428,"line_start":107,"line_end":107,"column_start":5,"column_end":82}},{"value":"/ that callsite. If all active subscribers return `Never`, a callsite will","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168433,"byte_end":168509,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ never be enabled unless a new subscriber expresses interest in it.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168514,"byte_end":168584,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168589,"byte_end":168592,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s which require their filters to be run every time an event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168597,"byte_end":168672,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ occurs or a span is entered/exited should return `Interest::sometimes`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168677,"byte_end":168752,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ If a subscriber returns `Interest::sometimes`, then its [`enabled`] method","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168757,"byte_end":168835,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/ will be called every time an event or span is created from that callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168840,"byte_end":168917,"line_start":114,"line_end":114,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168922,"byte_end":168925,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ For example, suppose a sampling subscriber is implemented by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168930,"byte_end":168994,"line_start":116,"line_end":116,"column_start":5,"column_end":69}},{"value":"/ incrementing a counter every time `enabled` is called and only returning","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":168999,"byte_end":169075,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ `true` when the counter is divisible by a specified sampling rate. If","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169080,"byte_end":169153,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ that subscriber returns `Interest::always` from `register_callsite`, then","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169158,"byte_end":169235,"line_start":119,"line_end":119,"column_start":5,"column_end":82}},{"value":"/ the filter will not be re-evaluated once it has been applied to a given","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169240,"byte_end":169315,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ set of metadata. Thus, the counter will not be incremented, and the span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169320,"byte_end":169396,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ or event that corresponds to the metadata will never be `enabled`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169401,"byte_end":169471,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169476,"byte_end":169479,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s that need to change their filters occasionally should call","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169484,"byte_end":169560,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ [`rebuild_interest_cache`] to re-evaluate `register_callsite` for all","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169565,"byte_end":169638,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ callsites.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169643,"byte_end":169657,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169662,"byte_end":169665,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Similarly, if a `Subscriber` has a filtering strategy that can be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169670,"byte_end":169739,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ changed dynamically at runtime, it would need to re-evaluate that filter","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169744,"byte_end":169820,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ if the cached results have changed.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169825,"byte_end":169864,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169869,"byte_end":169872,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ A subscriber which manages fanout to multiple other subscribers","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169877,"byte_end":169944,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/ should proxy this decision to all of its child subscribers,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":169949,"byte_end":170012,"line_start":133,"line_end":133,"column_start":5,"column_end":68}},{"value":"/ returning `Interest::never` only if _all_ such children return","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170017,"byte_end":170083,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ `Interest::never`. If the set of subscribers to which spans are","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170088,"byte_end":170155,"line_start":135,"line_end":135,"column_start":5,"column_end":72}},{"value":"/ broadcast may change dynamically, the subscriber should also never","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170160,"byte_end":170230,"line_start":136,"line_end":136,"column_start":5,"column_end":75}},{"value":"/ return `Interest::Never`, as a new subscriber may be added that _is_","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170235,"byte_end":170307,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ interested.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170312,"byte_end":170327,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170332,"byte_end":170335,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on the callsite registry][cs-reg] for more","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170340,"byte_end":170409,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ details on how and when the `register_callsite` method is called.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170414,"byte_end":170483,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170488,"byte_end":170491,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170496,"byte_end":170507,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/ This function may be called again when a new subscriber is created or","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170512,"byte_end":170585,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ when the registry is invalidated.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170590,"byte_end":170627,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170632,"byte_end":170635,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If a subscriber returns `Interest::never` for a particular callsite, it","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170640,"byte_end":170715,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ _may_ still see spans and events originating from that callsite, if","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170720,"byte_end":170791,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ another subscriber expressed interest in it.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170796,"byte_end":170844,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170849,"byte_end":170852,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [callsite]: crate::callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170857,"byte_end":170888,"line_start":151,"line_end":151,"column_start":5,"column_end":36}},{"value":"/ [filter]: Self::enabled","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170893,"byte_end":170920,"line_start":152,"line_end":152,"column_start":5,"column_end":32}},{"value":"/ [metadata]: super::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170925,"byte_end":170966,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/ [`enabled`]: Subscriber::enabled()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":170971,"byte_end":171009,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ [`rebuild_interest_cache`]: super::callsite::rebuild_interest_cache","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171014,"byte_end":171085,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ [cs-reg]: crate::callsite#registering-callsites","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171090,"byte_end":171141,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172509,"byte_end":172516,"line_start":185,"line_end":185,"column_start":8,"column_end":15},"name":"enabled","qualname":"::subscriber::Subscriber::enabled","value":"fn enabled<'_, '_, '_>(&'_ Self, &'_ Metadata) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Returns true if a span or event with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span or event with the specified [metadata] would be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171361,"byte_end":171435,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ recorded.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171440,"byte_end":171453,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171458,"byte_end":171461,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ By default, it is assumed that this filter needs only be evaluated once","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171466,"byte_end":171541,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ for each callsite, so it is called by [`register_callsite`] when each","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171546,"byte_end":171619,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ callsite is registered. The result is used to determine if the subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171624,"byte_end":171701,"line_start":170,"line_end":170,"column_start":5,"column_end":82}},{"value":"/ is always [interested] or never interested in that callsite. This is intended","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171706,"byte_end":171787,"line_start":171,"line_end":171,"column_start":5,"column_end":86}},{"value":"/ primarily as an optimization, so that expensive filters (such as those","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171792,"byte_end":171866,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ involving string search, et cetera) need not be re-evaluated.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171871,"byte_end":171936,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171941,"byte_end":171944,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ However, if the subscriber's interest in a particular span or event may","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":171949,"byte_end":172024,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ change, or depends on contexts only determined dynamically at runtime,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172029,"byte_end":172103,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ then the `register_callsite` method should be overridden to return","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172108,"byte_end":172178,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ [`Interest::sometimes`]. In that case, this function will be called every","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172183,"byte_end":172260,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/ time that span or event occurs.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172265,"byte_end":172300,"line_start":179,"line_end":179,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172305,"byte_end":172308,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [metadata]: super::metadata::Metadata","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172313,"byte_end":172354,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ [interested]: Interest","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172359,"byte_end":172385,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/ [`Interest::sometimes`]: Interest::sometimes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172390,"byte_end":172438,"line_start":183,"line_end":183,"column_start":5,"column_end":53}},{"value":"/ [`register_callsite`]: Subscriber::register_callsite()","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172443,"byte_end":172501,"line_start":184,"line_end":184,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173912,"byte_end":173926,"line_start":209,"line_end":209,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"::subscriber::Subscriber::max_level_hint","value":"fn max_level_hint<'_>(&'_ Self) -> Option<LevelFilter>","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Returns the highest [verbosity level][level] that this `Subscriber` will\n enable, or `None`, if the subscriber does not implement level-based\n filtering or chooses not to implement this method.","sig":null,"attributes":[{"value":"/ Returns the highest [verbosity level][level] that this `Subscriber` will","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172563,"byte_end":172639,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ enable, or `None`, if the subscriber does not implement level-based","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172644,"byte_end":172715,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ filtering or chooses not to implement this method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172720,"byte_end":172774,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172779,"byte_end":172782,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ If this method returns a [`Level`][level], it will be used as a hint to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172787,"byte_end":172862,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ determine the most verbose level that will be enabled. This will allow","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172867,"byte_end":172941,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ spans and events which are more verbose than that level to be skipped","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":172946,"byte_end":173019,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ more efficiently. Subscribers which perform filtering are strongly","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173024,"byte_end":173094,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ encouraged to provide an implementation of this method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173099,"byte_end":173158,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173163,"byte_end":173166,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the maximum level the subscriber will enable can change over the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173171,"byte_end":173242,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ course of its lifetime, it is free to return a different value from","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173247,"byte_end":173318,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ multiple invocations of this method. However, note that changes in the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173323,"byte_end":173397,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ maximum level will **only** be reflected after the callsite [`Interest`]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173402,"byte_end":173478,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ cache is rebuilt, by calling the [`callsite::rebuild_interest_cache`][rebuild]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173483,"byte_end":173565,"line_start":201,"line_end":201,"column_start":5,"column_end":87}},{"value":"/ function. Therefore, if the subscriber will change the value returned by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173570,"byte_end":173646,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ this method, it is responsible for ensuring that","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173651,"byte_end":173703,"line_start":203,"line_end":203,"column_start":5,"column_end":57}},{"value":"/ [`rebuild_interest_cache`][rebuild] is called after the value of the max","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173708,"byte_end":173784,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ level changes.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173789,"byte_end":173807,"line_start":205,"line_end":205,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173812,"byte_end":173815,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [level]: super::Level","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173820,"byte_end":173845,"line_start":207,"line_end":207,"column_start":5,"column_end":30}},{"value":"/ [rebuild]: super::callsite::rebuild_interest_cache","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173850,"byte_end":173904,"line_start":208,"line_end":208,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175336,"byte_end":175344,"line_start":237,"line_end":237,"column_start":8,"column_end":16},"name":"new_span","qualname":"::subscriber::Subscriber::new_span","value":"fn new_span<'_, '_, '_>(&'_ Self, &'_ span::Attributes) -> span::Id","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Visit the construction of a new span, returning a new [span ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Visit the construction of a new span, returning a new [span ID] for the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":173983,"byte_end":174058,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ span being constructed.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174063,"byte_end":174090,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174095,"byte_end":174098,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The provided [`Attributes`] contains any field values that were provided","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174103,"byte_end":174179,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ when the span was created. The subscriber may pass a [visitor] to the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174184,"byte_end":174257,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ `Attributes`' [`record` method] to record these values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174262,"byte_end":174321,"line_start":218,"line_end":218,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174326,"byte_end":174329,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ IDs are used to uniquely identify spans and events within the context of a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174334,"byte_end":174412,"line_start":220,"line_end":220,"column_start":5,"column_end":83}},{"value":"/ subscriber, so span equality will be based on the returned ID. Thus, if","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174417,"byte_end":174492,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ the subscriber wishes for all spans with the same metadata to be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174497,"byte_end":174565,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ considered equal, it should return the same ID every time it is given a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174570,"byte_end":174645,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ particular set of metadata. Similarly, if it wishes for two separate","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174650,"byte_end":174722,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ instances of a span with the same metadata to *not* be equal, it should","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174727,"byte_end":174802,"line_start":225,"line_end":225,"column_start":5,"column_end":80}},{"value":"/ return a distinct ID every time this function is called, regardless of","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174807,"byte_end":174881,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ the metadata.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174886,"byte_end":174903,"line_start":227,"line_end":227,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174908,"byte_end":174911,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that the subscriber is free to assign span IDs based on whatever","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174916,"byte_end":174989,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ scheme it sees fit. Any guarantees about uniqueness, ordering, or ID","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":174994,"byte_end":175066,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ reuse are left up to the subscriber implementation to determine.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175071,"byte_end":175139,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175144,"byte_end":175147,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175152,"byte_end":175182,"line_start":233,"line_end":233,"column_start":5,"column_end":35}},{"value":"/ [`Attributes`]: super::span::Attributes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175187,"byte_end":175230,"line_start":234,"line_end":234,"column_start":5,"column_end":48}},{"value":"/ [visitor]: super::field::Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175235,"byte_end":175269,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/ [`record` method]: super::span::Attributes::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175274,"byte_end":175328,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176927,"byte_end":176933,"line_start":277,"line_end":277,"column_start":8,"column_end":14},"name":"record","qualname":"::subscriber::Subscriber::record","value":"fn record<'_, '_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Record)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175480,"byte_end":175517,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175522,"byte_end":175525,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when value is recorded on a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175530,"byte_end":175595,"line_start":243,"line_end":243,"column_start":5,"column_end":70}},{"value":"/ Recording multiple values for the same field is possible,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175600,"byte_end":175661,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/ but the actual behaviour is defined by the subscriber implementation.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175666,"byte_end":175739,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175744,"byte_end":175747,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Keep in mind that a span might not provide a value","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175752,"byte_end":175806,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/ for each field it declares.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175811,"byte_end":175842,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175847,"byte_end":175850,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The subscriber is expected to provide a [visitor] to the `Record`'s","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175855,"byte_end":175926,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ [`record` method] in order to record the added values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175931,"byte_end":175989,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":175994,"byte_end":175997,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176002,"byte_end":176015,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/  \"foo = 3\" will be recorded when [`record`] is called on the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176020,"byte_end":176084,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/ `Attributes` passed to `new_span`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176089,"byte_end":176127,"line_start":255,"line_end":255,"column_start":5,"column_end":43}},{"value":"/ Since values are not provided for the `bar` and `baz` fields,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176132,"byte_end":176197,"line_start":256,"line_end":256,"column_start":5,"column_end":70}},{"value":"/ the span's `Metadata` will indicate that it _has_ those fields,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176202,"byte_end":176269,"line_start":257,"line_end":257,"column_start":5,"column_end":72}},{"value":"/ but values for them won't be recorded at this time.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176274,"byte_end":176329,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176334,"byte_end":176337,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176342,"byte_end":176360,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/ # use tracing::span;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176365,"byte_end":176389,"line_start":261,"line_end":261,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176394,"byte_end":176397,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let mut span = span!(\"my_span\", foo = 3, bar, baz);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176402,"byte_end":176457,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176462,"byte_end":176465,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176470,"byte_end":176528,"line_start":265,"line_end":265,"column_start":5,"column_end":63}},{"value":"/ // containing \"bar = false\"","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176533,"byte_end":176564,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ span.record(\"bar\", &false);","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176569,"byte_end":176600,"line_start":267,"line_end":267,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176605,"byte_end":176608,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176613,"byte_end":176671,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/ // containing \"baz = \"a string\"\"","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176676,"byte_end":176712,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ span.record(\"baz\", &\"a string\");","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176717,"byte_end":176753,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176758,"byte_end":176765,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176770,"byte_end":176773,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [visitor]: super::field::Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176778,"byte_end":176812,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/ [`record`]: super::span::Attributes::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176817,"byte_end":176864,"line_start":275,"line_end":275,"column_start":5,"column_end":52}},{"value":"/ [`record` method]: super::span::Record::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176869,"byte_end":176919,"line_start":276,"line_end":276,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178167,"byte_end":178186,"line_start":297,"line_end":297,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"::subscriber::Subscriber::record_follows_from","value":"fn record_follows_from<'_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":176991,"byte_end":177059,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177064,"byte_end":177078,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177083,"byte_end":177086,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177091,"byte_end":177167,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177172,"byte_end":177246,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177251,"byte_end":177322,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177327,"byte_end":177401,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177406,"byte_end":177472,"line_start":286,"line_end":286,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177477,"byte_end":177551,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177556,"byte_end":177628,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177633,"byte_end":177702,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177707,"byte_end":177710,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If the subscriber has spans corresponding to the given IDs, it should","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177715,"byte_end":177788,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ record this relationship in whatever way it deems necessary. Otherwise,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177793,"byte_end":177868,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ if one or both of the given span IDs do not correspond to spans that the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177873,"byte_end":177949,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ subscriber knows about, or if a cyclical relationship would be created","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":177954,"byte_end":178028,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ (i.e., some span _a_ which proceeds some other span _b_ may not also","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178033,"byte_end":178105,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ follow from _b_), it may silently do nothing.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178110,"byte_end":178159,"line_start":296,"line_end":296,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178607,"byte_end":178620,"line_start":305,"line_end":305,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"::subscriber::Subscriber::event_enabled","value":"fn event_enabled<'_, '_, '_>(&'_ Self, &'_ Event) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Determine if an [`Event`] should be recorded.","sig":null,"attributes":[{"value":"/ Determine if an [`Event`] should be recorded.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178237,"byte_end":178286,"line_start":299,"line_end":299,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178291,"byte_end":178294,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ By default, this returns `true` and `Subscriber`s can filter events in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178299,"byte_end":178373,"line_start":301,"line_end":301,"column_start":5,"column_end":79}},{"value":"/ [`event`][Self::event] without any penalty. However, when `event` is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178378,"byte_end":178450,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ more complicated, this can be used to determine if `event` should be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178455,"byte_end":178527,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ called at all, separating out the decision from the processing.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178532,"byte_end":178599,"line_start":304,"line_end":304,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179585,"byte_end":179590,"line_start":328,"line_end":328,"column_start":8,"column_end":13},"name":"event","qualname":"::subscriber::Subscriber::event","value":"fn event<'_, '_, '_>(&'_ Self, &'_ Event)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178704,"byte_end":178747,"line_start":310,"line_end":310,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178752,"byte_end":178755,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when an Event is constructed by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178760,"byte_end":178823,"line_start":312,"line_end":312,"column_start":5,"column_end":68}},{"value":"/ the `Event`'s [`dispatch` method]. For example, this happens internally","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178828,"byte_end":178903,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ when an event macro from `tracing` is called.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178908,"byte_end":178957,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178962,"byte_end":178965,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The key difference between this method and `record` is that `record` is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":178970,"byte_end":179045,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ called when a value is recorded for a field defined by a span,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179050,"byte_end":179116,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/ while `event` is called when a new event occurs.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179121,"byte_end":179173,"line_start":318,"line_end":318,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179178,"byte_end":179181,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The provided `Event` struct contains any field values attached to the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179186,"byte_end":179259,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ event. The subscriber may pass a [visitor] to the `Event`'s","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179264,"byte_end":179327,"line_start":321,"line_end":321,"column_start":5,"column_end":68}},{"value":"/ [`record` method] to record these values.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179332,"byte_end":179377,"line_start":322,"line_end":322,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179382,"byte_end":179385,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179390,"byte_end":179424,"line_start":324,"line_end":324,"column_start":5,"column_end":39}},{"value":"/ [visitor]: super::field::Visit","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179429,"byte_end":179463,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/ [`record` method]: super::event::Event::record","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179468,"byte_end":179518,"line_start":326,"line_end":326,"column_start":5,"column_end":55}},{"value":"/ [`dispatch` method]: super::event::Event::dispatch","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179523,"byte_end":179577,"line_start":327,"line_end":327,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179999,"byte_end":180004,"line_start":338,"line_end":338,"column_start":8,"column_end":13},"name":"enter","qualname":"::subscriber::Subscriber::enter","value":"fn enter<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Records that a span has been entered.","sig":null,"attributes":[{"value":"/ Records that a span has been entered.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179623,"byte_end":179664,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179669,"byte_end":179672,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ When entering a span, this method is called to notify the subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179677,"byte_end":179749,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ that the span has been entered. The subscriber is provided with the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179754,"byte_end":179825,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ [span ID] of the entered span, and should update any internal state","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179830,"byte_end":179901,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179906,"byte_end":179948,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179953,"byte_end":179956,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":179961,"byte_end":179991,"line_start":337,"line_end":337,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180491,"byte_end":180495,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"exit","qualname":"::subscriber::Subscriber::exit","value":"fn exit<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180035,"byte_end":180075,"line_start":340,"line_end":340,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180080,"byte_end":180083,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ When exiting a span, this method is called to notify the subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180088,"byte_end":180159,"line_start":342,"line_end":342,"column_start":5,"column_end":76}},{"value":"/ that the span has been exited. The subscriber is provided with the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180164,"byte_end":180234,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ [span ID] of the exited span, and should update any internal state","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180239,"byte_end":180309,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180314,"byte_end":180356,"line_start":345,"line_end":345,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180361,"byte_end":180364,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Exiting a span does not imply that the span will not be re-entered.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180369,"byte_end":180440,"line_start":347,"line_end":347,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180445,"byte_end":180448,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180453,"byte_end":180483,"line_start":349,"line_end":349,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181666,"byte_end":181676,"line_start":372,"line_end":372,"column_start":8,"column_end":18},"name":"clone_span","qualname":"::subscriber::Subscriber::clone_span","value":"fn clone_span<'_, '_>(&'_ Self, &'_ span::Id) -> span::Id","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180526,"byte_end":180587,"line_start":352,"line_end":352,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180592,"byte_end":180595,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180600,"byte_end":180673,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180678,"byte_end":180732,"line_start":355,"line_end":355,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180737,"byte_end":180740,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Note that the default implementation of this function this is just the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180745,"byte_end":180819,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ identity function, passing through the identifier. However, it can be","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180824,"byte_end":180897,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ used in conjunction with [`try_close`] to track the number of handles","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180902,"byte_end":180975,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ capable of `enter`ing a span. When all the handles have been dropped","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":180980,"byte_end":181052,"line_start":360,"line_end":360,"column_start":5,"column_end":77}},{"value":"/ (i.e., `try_close` has been called one more time than `clone_span` for a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181057,"byte_end":181133,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ given ID), the subscriber may assume that the span will not be entered","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181138,"byte_end":181212,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ again. It is then free to deallocate storage for data associated with","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181217,"byte_end":181290,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ that span, write data from that span to IO, and so on.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181295,"byte_end":181353,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181358,"byte_end":181361,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ For more unsafe situations, however, if `id` is itself a pointer of some","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181366,"byte_end":181442,"line_start":366,"line_end":366,"column_start":5,"column_end":81}},{"value":"/ kind this can be used as a hook to \"clone\" the pointer, depending on","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181447,"byte_end":181519,"line_start":367,"line_end":367,"column_start":5,"column_end":77}},{"value":"/ what that means for the specified pointer.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181524,"byte_end":181570,"line_start":368,"line_end":368,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181575,"byte_end":181578,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181583,"byte_end":181613,"line_start":370,"line_end":370,"column_start":5,"column_end":35}},{"value":"/ [`try_close`]: Subscriber::try_close","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181618,"byte_end":181658,"line_start":371,"line_end":371,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182183,"byte_end":182192,"line_start":386,"line_end":386,"column_start":8,"column_end":17},"name":"drop_span","qualname":"::subscriber::Subscriber::drop_span","value":"fn drop_span<'_>(&'_ Self, span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" **This method is deprecated.**","sig":null,"attributes":[{"value":"/ **This method is deprecated.**","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181743,"byte_end":181777,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181782,"byte_end":181785,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Using `drop_span` may result in subscribers composed using","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181790,"byte_end":181852,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ `tracing-subscriber` crate's `Layer` trait from observing close events.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181857,"byte_end":181932,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ Use [`try_close`] instead.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181937,"byte_end":181967,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181972,"byte_end":181975,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this function does nothing.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":181980,"byte_end":182041,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182046,"byte_end":182049,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ [`try_close`]: Subscriber::try_close","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182054,"byte_end":182094,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Subscriber::try_close` instead\")","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182099,"byte_end":182175,"line_start":385,"line_end":385,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184344,"byte_end":184353,"line_start":424,"line_end":424,"column_start":8,"column_end":17},"name":"try_close","qualname":"::subscriber::Subscriber::try_close","value":"fn try_close<'_>(&'_ Self, span::Id) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs that refer to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182223,"byte_end":182297,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs that refer to that span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182302,"byte_end":182360,"line_start":389,"line_end":389,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182365,"byte_end":182368,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Higher-level libraries providing functionality for composing multiple","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182373,"byte_end":182446,"line_start":391,"line_end":391,"column_start":5,"column_end":78}},{"value":"/ subscriber implementations may use this return value to notify any","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182451,"byte_end":182521,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ \"layered\" subscribers that this subscriber considers the span closed.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182526,"byte_end":182599,"line_start":393,"line_end":393,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182604,"byte_end":182607,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method calls the subscriber's","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182612,"byte_end":182680,"line_start":395,"line_end":395,"column_start":5,"column_end":73}},{"value":"/ [`drop_span`] method and returns `false`. This means that, unless the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182685,"byte_end":182758,"line_start":396,"line_end":396,"column_start":5,"column_end":78}},{"value":"/ subscriber overrides the default implementation, close notifications","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182763,"byte_end":182835,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/ will never be sent to any layered subscribers. In general, if the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182840,"byte_end":182909,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ subscriber tracks reference counts, this method should be implemented,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182914,"byte_end":182988,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ rather than `drop_span`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":182993,"byte_end":183021,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183026,"byte_end":183029,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183034,"byte_end":183107,"line_start":402,"line_end":402,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183112,"byte_end":183166,"line_start":403,"line_end":403,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183171,"byte_end":183174,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ It's guaranteed that if this function has been called once more than the","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183179,"byte_end":183255,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ number of times `clone_span` was called with the same `id`, then no more","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183260,"byte_end":183336,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ handles that can enter the span with that `id` exist. This means that it","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183341,"byte_end":183417,"line_start":407,"line_end":407,"column_start":5,"column_end":81}},{"value":"/ can be used in conjunction with [`clone_span`] to track the number of","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183422,"byte_end":183495,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ handles capable of `enter`ing a span. When all the handles have been","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183500,"byte_end":183572,"line_start":409,"line_end":409,"column_start":5,"column_end":77}},{"value":"/ dropped (i.e., `try_close` has been called one more time than","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183577,"byte_end":183642,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/ `clone_span` for a given ID), the subscriber may assume that the span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183647,"byte_end":183720,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ will not be entered again, and should return `true`. It is then free to","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183725,"byte_end":183800,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ deallocate storage for data associated with that span, write data from","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183805,"byte_end":183879,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/ that span to IO, and so on.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183884,"byte_end":183915,"line_start":414,"line_end":414,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183920,"byte_end":183923,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ **Note**: since this function is called when spans are dropped,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":183928,"byte_end":183995,"line_start":416,"line_end":416,"column_start":5,"column_end":72}},{"value":"/ implementations should ensure that they are unwind-safe. Panicking from","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184000,"byte_end":184075,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ inside of a `try_close` function may cause a double panic, if the span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184080,"byte_end":184154,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ was dropped due to a thread unwinding.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184159,"byte_end":184201,"line_start":419,"line_end":419,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184206,"byte_end":184209,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ [span ID]: super::span::Id","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184214,"byte_end":184244,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/ [`clone_span`]: Subscriber::clone_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184249,"byte_end":184291,"line_start":422,"line_end":422,"column_start":5,"column_end":47}},{"value":"/ [`drop_span`]: Subscriber::drop_span","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184296,"byte_end":184336,"line_start":423,"line_end":423,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185167,"byte_end":185179,"line_start":443,"line_end":443,"column_start":8,"column_end":20},"name":"current_span","qualname":"::subscriber::Subscriber::current_span","value":"fn current_span<'_>(&'_ Self) -> span::Current","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184467,"byte_end":184542,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184547,"byte_end":184550,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ If subscribers track a current span, they should override this function","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184555,"byte_end":184630,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ to return [`Current::new`] if the thread from which this method is","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184635,"byte_end":184705,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/ called is inside a span, or [`Current::none`] if the thread is not","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184710,"byte_end":184780,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ inside a span.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184785,"byte_end":184803,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184808,"byte_end":184811,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ By default, this returns a value indicating that the subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184816,"byte_end":184883,"line_start":437,"line_end":437,"column_start":5,"column_end":72}},{"value":"/ does **not** track what span is current. If the subscriber does not","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184888,"byte_end":184959,"line_start":438,"line_end":438,"column_start":5,"column_end":76}},{"value":"/ implement a current span, it should not override this method.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":184964,"byte_end":185029,"line_start":439,"line_end":439,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185034,"byte_end":185037,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`Current::new`]: super::span::Current#tymethod.new","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185042,"byte_end":185097,"line_start":441,"line_end":441,"column_start":5,"column_end":60}},{"value":"/ [`Current::none`]: super::span::Current#tymethod.none","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185102,"byte_end":185159,"line_start":442,"line_end":442,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186699,"byte_end":186711,"line_start":474,"line_end":474,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"::subscriber::Subscriber::downcast_raw","value":"unsafe fn downcast_raw<'_>(&'_ Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" If `self` is the same type as the provided `TypeId`, returns an untyped\n `*const` pointer to that type. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ If `self` is the same type as the provided `TypeId`, returns an untyped","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185331,"byte_end":185406,"line_start":449,"line_end":449,"column_start":5,"column_end":80}},{"value":"/ `*const` pointer to that type. Otherwise, returns `None`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185411,"byte_end":185472,"line_start":450,"line_end":450,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185477,"byte_end":185480,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ If you wish to downcast a `Subscriber`, it is strongly advised to use","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185485,"byte_end":185558,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ the safe API provided by [`downcast_ref`] instead.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185563,"byte_end":185617,"line_start":453,"line_end":453,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185622,"byte_end":185625,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This API is required for `downcast_raw` to be a trait method; a method","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185630,"byte_end":185704,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ signature like [`downcast_ref`] (with a generic type parameter) is not","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185709,"byte_end":185783,"line_start":456,"line_end":456,"column_start":5,"column_end":79}},{"value":"/ object-safe, and thus cannot be a trait method for `Subscriber`. This","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185788,"byte_end":185861,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/ means that if we only exposed `downcast_ref`, `Subscriber`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185866,"byte_end":185928,"line_start":458,"line_end":458,"column_start":5,"column_end":67}},{"value":"/ implementations could not override the downcasting behavior","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":185933,"byte_end":185996,"line_start":459,"line_end":459,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186001,"byte_end":186004,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This method may be overridden by \"fan out\" or \"chained\" subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186009,"byte_end":186079,"line_start":461,"line_end":461,"column_start":5,"column_end":75}},{"value":"/ implementations which consist of multiple composed types. Such","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186084,"byte_end":186150,"line_start":462,"line_end":462,"column_start":5,"column_end":71}},{"value":"/ subscribers might allow `downcast_raw` by returning references to those","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186155,"byte_end":186230,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ component if they contain components with the given `TypeId`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186235,"byte_end":186300,"line_start":464,"line_end":464,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186305,"byte_end":186308,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186313,"byte_end":186325,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186330,"byte_end":186333,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ The [`downcast_ref`] method expects that the pointer returned by","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186338,"byte_end":186406,"line_start":468,"line_end":468,"column_start":5,"column_end":73}},{"value":"/ `downcast_raw` is non-null and points to a valid instance of the type","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186411,"byte_end":186484,"line_start":469,"line_end":469,"column_start":5,"column_end":78}},{"value":"/ with the provided `TypeId`. Failure to ensure this will result in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186489,"byte_end":186558,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ undefined behaviour, so implementing `downcast_raw` is unsafe.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186563,"byte_end":186629,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186634,"byte_end":186637,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ [`downcast_ref`]: #method.downcast_ref","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186642,"byte_end":186684,"line_start":473,"line_end":473,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187000,"byte_end":187002,"line_start":485,"line_end":485,"column_start":12,"column_end":14},"name":"is","qualname":"<dyn Subscriber>::is","value":"fn is<T, '_>(&'_ Self) -> bool where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Subscriber` is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Subscriber` is the same type as `T`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":186924,"byte_end":186988,"line_start":484,"line_end":484,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187200,"byte_end":187212,"line_start":491,"line_end":491,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn Subscriber>::downcast_ref","value":"fn downcast_ref<T, '_>(&'_ Self) -> Option<&'_ T> where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this `Subscriber` value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this `Subscriber` value if it is of type `T`,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187082,"byte_end":187157,"line_start":489,"line_end":489,"column_start":5,"column_end":80}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187162,"byte_end":187188,"line_start":490,"line_end":490,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187581,"byte_end":187583,"line_start":505,"line_end":505,"column_start":12,"column_end":14},"name":"is","qualname":"<dyn Subscriber + Send>::is","value":"fn is<T, '_>(&'_ Self) -> bool where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this [`Subscriber`] is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this [`Subscriber`] is the same type as `T`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187503,"byte_end":187569,"line_start":504,"line_end":504,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187783,"byte_end":187795,"line_start":511,"line_end":511,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn Subscriber + Send>::downcast_ref","value":"fn downcast_ref<T, '_>(&'_ Self) -> Option<&'_ T> where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this [`Subscriber`] value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this [`Subscriber`] value if it is of type `T`,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187663,"byte_end":187740,"line_start":509,"line_end":509,"column_start":5,"column_end":82}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":187745,"byte_end":187771,"line_start":510,"line_end":510,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188164,"byte_end":188166,"line_start":525,"line_end":525,"column_start":12,"column_end":14},"name":"is","qualname":"<dyn Subscriber + Sync>::is","value":"fn is<T, '_>(&'_ Self) -> bool where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this [`Subscriber`] is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this [`Subscriber`] is the same type as `T`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188086,"byte_end":188152,"line_start":524,"line_end":524,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188367,"byte_end":188379,"line_start":531,"line_end":531,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn Subscriber + Sync>::downcast_ref","value":"fn downcast_ref<T, '_>(&'_ Self) -> Option<&'_ T> where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this `[`Subscriber`] value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this `[`Subscriber`] value if it is of type `T`,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188246,"byte_end":188324,"line_start":529,"line_end":529,"column_start":5,"column_end":83}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188329,"byte_end":188355,"line_start":530,"line_end":530,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188755,"byte_end":188757,"line_start":545,"line_end":545,"column_start":12,"column_end":14},"name":"is","qualname":"<dyn Subscriber + Send + Sync>::is","value":"fn is<T, '_>(&'_ Self) -> bool where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this [`Subscriber`] is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this [`Subscriber`] is the same type as `T`.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188677,"byte_end":188743,"line_start":544,"line_end":544,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188957,"byte_end":188969,"line_start":551,"line_end":551,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn Subscriber + Send + Sync>::downcast_ref","value":"fn downcast_ref<T, '_>(&'_ Self) -> Option<&'_ T> where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this [`Subscriber`] value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this [`Subscriber`] value if it is of type `T`,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188837,"byte_end":188914,"line_start":549,"line_end":549,"column_start":5,"column_end":82}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":188919,"byte_end":188945,"line_start":550,"line_end":550,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189595,"byte_end":189603,"line_start":571,"line_end":571,"column_start":12,"column_end":20},"name":"Interest","qualname":"::subscriber::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates a [`Subscriber`]'s interest in a particular callsite.","sig":null,"attributes":[{"value":"/ Indicates a [`Subscriber`]'s interest in a particular callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189227,"byte_end":189294,"line_start":563,"line_end":563,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189295,"byte_end":189298,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s return an `Interest` from their [`register_callsite`] methods","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189299,"byte_end":189378,"line_start":565,"line_end":565,"column_start":1,"column_end":80}},{"value":"/ in order to determine whether that span should be enabled or disabled.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189379,"byte_end":189453,"line_start":566,"line_end":566,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189454,"byte_end":189457,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189458,"byte_end":189495,"line_start":568,"line_end":568,"column_start":1,"column_end":38}},{"value":"/ [`register_callsite`]: super::Subscriber::register_callsite","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189496,"byte_end":189559,"line_start":569,"line_end":569,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190082,"byte_end":190087,"line_start":587,"line_end":587,"column_start":12,"column_end":17},"name":"never","qualname":"<Interest>::never","value":"fn never() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating that the subscriber is never interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating that the subscriber is never interested","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189775,"byte_end":189851,"line_start":581,"line_end":581,"column_start":5,"column_end":81}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189856,"byte_end":189895,"line_start":582,"line_end":582,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189900,"byte_end":189903,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `never()` interested in a callsite, it will","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189908,"byte_end":189985,"line_start":584,"line_end":584,"column_start":5,"column_end":82}},{"value":"/ be completely disabled unless a new subscriber becomes active.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189990,"byte_end":190056,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190061,"byte_end":190070,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190616,"byte_end":190625,"line_start":599,"line_end":599,"column_start":12,"column_end":21},"name":"sometimes","qualname":"<Interest>::sometimes","value":"fn sometimes() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is sometimes interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is sometimes interested","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190149,"byte_end":190224,"line_start":591,"line_end":591,"column_start":5,"column_end":80}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190229,"byte_end":190268,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190273,"byte_end":190276,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `sometimes` or `never` interested in a","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190281,"byte_end":190353,"line_start":594,"line_end":594,"column_start":5,"column_end":77}},{"value":"/ callsite, the currently active subscriber will be asked to filter that","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190358,"byte_end":190432,"line_start":595,"line_end":595,"column_start":5,"column_end":79}},{"value":"/ callsite every time it creates a span. This will be the case until a new","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190437,"byte_end":190513,"line_start":596,"line_end":596,"column_start":5,"column_end":81}},{"value":"/ subscriber expresses that it is `always` interested in the callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190518,"byte_end":190590,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190595,"byte_end":190604,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190981,"byte_end":190987,"line_start":609,"line_end":609,"column_start":12,"column_end":18},"name":"always","qualname":"<Interest>::always","value":"fn always() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is always interested in\n being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is always interested in","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190691,"byte_end":190766,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ being notified about a callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190771,"byte_end":190807,"line_start":604,"line_end":604,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190812,"byte_end":190815,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ If any subscriber expresses that it is `always()` interested in a given","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190820,"byte_end":190895,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ callsite, then the callsite will always be enabled.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190900,"byte_end":190955,"line_start":607,"line_end":607,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":190960,"byte_end":190969,"line_start":608,"line_end":608,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191179,"byte_end":191187,"line_start":616,"line_end":616,"column_start":12,"column_end":20},"name":"is_never","qualname":"<Interest>::is_never","value":"fn is_never<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is never interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is never interested in being notified","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191050,"byte_end":191124,"line_start":613,"line_end":613,"column_start":5,"column_end":79}},{"value":"/ about this callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191129,"byte_end":191153,"line_start":614,"line_end":614,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191158,"byte_end":191167,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191395,"byte_end":191407,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"is_sometimes","qualname":"<Interest>::is_sometimes","value":"fn is_sometimes<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is sometimes interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is sometimes interested in being notified","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191262,"byte_end":191340,"line_start":620,"line_end":620,"column_start":5,"column_end":83}},{"value":"/ about this callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191345,"byte_end":191369,"line_start":621,"line_end":621,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191374,"byte_end":191383,"line_start":622,"line_end":622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191616,"byte_end":191625,"line_start":630,"line_end":630,"column_start":12,"column_end":21},"name":"is_always","qualname":"<Interest>::is_always","value":"fn is_always<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is always interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is always interested in being notified","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191486,"byte_end":191561,"line_start":627,"line_end":627,"column_start":5,"column_end":80}},{"value":"/ about this callsite.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191566,"byte_end":191590,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":191595,"byte_end":191604,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192472,"byte_end":192484,"line_start":654,"line_end":654,"column_start":12,"column_end":24},"name":"NoSubscriber","qualname":"::subscriber::NoSubscriber","value":"","parent":null,"children":[],"decl_id":null,"docs":" A no-op [`Subscriber`].","sig":null,"attributes":[{"value":"/ A no-op [`Subscriber`].","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192230,"byte_end":192257,"line_start":649,"line_end":649,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192258,"byte_end":192261,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ [`NoSubscriber`] implements the [`Subscriber`] trait by never being enabled,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192262,"byte_end":192342,"line_start":651,"line_end":651,"column_start":1,"column_end":81}},{"value":"/ never being interested in any callsite, and dropping all spans and events.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192343,"byte_end":192421,"line_start":652,"line_end":652,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192547,"byte_end":192564,"line_start":658,"line_end":658,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<NoSubscriber as subscriber::Subscriber>::register_callsite","value":"fn register_callsite<'_>(&'_ Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":829},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192530,"byte_end":192539,"line_start":657,"line_end":657,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192657,"byte_end":192665,"line_start":662,"line_end":662,"column_start":8,"column_end":16},"name":"new_span","qualname":"<NoSubscriber as subscriber::Subscriber>::new_span","value":"fn new_span<'_, '_, '_>(&'_ Self, &'_ span::Attributes) -> span::Id","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":832},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192762,"byte_end":192767,"line_start":666,"line_end":666,"column_start":8,"column_end":13},"name":"event","qualname":"<NoSubscriber as subscriber::Subscriber>::event","value":"fn event<'_, '_, '_>(&'_ Self, &'_ Event)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":836},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192806,"byte_end":192812,"line_start":668,"line_end":668,"column_start":8,"column_end":14},"name":"record","qualname":"<NoSubscriber as subscriber::Subscriber>::record","value":"fn record<'_, '_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Record)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192877,"byte_end":192896,"line_start":670,"line_end":670,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"<NoSubscriber as subscriber::Subscriber>::record_follows_from","value":"fn record_follows_from<'_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":834},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192968,"byte_end":192975,"line_start":673,"line_end":673,"column_start":8,"column_end":15},"name":"enabled","qualname":"<NoSubscriber as subscriber::Subscriber>::enabled","value":"fn enabled<'_, '_, '_>(&'_ Self, &'_ Metadata) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":830},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192951,"byte_end":192960,"line_start":672,"line_end":672,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193047,"byte_end":193052,"line_start":677,"line_end":677,"column_start":8,"column_end":13},"name":"enter","qualname":"<NoSubscriber as subscriber::Subscriber>::enter","value":"fn enter<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":837},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193088,"byte_end":193092,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"exit","qualname":"<NoSubscriber as subscriber::Subscriber>::exit","value":"fn exit<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":838},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193211,"byte_end":193228,"line_start":686,"line_end":686,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Box<S> as subscriber::Subscriber>::register_callsite","value":"fn register_callsite<'_>(&'_ Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":829},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193194,"byte_end":193203,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193366,"byte_end":193373,"line_start":691,"line_end":691,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Box<S> as subscriber::Subscriber>::enabled","value":"fn enabled<'_, '_, '_>(&'_ Self, &'_ Metadata) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":830},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193349,"byte_end":193358,"line_start":690,"line_end":690,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193484,"byte_end":193498,"line_start":696,"line_end":696,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Box<S> as subscriber::Subscriber>::max_level_hint","value":"fn max_level_hint<'_>(&'_ Self) -> Option<LevelFilter>","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":831},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193467,"byte_end":193476,"line_start":695,"line_end":695,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193598,"byte_end":193606,"line_start":701,"line_end":701,"column_start":8,"column_end":16},"name":"new_span","qualname":"<Box<S> as subscriber::Subscriber>::new_span","value":"fn new_span<'_, '_, '_>(&'_ Self, &'_ span::Attributes) -> span::Id","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":832},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193581,"byte_end":193590,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193722,"byte_end":193728,"line_start":706,"line_end":706,"column_start":8,"column_end":14},"name":"record","qualname":"<Box<S> as subscriber::Subscriber>::record","value":"fn record<'_, '_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Record)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193705,"byte_end":193714,"line_start":705,"line_end":705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193853,"byte_end":193872,"line_start":711,"line_end":711,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"<Box<S> as subscriber::Subscriber>::record_follows_from","value":"fn record_follows_from<'_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":834},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193836,"byte_end":193845,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194004,"byte_end":194017,"line_start":716,"line_end":716,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"<Box<S> as subscriber::Subscriber>::event_enabled","value":"fn event_enabled<'_, '_, '_>(&'_ Self, &'_ Event) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":835},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193987,"byte_end":193996,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194125,"byte_end":194130,"line_start":721,"line_end":721,"column_start":8,"column_end":13},"name":"event","qualname":"<Box<S> as subscriber::Subscriber>::event","value":"fn event<'_, '_, '_>(&'_ Self, &'_ Event)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":836},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194108,"byte_end":194117,"line_start":720,"line_end":720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194222,"byte_end":194227,"line_start":726,"line_end":726,"column_start":8,"column_end":13},"name":"enter","qualname":"<Box<S> as subscriber::Subscriber>::enter","value":"fn enter<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":837},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194205,"byte_end":194214,"line_start":725,"line_end":725,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194316,"byte_end":194320,"line_start":731,"line_end":731,"column_start":8,"column_end":12},"name":"exit","qualname":"<Box<S> as subscriber::Subscriber>::exit","value":"fn exit<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":838},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194299,"byte_end":194308,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194408,"byte_end":194418,"line_start":736,"line_end":736,"column_start":8,"column_end":18},"name":"clone_span","qualname":"<Box<S> as subscriber::Subscriber>::clone_span","value":"fn clone_span<'_, '_>(&'_ Self, &'_ span::Id) -> span::Id","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":839},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194391,"byte_end":194400,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194520,"byte_end":194529,"line_start":741,"line_end":741,"column_start":8,"column_end":17},"name":"try_close","qualname":"<Box<S> as subscriber::Subscriber>::try_close","value":"fn try_close<'_>(&'_ Self, span::Id) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":841},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194503,"byte_end":194512,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194650,"byte_end":194659,"line_start":747,"line_end":747,"column_start":8,"column_end":17},"name":"drop_span","qualname":"<Box<S> as subscriber::Subscriber>::drop_span","value":"fn drop_span<'_>(&'_ Self, span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":840},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194608,"byte_end":194617,"line_start":745,"line_end":745,"column_start":5,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194622,"byte_end":194642,"line_start":746,"line_end":746,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194748,"byte_end":194760,"line_start":752,"line_end":752,"column_start":8,"column_end":20},"name":"current_span","qualname":"<Box<S> as subscriber::Subscriber>::current_span","value":"fn current_span<'_>(&'_ Self) -> span::Current","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":842},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194731,"byte_end":194740,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194859,"byte_end":194871,"line_start":757,"line_end":757,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Box<S> as subscriber::Subscriber>::downcast_raw","value":"unsafe fn downcast_raw<'_>(&'_ Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":843},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":194835,"byte_end":194844,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195158,"byte_end":195175,"line_start":771,"line_end":771,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Arc<S> as subscriber::Subscriber>::register_callsite","value":"fn register_callsite<'_>(&'_ Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":829},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195141,"byte_end":195150,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195313,"byte_end":195320,"line_start":776,"line_end":776,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Arc<S> as subscriber::Subscriber>::enabled","value":"fn enabled<'_, '_, '_>(&'_ Self, &'_ Metadata) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":830},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195296,"byte_end":195305,"line_start":775,"line_end":775,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195431,"byte_end":195445,"line_start":781,"line_end":781,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Arc<S> as subscriber::Subscriber>::max_level_hint","value":"fn max_level_hint<'_>(&'_ Self) -> Option<LevelFilter>","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":831},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195414,"byte_end":195423,"line_start":780,"line_end":780,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195545,"byte_end":195553,"line_start":786,"line_end":786,"column_start":8,"column_end":16},"name":"new_span","qualname":"<Arc<S> as subscriber::Subscriber>::new_span","value":"fn new_span<'_, '_, '_>(&'_ Self, &'_ span::Attributes) -> span::Id","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":832},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195528,"byte_end":195537,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195669,"byte_end":195675,"line_start":791,"line_end":791,"column_start":8,"column_end":14},"name":"record","qualname":"<Arc<S> as subscriber::Subscriber>::record","value":"fn record<'_, '_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Record)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195652,"byte_end":195661,"line_start":790,"line_end":790,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195800,"byte_end":195819,"line_start":796,"line_end":796,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"<Arc<S> as subscriber::Subscriber>::record_follows_from","value":"fn record_follows_from<'_, '_, '_>(&'_ Self, &'_ span::Id, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":834},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195783,"byte_end":195792,"line_start":795,"line_end":795,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195951,"byte_end":195964,"line_start":801,"line_end":801,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"<Arc<S> as subscriber::Subscriber>::event_enabled","value":"fn event_enabled<'_, '_, '_>(&'_ Self, &'_ Event) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":835},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195934,"byte_end":195943,"line_start":800,"line_end":800,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196072,"byte_end":196077,"line_start":806,"line_end":806,"column_start":8,"column_end":13},"name":"event","qualname":"<Arc<S> as subscriber::Subscriber>::event","value":"fn event<'_, '_, '_>(&'_ Self, &'_ Event)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":836},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196055,"byte_end":196064,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196169,"byte_end":196174,"line_start":811,"line_end":811,"column_start":8,"column_end":13},"name":"enter","qualname":"<Arc<S> as subscriber::Subscriber>::enter","value":"fn enter<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":837},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196152,"byte_end":196161,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196263,"byte_end":196267,"line_start":816,"line_end":816,"column_start":8,"column_end":12},"name":"exit","qualname":"<Arc<S> as subscriber::Subscriber>::exit","value":"fn exit<'_, '_>(&'_ Self, &'_ span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":838},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196246,"byte_end":196255,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196355,"byte_end":196365,"line_start":821,"line_end":821,"column_start":8,"column_end":18},"name":"clone_span","qualname":"<Arc<S> as subscriber::Subscriber>::clone_span","value":"fn clone_span<'_, '_>(&'_ Self, &'_ span::Id) -> span::Id","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":839},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196338,"byte_end":196347,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196467,"byte_end":196476,"line_start":826,"line_end":826,"column_start":8,"column_end":17},"name":"try_close","qualname":"<Arc<S> as subscriber::Subscriber>::try_close","value":"fn try_close<'_>(&'_ Self, span::Id) -> bool","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":841},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196450,"byte_end":196459,"line_start":825,"line_end":825,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196597,"byte_end":196606,"line_start":832,"line_end":832,"column_start":8,"column_end":17},"name":"drop_span","qualname":"<Arc<S> as subscriber::Subscriber>::drop_span","value":"fn drop_span<'_>(&'_ Self, span::Id)","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":840},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196555,"byte_end":196564,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196569,"byte_end":196589,"line_start":831,"line_end":831,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196695,"byte_end":196707,"line_start":837,"line_end":837,"column_start":8,"column_end":20},"name":"current_span","qualname":"<Arc<S> as subscriber::Subscriber>::current_span","value":"fn current_span<'_>(&'_ Self) -> span::Current","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":842},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196678,"byte_end":196687,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196806,"byte_end":196818,"line_start":842,"line_end":842,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Arc<S> as subscriber::Subscriber>::downcast_raw","value":"unsafe fn downcast_raw<'_>(&'_ Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":828},"children":[],"decl_id":{"krate":0,"index":843},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":196782,"byte_end":196791,"line_start":841,"line_end":841,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":949},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8968,"byte_end":8974,"line_start":294,"line_end":294,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":23284,"byte_end":23299,"line_start":275,"line_end":275,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26538,"byte_end":26553,"line_start":361,"line_end":361,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27030,"byte_end":27040,"line_start":379,"line_end":379,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27235,"byte_end":27245,"line_start":388,"line_end":388,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27270,"byte_end":27280,"line_start":390,"line_end":390,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27415,"byte_end":27425,"line_start":396,"line_end":396,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27593,"byte_end":27602,"line_start":407,"line_end":407,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":31920,"byte_end":31931,"line_start":539,"line_end":539,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":32768,"byte_end":32777,"line_start":563,"line_end":563,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45869,"byte_end":45890,"line_start":300,"line_end":300,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46091,"byte_end":46112,"line_start":308,"line_end":308,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46309,"byte_end":46330,"line_start":316,"line_end":316,"column_start":23,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46340,"byte_end":46361,"line_start":318,"line_end":318,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":48976,"byte_end":48984,"line_start":405,"line_end":405,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57954,"byte_end":57962,"line_start":645,"line_end":645,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58115,"byte_end":58123,"line_start":652,"line_end":652,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58333,"byte_end":58341,"line_start":660,"line_end":660,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58516,"byte_end":58525,"line_start":671,"line_end":671,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58715,"byte_end":58720,"line_start":680,"line_end":680,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":59573,"byte_end":59580,"line_start":712,"line_end":712,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":59899,"byte_end":59906,"line_start":723,"line_end":723,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":60069,"byte_end":60081,"line_start":733,"line_end":733,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66559,"byte_end":66564,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84155,"byte_end":84166,"line_start":384,"line_end":384,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84327,"byte_end":84335,"line_start":390,"line_end":390,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84500,"byte_end":84501,"line_start":396,"line_end":396,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":87709,"byte_end":87717,"line_start":519,"line_end":519,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":87777,"byte_end":87785,"line_start":520,"line_end":520,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90223,"byte_end":90232,"line_start":602,"line_end":602,"column_start":41,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90265,"byte_end":90274,"line_start":604,"line_end":604,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90455,"byte_end":90458,"line_start":610,"line_end":610,"column_start":65,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90529,"byte_end":90532,"line_start":612,"line_end":612,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90716,"byte_end":90722,"line_start":622,"line_end":622,"column_start":32,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90741,"byte_end":90747,"line_start":623,"line_end":623,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":91219,"byte_end":91231,"line_start":635,"line_end":635,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92110,"byte_end":92122,"line_start":666,"line_end":666,"column_start":49,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92148,"byte_end":92160,"line_start":668,"line_end":668,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92340,"byte_end":92352,"line_start":677,"line_end":677,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92504,"byte_end":92516,"line_start":683,"line_end":683,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92694,"byte_end":92704,"line_start":691,"line_end":691,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92730,"byte_end":92740,"line_start":693,"line_end":693,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92919,"byte_end":92929,"line_start":702,"line_end":702,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":93883,"byte_end":93888,"line_start":732,"line_end":732,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":93907,"byte_end":93912,"line_start":733,"line_end":733,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94027,"byte_end":94033,"line_start":738,"line_end":738,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94066,"byte_end":94072,"line_start":740,"line_end":740,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94258,"byte_end":94263,"line_start":750,"line_end":750,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94756,"byte_end":94761,"line_start":767,"line_end":767,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94883,"byte_end":94888,"line_start":773,"line_end":773,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94970,"byte_end":94975,"line_start":779,"line_end":779,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95105,"byte_end":95110,"line_start":785,"line_end":785,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95129,"byte_end":95134,"line_start":787,"line_end":787,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95298,"byte_end":95303,"line_start":797,"line_end":797,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95567,"byte_end":95575,"line_start":811,"line_end":811,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98612,"byte_end":98620,"line_start":907,"line_end":907,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98862,"byte_end":98870,"line_start":916,"line_end":916,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":99054,"byte_end":99062,"line_start":924,"line_end":924,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":99086,"byte_end":99094,"line_start":926,"line_end":926,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100272,"byte_end":100276,"line_start":960,"line_end":960,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100612,"byte_end":100620,"line_start":976,"line_end":976,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":102563,"byte_end":102571,"line_start":1037,"line_end":1037,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":102990,"byte_end":102998,"line_start":1052,"line_end":1052,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119446,"byte_end":119454,"line_start":250,"line_end":250,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121841,"byte_end":121849,"line_start":335,"line_end":335,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":122914,"byte_end":122918,"line_start":368,"line_end":368,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":124169,"byte_end":124173,"line_start":408,"line_end":408,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":124987,"byte_end":124995,"line_start":443,"line_end":443,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":125027,"byte_end":125035,"line_start":445,"line_end":445,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127025,"byte_end":127030,"line_start":501,"line_end":501,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128149,"byte_end":128154,"line_start":537,"line_end":537,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128585,"byte_end":128600,"line_start":551,"line_end":551,"column_start":38,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128622,"byte_end":128627,"line_start":553,"line_end":553,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130209,"byte_end":130220,"line_start":604,"line_end":604,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130343,"byte_end":130354,"line_start":611,"line_end":611,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130471,"byte_end":130477,"line_start":618,"line_end":618,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130586,"byte_end":130597,"line_start":625,"line_end":625,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":136148,"byte_end":136159,"line_start":749,"line_end":749,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":136578,"byte_end":136589,"line_start":762,"line_end":762,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":137083,"byte_end":137094,"line_start":775,"line_end":775,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138390,"byte_end":138405,"line_start":809,"line_end":809,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138663,"byte_end":138684,"line_start":818,"line_end":818,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138986,"byte_end":139007,"line_start":828,"line_end":828,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143344,"byte_end":143349,"line_start":903,"line_end":903,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143504,"byte_end":143509,"line_start":910,"line_end":910,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144128,"byte_end":144133,"line_start":937,"line_end":937,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144302,"byte_end":144307,"line_start":944,"line_end":944,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145200,"byte_end":145211,"line_start":979,"line_end":979,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145360,"byte_end":145371,"line_start":986,"line_end":986,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146076,"byte_end":146087,"line_start":1013,"line_end":1013,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146264,"byte_end":146275,"line_start":1020,"line_end":1020,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151391,"byte_end":151393,"line_start":60,"line_end":60,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152523,"byte_end":152529,"line_start":97,"line_end":97,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152645,"byte_end":152655,"line_start":105,"line_end":105,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156316,"byte_end":156322,"line_start":215,"line_end":215,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157293,"byte_end":157300,"line_start":249,"line_end":249,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159600,"byte_end":159606,"line_start":316,"line_end":316,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159714,"byte_end":159720,"line_start":322,"line_end":322,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159825,"byte_end":159831,"line_start":328,"line_end":328,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":160031,"byte_end":160037,"line_start":337,"line_end":337,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189760,"byte_end":189768,"line_start":580,"line_end":580,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192511,"byte_end":192523,"line_start":656,"line_end":656,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193147,"byte_end":193150,"line_start":681,"line_end":681,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195094,"byte_end":195097,"line_start":766,"line_end":766,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8543,"byte_end":8551,"line_start":271,"line_end":271,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8561,"byte_end":8571,"line_start":272,"line_end":272,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":166}},{"kind":"Mod","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8581,"byte_end":8586,"line_start":273,"line_end":273,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":320}},{"kind":"Mod","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8596,"byte_end":8601,"line_start":274,"line_end":274,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":350}},{"kind":"Mod","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8611,"byte_end":8619,"line_start":275,"line_end":275,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":572}},{"kind":"Mod","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8641,"byte_end":8645,"line_start":277,"line_end":277,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":733}},{"kind":"Mod","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/lib.rs","byte_start":8678,"byte_end":8688,"line_start":279,"line_end":279,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":800}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":17439,"byte_end":17443,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":70}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":23284,"byte_end":23299,"line_start":275,"line_end":275,"column_start":6,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":26538,"byte_end":26553,"line_start":361,"line_end":361,"column_start":19,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":955},"to":{"krate":0,"index":70}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27030,"byte_end":27040,"line_start":379,"line_end":379,"column_start":20,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27235,"byte_end":27245,"line_start":388,"line_end":388,"column_start":13,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27270,"byte_end":27280,"line_start":390,"line_end":390,"column_start":21,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27415,"byte_end":27425,"line_start":396,"line_end":396,"column_start":15,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":10526}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":27593,"byte_end":27602,"line_start":407,"line_end":407,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":31920,"byte_end":31931,"line_start":539,"line_end":539,"column_start":10,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/callsite.rs","byte_start":32768,"byte_end":32777,"line_start":563,"line_end":563,"column_start":10,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":45869,"byte_end":45890,"line_start":300,"line_end":300,"column_start":21,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46091,"byte_end":46112,"line_start":308,"line_end":308,"column_start":23,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46309,"byte_end":46330,"line_start":316,"line_end":316,"column_start":23,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":46340,"byte_end":46361,"line_start":318,"line_end":318,"column_start":6,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":48976,"byte_end":48984,"line_start":405,"line_end":405,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":57954,"byte_end":57962,"line_start":645,"line_end":645,"column_start":18,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58115,"byte_end":58123,"line_start":652,"line_end":652,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58333,"byte_end":58341,"line_start":660,"line_end":660,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58516,"byte_end":58525,"line_start":671,"line_end":671,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":58715,"byte_end":58720,"line_start":680,"line_end":680,"column_start":6,"column_end":11},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":59573,"byte_end":59580,"line_start":712,"line_end":712,"column_start":10,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":59899,"byte_end":59906,"line_start":723,"line_end":723,"column_start":19,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/dispatcher.rs","byte_start":60069,"byte_end":60081,"line_start":733,"line_end":733,"column_start":15,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":971},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/event.rs","byte_start":66559,"byte_end":66564,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":82792,"byte_end":82798,"line_start":335,"line_end":335,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":949},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84155,"byte_end":84166,"line_start":384,"line_end":384,"column_start":29,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":9988},"to":{"krate":0,"index":387}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84327,"byte_end":84335,"line_start":390,"line_end":390,"column_start":29,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":2,"index":10069},"to":{"krate":0,"index":387}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":84500,"byte_end":84501,"line_start":396,"line_end":396,"column_start":19,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":412},"to":{"krate":0,"index":387}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":87709,"byte_end":87717,"line_start":519,"line_end":519,"column_start":58,"column_end":66},"kind":{"Impl":{"id":50}},"from":{"krate":2,"index":28046},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":87777,"byte_end":87785,"line_start":520,"line_end":520,"column_start":54,"column_end":62},"kind":{"Impl":{"id":51}},"from":{"krate":2,"index":28046},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90223,"byte_end":90232,"line_start":602,"line_end":602,"column_start":41,"column_end":50},"kind":{"Impl":{"id":54}},"from":{"krate":2,"index":48689},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90265,"byte_end":90274,"line_start":604,"line_end":604,"column_start":25,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":2,"index":48689},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90455,"byte_end":90458,"line_start":610,"line_end":610,"column_start":65,"column_end":68},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90529,"byte_end":90532,"line_start":612,"line_end":612,"column_start":49,"column_end":52},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90716,"byte_end":90722,"line_start":622,"line_end":622,"column_start":32,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":90741,"byte_end":90747,"line_start":623,"line_end":623,"column_start":16,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":91219,"byte_end":91231,"line_start":635,"line_end":635,"column_start":44,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":467},"to":{"krate":0,"index":70}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92110,"byte_end":92122,"line_start":666,"line_end":666,"column_start":49,"column_end":61},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1004},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92148,"byte_end":92160,"line_start":668,"line_end":668,"column_start":19,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1004},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92340,"byte_end":92352,"line_start":677,"line_end":677,"column_start":38,"column_end":50},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1004},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92504,"byte_end":92516,"line_start":683,"line_end":683,"column_start":40,"column_end":52},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1004},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92694,"byte_end":92704,"line_start":691,"line_end":691,"column_start":47,"column_end":57},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92730,"byte_end":92740,"line_start":693,"line_end":693,"column_start":19,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":92919,"byte_end":92929,"line_start":702,"line_end":702,"column_start":36,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":93883,"byte_end":93888,"line_start":732,"line_end":732,"column_start":32,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":989},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":93907,"byte_end":93912,"line_start":733,"line_end":733,"column_start":16,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":989},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94027,"byte_end":94033,"line_start":738,"line_end":738,"column_start":42,"column_end":48},"kind":{"Impl":{"id":70}},"from":{"krate":2,"index":47485},"to":{"krate":0,"index":949}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94066,"byte_end":94072,"line_start":740,"line_end":740,"column_start":26,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":2,"index":47485},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94258,"byte_end":94263,"line_start":750,"line_end":750,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94756,"byte_end":94761,"line_start":767,"line_end":767,"column_start":23,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94883,"byte_end":94888,"line_start":773,"line_end":773,"column_start":21,"column_end":26},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":94970,"byte_end":94975,"line_start":779,"line_end":779,"column_start":20,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95105,"byte_end":95110,"line_start":785,"line_end":785,"column_start":13,"column_end":18},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95129,"byte_end":95134,"line_start":787,"line_end":787,"column_start":15,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":10526}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95298,"byte_end":95303,"line_start":797,"line_end":797,"column_start":16,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":95567,"byte_end":95575,"line_start":811,"line_end":811,"column_start":6,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98612,"byte_end":98620,"line_start":907,"line_end":907,"column_start":21,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":98862,"byte_end":98870,"line_start":916,"line_end":916,"column_start":23,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":99054,"byte_end":99062,"line_start":924,"line_end":924,"column_start":13,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":99086,"byte_end":99094,"line_start":926,"line_end":926,"column_start":20,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100272,"byte_end":100276,"line_start":960,"line_end":960,"column_start":19,"column_end":23},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":999},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":100612,"byte_end":100620,"line_start":976,"line_end":976,"column_start":10,"column_end":18},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":102563,"byte_end":102571,"line_start":1037,"line_end":1037,"column_start":25,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":102990,"byte_end":102998,"line_start":1052,"line_end":1052,"column_start":27,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/field.rs","byte_start":103849,"byte_end":103855,"line_start":1078,"line_end":1078,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2857},"to":{"krate":0,"index":569}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":119446,"byte_end":119454,"line_start":250,"line_end":250,"column_start":10,"column_end":18},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":121841,"byte_end":121849,"line_start":335,"line_end":335,"column_start":25,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":122914,"byte_end":122918,"line_start":368,"line_end":368,"column_start":6,"column_end":10},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":124169,"byte_end":124173,"line_start":408,"line_end":408,"column_start":21,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":124987,"byte_end":124995,"line_start":443,"line_end":443,"column_start":17,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":125027,"byte_end":125035,"line_start":445,"line_end":445,"column_start":24,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":127025,"byte_end":127030,"line_start":501,"line_end":501,"column_start":6,"column_end":11},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128149,"byte_end":128154,"line_start":537,"line_end":537,"column_start":23,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128585,"byte_end":128600,"line_start":551,"line_end":551,"column_start":38,"column_end":53},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1320},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":128622,"byte_end":128627,"line_start":553,"line_end":553,"column_start":18,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130209,"byte_end":130220,"line_start":604,"line_end":604,"column_start":22,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130343,"byte_end":130354,"line_start":611,"line_end":611,"column_start":30,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130471,"byte_end":130477,"line_start":618,"line_end":618,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":2,"index":47485},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":130586,"byte_end":130597,"line_start":625,"line_end":625,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":136148,"byte_end":136159,"line_start":749,"line_end":749,"column_start":23,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":136578,"byte_end":136589,"line_start":762,"line_end":762,"column_start":21,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":137083,"byte_end":137094,"line_start":775,"line_end":775,"column_start":18,"column_end":29},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138390,"byte_end":138405,"line_start":809,"line_end":809,"column_start":23,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138663,"byte_end":138684,"line_start":818,"line_end":818,"column_start":23,"column_end":44},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":138986,"byte_end":139007,"line_start":828,"line_end":828,"column_start":28,"column_end":49},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143344,"byte_end":143349,"line_start":903,"line_end":903,"column_start":33,"column_end":38},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":143504,"byte_end":143509,"line_start":910,"line_end":910,"column_start":21,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144128,"byte_end":144133,"line_start":937,"line_end":937,"column_start":14,"column_end":19},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":144302,"byte_end":144307,"line_start":944,"line_end":944,"column_start":34,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145200,"byte_end":145211,"line_start":979,"line_end":979,"column_start":27,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":145360,"byte_end":145371,"line_start":986,"line_end":986,"column_start":21,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146076,"byte_end":146087,"line_start":1013,"line_end":1013,"column_start":14,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/metadata.rs","byte_start":146264,"byte_end":146275,"line_start":1020,"line_end":1020,"column_start":28,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":151391,"byte_end":151393,"line_start":60,"line_end":60,"column_start":6,"column_end":8},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152523,"byte_end":152529,"line_start":97,"line_end":97,"column_start":27,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":2,"index":47485},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":152645,"byte_end":152655,"line_start":105,"line_end":105,"column_start":10,"column_end":20},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":156316,"byte_end":156322,"line_start":215,"line_end":215,"column_start":10,"column_end":16},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":157293,"byte_end":157300,"line_start":249,"line_end":249,"column_start":6,"column_end":13},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159600,"byte_end":159606,"line_start":316,"line_end":316,"column_start":32,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":2,"index":47485},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159714,"byte_end":159720,"line_start":322,"line_end":322,"column_start":32,"column_end":38},"kind":{"Impl":{"id":122}},"from":{"krate":2,"index":47485},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":159825,"byte_end":159831,"line_start":328,"line_end":328,"column_start":24,"column_end":30},"kind":{"Impl":{"id":123}},"from":{"krate":2,"index":47485},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/span.rs","byte_start":160031,"byte_end":160037,"line_start":337,"line_end":337,"column_start":32,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":2,"index":47485},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":189760,"byte_end":189768,"line_start":580,"line_end":580,"column_start":6,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":192511,"byte_end":192523,"line_start":656,"line_end":656,"column_start":21,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1411},"to":{"krate":0,"index":828}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":193147,"byte_end":193150,"line_start":681,"line_end":681,"column_start":24,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":828}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.29/src/subscriber.rs","byte_start":195094,"byte_end":195097,"line_start":766,"line_end":766,"column_start":24,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":6652},"to":{"krate":0,"index":828}}]}