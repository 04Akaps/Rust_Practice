{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1","program":"/Users/yuhojin/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bytemuck_derive","--edition=2018","/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=24df01229286e9d4","-C","extra-filename=-24df01229286e9d4","--out-dir","/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/smartContract/target/rls/debug/deps","-L","dependency=/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/smartContract/target/rls/debug/deps","--extern","proc_macro2=/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/smartContract/target/rls/debug/deps/libproc_macro2-cfa02782c128afaa.rlib","--extern","quote=/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/smartContract/target/rls/debug/deps/libquote-eb520ae6df58eefd.rlib","--extern","syn=/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/smartContract/target/rls/debug/deps/libsyn-7bc04dbee5641336.rlib","--extern","proc_macro","--cap-lints","allow","--error-format=json","--sysroot","/Users/yuhojin/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/yuhojin/Desktop/Rust/rust_tutorial/Project/smartContract/target/rls/debug/deps/libbytemuck_derive-24df01229286e9d4.dylib"},"prelude":{"crate_id":{"name":"bytemuck_derive","disambiguator":[3520052457974308818,0]},"crate_root":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src","external_crates":[{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","num":20,"id":{"name":"proc_macro","disambiguator":[18166776131305929452,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","num":21,"id":{"name":"proc_macro2","disambiguator":[569775920156393997,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","num":22,"id":{"name":"unicode_ident","disambiguator":[6338174262409780228,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","num":23,"id":{"name":"quote","disambiguator":[6402449132243415738,0]}},{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","num":24,"id":{"name":"syn","disambiguator":[17982617998130763130,0]}}],"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":0,"byte_end":7758,"line_start":1,"line_end":261,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":0,"byte_end":7758,"line_start":1,"line_end":261,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":259}],"decl_id":null,"docs":" Derive macros for [bytemuck](https://docs.rs/bytemuck) traits.\n","sig":null,"attributes":[{"value":"/ Derive macros for [bytemuck](https://docs.rs/bytemuck) traits.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1016,"byte_end":1026,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"derive_pod","qualname":"::derive_pod","value":"fn derive_pod(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Pod` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `Pod` trait for a struct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":336,"byte_end":375,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":376,"byte_end":379,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":380,"byte_end":457,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ for the `Pod` trait.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":458,"byte_end":482,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":483,"byte_end":486,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":487,"byte_end":562,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":563,"byte_end":566,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - All fields in the struct must implement `Pod`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":567,"byte_end":618,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ - The struct must be `#[repr(C)]` or `#[repr(transparent)]`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":619,"byte_end":682,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ - The struct must not contain any padding bytes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":683,"byte_end":734,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ - The struct contains no generic parameters","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":735,"byte_end":782,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":783,"byte_end":786,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":787,"byte_end":801,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":802,"byte_end":805,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":806,"byte_end":817,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::{Pod, Zeroable};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":818,"byte_end":861,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":862,"byte_end":865,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, Pod, Zeroable)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":866,"byte_end":907,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":908,"byte_end":922,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/ struct Test {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":923,"byte_end":940,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/   a: u16,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":941,"byte_end":954,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/   b: u16,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":955,"byte_end":968,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":969,"byte_end":974,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":975,"byte_end":982,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(Pod)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":983,"byte_end":1008,"line_start":39,"line_end":39,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1584,"byte_end":1604,"line_start":56,"line_end":56,"column_start":8,"column_end":28},"name":"derive_anybitpattern","qualname":"::derive_anybitpattern","value":"fn derive_anybitpattern(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `AnyBitPattern` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `AnyBitPattern` trait for a struct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1225,"byte_end":1274,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1275,"byte_end":1278,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1279,"byte_end":1356,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ for the `AnyBitPattern` trait.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1357,"byte_end":1391,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1392,"byte_end":1395,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1396,"byte_end":1471,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1472,"byte_end":1475,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ - All fields in the struct must to implement `AnyBitPattern`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1476,"byte_end":1540,"line_start":54,"line_end":54,"column_start":1,"column_end":65}},{"value":"proc_macro_derive(AnyBitPattern)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1541,"byte_end":1576,"line_start":55,"line_end":55,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2347,"byte_end":2362,"line_start":87,"line_end":87,"column_start":8,"column_end":23},"name":"derive_zeroable","qualname":"::derive_zeroable","value":"fn derive_zeroable(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Zeroable` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `Zeroable` trait for a struct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1818,"byte_end":1862,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1863,"byte_end":1866,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1867,"byte_end":1944,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ for the `Zeroable` trait.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1945,"byte_end":1974,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1975,"byte_end":1978,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":1979,"byte_end":2054,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2055,"byte_end":2058,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ - All fields in the struct must to implement `Zeroable`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2059,"byte_end":2118,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2119,"byte_end":2122,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2123,"byte_end":2137,"line_start":74,"line_end":74,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2138,"byte_end":2141,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2142,"byte_end":2153,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::{Zeroable};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2154,"byte_end":2192,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2193,"byte_end":2196,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, Zeroable)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2197,"byte_end":2233,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2234,"byte_end":2248,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/ struct Test {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2249,"byte_end":2266,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/   a: u16,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2267,"byte_end":2280,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/   b: u16,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2281,"byte_end":2294,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2295,"byte_end":2300,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2301,"byte_end":2308,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(Zeroable)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2309,"byte_end":2339,"line_start":86,"line_end":86,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3410,"byte_end":3426,"line_start":116,"line_end":116,"column_start":8,"column_end":24},"name":"derive_no_uninit","qualname":"::derive_no_uninit","value":"fn derive_no_uninit(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `NoUninit` trait for a struct or enum","sig":null,"attributes":[{"value":"/ Derive the `NoUninit` trait for a struct or enum","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2571,"byte_end":2623,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2624,"byte_end":2627,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the type follows all the the safety requirements","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2628,"byte_end":2703,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ for the `NoUninit` trait.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2704,"byte_end":2733,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2734,"byte_end":2737,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2738,"byte_end":2813,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ (the rest of the constraints are guaranteed by the `NoUninit` subtrait bounds,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2814,"byte_end":2896,"line_start":102,"line_end":102,"column_start":1,"column_end":83}},{"value":"/ i.e. the type must be `Sized + Copy + 'static`):","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2897,"byte_end":2949,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2950,"byte_end":2953,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ If applied to a struct:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2954,"byte_end":2981,"line_start":105,"line_end":105,"column_start":1,"column_end":28}},{"value":"/ - All fields in the struct must implement `NoUninit`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":2982,"byte_end":3038,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ - The struct must be `#[repr(C)]` or `#[repr(transparent)]`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3039,"byte_end":3102,"line_start":107,"line_end":107,"column_start":1,"column_end":64}},{"value":"/ - The struct must not contain any padding bytes","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3103,"byte_end":3154,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ - The struct must contain no generic parameters","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3155,"byte_end":3206,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3207,"byte_end":3210,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ If applied to an enum:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3211,"byte_end":3237,"line_start":111,"line_end":111,"column_start":1,"column_end":27}},{"value":"/ - The enum must be explicit `#[repr(Int)]`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3238,"byte_end":3284,"line_start":112,"line_end":112,"column_start":1,"column_end":47}},{"value":"/ - All variants must be fieldless","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3285,"byte_end":3321,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ - The enum must contain no generic parameters","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3322,"byte_end":3371,"line_start":114,"line_end":114,"column_start":1,"column_end":50}},{"value":"proc_macro_derive(NoUninit)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3372,"byte_end":3402,"line_start":115,"line_end":115,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4456,"byte_end":4472,"line_start":142,"line_end":142,"column_start":8,"column_end":24},"name":"derive_maybe_pod","qualname":"::derive_maybe_pod","value":"fn derive_maybe_pod(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `CheckedBitPattern` trait for a struct or enum.","sig":null,"attributes":[{"value":"/ Derive the `CheckedBitPattern` trait for a struct or enum.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3635,"byte_end":3697,"line_start":125,"line_end":125,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3698,"byte_end":3701,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the type follows all the the safety requirements","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3702,"byte_end":3777,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ for the `CheckedBitPattern` trait and derives the required `Bits` type","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3778,"byte_end":3852,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ definition and `is_valid_bit_pattern` method for the type automatically.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3853,"byte_end":3929,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3930,"byte_end":3933,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":3934,"byte_end":4009,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/ (the rest of the constraints are guaranteed by the `CheckedBitPattern` subtrait bounds,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4010,"byte_end":4101,"line_start":132,"line_end":132,"column_start":1,"column_end":92}},{"value":"/ i.e. are guaranteed by the requirements of the `NoUninit` trait which `CheckedBitPattern`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4102,"byte_end":4195,"line_start":133,"line_end":133,"column_start":1,"column_end":94}},{"value":"/ is a subtrait of):","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4196,"byte_end":4218,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4219,"byte_end":4222,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ If applied to a struct:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4223,"byte_end":4250,"line_start":136,"line_end":136,"column_start":1,"column_end":28}},{"value":"/ - All fields must implement `CheckedBitPattern`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4251,"byte_end":4302,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4303,"byte_end":4306,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ If applied to an enum:","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4307,"byte_end":4333,"line_start":139,"line_end":139,"column_start":1,"column_end":27}},{"value":"/ - All requirements already checked by `NoUninit`, just impls the trait","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4334,"byte_end":4408,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"proc_macro_derive(CheckedBitPattern)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4409,"byte_end":4448,"line_start":141,"line_end":141,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5645,"byte_end":5663,"line_start":180,"line_end":180,"column_start":8,"column_end":26},"name":"derive_transparent","qualname":"::derive_transparent","value":"fn derive_transparent(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `TransparentWrapper` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `TransparentWrapper` trait for a struct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4690,"byte_end":4744,"line_start":151,"line_end":151,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4745,"byte_end":4748,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4749,"byte_end":4826,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ for the `TransparentWrapper` trait.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4827,"byte_end":4866,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4867,"byte_end":4870,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4871,"byte_end":4946,"line_start":156,"line_end":156,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4947,"byte_end":4950,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ - The struct must be `#[repr(transparent)]`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4951,"byte_end":4998,"line_start":158,"line_end":158,"column_start":1,"column_end":48}},{"value":"/ - The struct must contain the `Wrapped` type","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":4999,"byte_end":5047,"line_start":159,"line_end":159,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5048,"byte_end":5051,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ If the struct only contains a single field, the `Wrapped` type will","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5052,"byte_end":5123,"line_start":161,"line_end":161,"column_start":1,"column_end":72}},{"value":"/ automatically be determined if there is more then one field in the struct,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5124,"byte_end":5202,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ you need to specify the `Wrapped` type using `#[transparent(T)]`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5203,"byte_end":5271,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5272,"byte_end":5275,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5276,"byte_end":5290,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5291,"byte_end":5294,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5295,"byte_end":5306,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::TransparentWrapper;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5307,"byte_end":5353,"line_start":168,"line_end":168,"column_start":1,"column_end":47}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5354,"byte_end":5389,"line_start":169,"line_end":169,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5390,"byte_end":5393,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, TransparentWrapper)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5394,"byte_end":5440,"line_start":171,"line_end":171,"column_start":1,"column_end":47}},{"value":"/ #[repr(transparent)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5441,"byte_end":5465,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/ #[transparent(u16)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5466,"byte_end":5489,"line_start":173,"line_end":173,"column_start":1,"column_end":24}},{"value":"/ struct Test<T> {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5490,"byte_end":5510,"line_start":174,"line_end":174,"column_start":1,"column_end":21}},{"value":"/   inner: u16,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5511,"byte_end":5528,"line_start":175,"line_end":175,"column_start":1,"column_end":18}},{"value":"/   extra: PhantomData<T>,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5529,"byte_end":5557,"line_start":176,"line_end":176,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5558,"byte_end":5563,"line_start":177,"line_end":177,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5564,"byte_end":5571,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(TransparentWrapper, attributes(transparent))","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5572,"byte_end":5637,"line_start":179,"line_end":179,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6501,"byte_end":6518,"line_start":215,"line_end":215,"column_start":8,"column_end":25},"name":"derive_contiguous","qualname":"::derive_contiguous","value":"fn derive_contiguous(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Contiguous` trait for an enum","sig":null,"attributes":[{"value":"/ Derive the `Contiguous` trait for an enum","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5886,"byte_end":5931,"line_start":190,"line_end":190,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5932,"byte_end":5935,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the enum follows all the the safety requirements","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":5936,"byte_end":6011,"line_start":192,"line_end":192,"column_start":1,"column_end":76}},{"value":"/ for the `Contiguous` trait.","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6012,"byte_end":6043,"line_start":193,"line_end":193,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6044,"byte_end":6047,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6048,"byte_end":6123,"line_start":195,"line_end":195,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6124,"byte_end":6127,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ - The enum must be `#[repr(Int)]`","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6128,"byte_end":6165,"line_start":197,"line_end":197,"column_start":1,"column_end":38}},{"value":"/ - The enum must be fieldless","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6166,"byte_end":6198,"line_start":198,"line_end":198,"column_start":1,"column_end":33}},{"value":"/ - The enum discriminants must form a contiguous range","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6199,"byte_end":6256,"line_start":199,"line_end":199,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6257,"byte_end":6260,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6261,"byte_end":6275,"line_start":201,"line_end":201,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6276,"byte_end":6279,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6280,"byte_end":6291,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::{Contiguous};","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6292,"byte_end":6332,"line_start":204,"line_end":204,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6333,"byte_end":6336,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, Contiguous)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6337,"byte_end":6375,"line_start":206,"line_end":206,"column_start":1,"column_end":39}},{"value":"/ #[repr(u8)]","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6376,"byte_end":6391,"line_start":207,"line_end":207,"column_start":1,"column_end":16}},{"value":"/ enum Test {","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6392,"byte_end":6407,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/   A = 0,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6408,"byte_end":6420,"line_start":209,"line_end":209,"column_start":1,"column_end":13}},{"value":"/   B = 1,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6421,"byte_end":6433,"line_start":210,"line_end":210,"column_start":1,"column_end":13}},{"value":"/   C = 2,","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6434,"byte_end":6446,"line_start":211,"line_end":211,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6447,"byte_end":6452,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6453,"byte_end":6460,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(Contiguous)","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/lib.rs","byte_start":6461,"byte_end":6493,"line_start":214,"line_end":214,"column_start":1,"column_end":33}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":9023,"byte_end":9026,"line_start":46,"line_end":46,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":10496,"byte_end":10509,"line_start":100,"line_end":100,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":11044,"byte_end":11052,"line_start":120,"line_end":120,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":11482,"byte_end":11490,"line_start":136,"line_end":136,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":13348,"byte_end":13365,"line_start":195,"line_end":195,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":15271,"byte_end":15289,"line_start":250,"line_end":250,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":15851,"byte_end":15869,"line_start":268,"line_end":268,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":17440,"byte_end":17450,"line_start":320,"line_end":320,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":28842,"byte_end":28869,"line_start":730,"line_end":730,"column_start":3,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":29035,"byte_end":29062,"line_start":738,"line_end":738,"column_start":7,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":9023,"byte_end":9026,"line_start":46,"line_end":46,"column_start":20,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":10496,"byte_end":10509,"line_start":100,"line_end":100,"column_start":20,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":63},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":11044,"byte_end":11052,"line_start":120,"line_end":120,"column_start":20,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":69},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":11482,"byte_end":11490,"line_start":136,"line_end":136,"column_start":20,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":74},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":13348,"byte_end":13365,"line_start":195,"line_end":195,"column_start":20,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":15271,"byte_end":15289,"line_start":250,"line_end":250,"column_start":6,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":15851,"byte_end":15869,"line_start":268,"line_end":268,"column_start":20,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":89},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":17440,"byte_end":17450,"line_start":320,"line_end":320,"column_start":20,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":102},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":28842,"byte_end":28869,"line_start":730,"line_end":730,"column_start":3,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yuhojin/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.2.1/src/traits.rs","byte_start":29035,"byte_end":29062,"line_start":738,"line_end":738,"column_start":7,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":8596}}]}